// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import AppStoreConnectApiCore
import URLQueryEncoder

extension EnterpriseAPIEndpoint.V1.AppEncryptionDeclarationDocuments {
	public func id(_ id: String) -> WithID {
		WithID(path: "\(path)/\(id)")
	}

	public struct WithID {
		/// Path: `/v1/appEncryptionDeclarationDocuments/{id}`
		public let path: String

		public func get(fieldsAppEncryptionDeclarationDocuments: [FieldsAppEncryptionDeclarationDocuments]? = nil) -> Request<AppStoreConnectEnterpriseApi.AppEncryptionDeclarationDocumentResponse> {
			Request(path: path, method: "GET", query: makeGetQuery(fieldsAppEncryptionDeclarationDocuments), id: "appEncryptionDeclarationDocuments_getInstance")
		}

		private func makeGetQuery(_ fieldsAppEncryptionDeclarationDocuments: [FieldsAppEncryptionDeclarationDocuments]?) -> [(String, String?)] {
			let encoder = URLQueryEncoder()
			encoder.encode(fieldsAppEncryptionDeclarationDocuments, forKey: "fields[appEncryptionDeclarationDocuments]", explode: false)
			return encoder.items
		}

		public enum FieldsAppEncryptionDeclarationDocuments: String, Codable, CaseIterable {
			case fileSize
			case fileName
			case assetToken
			case downloadURL = "downloadUrl"
			case sourceFileChecksum
			case uploadOperations
			case assetDeliveryState
		}

		public func patch(_ body: AppStoreConnectEnterpriseApi.AppEncryptionDeclarationDocumentUpdateRequest) -> Request<AppStoreConnectEnterpriseApi.AppEncryptionDeclarationDocumentResponse> {
			Request(path: path, method: "PATCH", body: body, id: "appEncryptionDeclarationDocuments_updateInstance")
		}
	}
}
