// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import AppStoreConnectApiCore
import URLQueryEncoder

extension EnterpriseAPIEndpoint {
	public static var userInvitations: UserInvitations {
		UserInvitations(path: "/v1/userInvitations")
	}

	public struct UserInvitations {
		/// Path: `/v1/userInvitations`
		public let path: String

		/// List Invited Users
		public func get(parameters: GetParameters? = nil) -> Request<AppStoreConnectEnterpriseApi.UserInvitationsResponse> {
			Request(path: path, method: "GET", query: parameters?.asQuery, id: "userInvitations-get_collection")
		}

		public struct GetParameters {
			public var filterEmail: [String]?
			public var filterRoles: [FilterRoles]?
			public var sort: [Sort]?
			public var fieldsUserInvitations: [FieldsUserInvitations]?
			public var limit: Int?

			public enum FilterRoles: String, Codable, CaseIterable {
				case admin = "ADMIN"
				case accountHolder = "ACCOUNT_HOLDER"
				case developer = "DEVELOPER"
			}

			public enum Sort: String, Codable, CaseIterable {
				case email
				case minusemail = "-email"
				case lastName
				case minuslastName = "-lastName"
			}

			public enum FieldsUserInvitations: String, Codable, CaseIterable {
				case email
				case expirationDate
				case firstName
				case lastName
				case roles
			}

			public init(filterEmail: [String]? = nil, filterRoles: [FilterRoles]? = nil, sort: [Sort]? = nil, fieldsUserInvitations: [FieldsUserInvitations]? = nil, limit: Int? = nil) {
				self.filterEmail = filterEmail
				self.filterRoles = filterRoles
				self.sort = sort
				self.fieldsUserInvitations = fieldsUserInvitations
				self.limit = limit
			}

			public var asQuery: [(String, String?)] {
				let encoder = URLQueryEncoder(explode: false)
				encoder.encode(filterEmail, forKey: "filter[email]")
				encoder.encode(filterRoles, forKey: "filter[roles]")
				encoder.encode(sort, forKey: "sort")
				encoder.encode(fieldsUserInvitations, forKey: "fields[userInvitations]")
				encoder.encode(limit, forKey: "limit")
				return encoder.items
			}
		}

		/// Invite a User
		public func post(_ body: AppStoreConnectEnterpriseApi.UserInvitationCreateRequest) -> Request<AppStoreConnectEnterpriseApi.UserInvitationResponse> {
			Request(path: path, method: "POST", body: body, id: "userInvitations-create_instance")
		}
	}
}
