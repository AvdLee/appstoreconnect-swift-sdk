// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import AppStoreConnectApiCore
import URLQueryEncoder

extension EnterpriseAPIEndpoint {
	public static var users: Users {
		Users(path: "/v1/users")
	}

	public struct Users {
		/// Path: `/v1/users`
		public let path: String

		/// List Users
		public func get(parameters: GetParameters? = nil) -> Request<AppStoreConnectEnterpriseApi.UsersResponse> {
			Request(path: path, method: "GET", query: parameters?.asQuery, id: "users-get_collection")
		}

		public struct GetParameters {
			public var filterRoles: [FilterRoles]?
			public var filterUsername: [String]?
			public var sort: [Sort]?
			public var fieldsUsers: [FieldsUsers]?
			public var limit: Int?

			public enum FilterRoles: String, Codable, CaseIterable {
				case admin = "ADMIN"
				case accountHolder = "ACCOUNT_HOLDER"
				case developer = "DEVELOPER"
			}

			public enum Sort: String, Codable, CaseIterable {
				case lastName
				case minuslastName = "-lastName"
				case username
				case minususername = "-username"
			}

			public enum FieldsUsers: String, Codable, CaseIterable {
				case firstName
				case lastName
				case roles
				case username
			}

			public init(filterRoles: [FilterRoles]? = nil, filterUsername: [String]? = nil, sort: [Sort]? = nil, fieldsUsers: [FieldsUsers]? = nil, limit: Int? = nil) {
				self.filterRoles = filterRoles
				self.filterUsername = filterUsername
				self.sort = sort
				self.fieldsUsers = fieldsUsers
				self.limit = limit
			}

			public var asQuery: [(String, String?)] {
				let encoder = URLQueryEncoder(explode: false)
				encoder.encode(filterRoles, forKey: "filter[roles]")
				encoder.encode(filterUsername, forKey: "filter[username]")
				encoder.encode(sort, forKey: "sort")
				encoder.encode(fieldsUsers, forKey: "fields[users]")
				encoder.encode(limit, forKey: "limit")
				return encoder.items
			}
		}
	}
}
