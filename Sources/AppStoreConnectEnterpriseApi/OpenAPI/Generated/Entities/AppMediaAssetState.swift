// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct AppMediaAssetState: Codable {
	public var errors: [AppMediaStateError]?
	public var warnings: [AppMediaStateError]?
	public var state: State?

	public enum State: String, Codable, CaseIterable {
		case awaitingUpload = "AWAITING_UPLOAD"
		case uploadComplete = "UPLOAD_COMPLETE"
		case complete = "COMPLETE"
		case failed = "FAILED"
	}

	public init(errors: [AppMediaStateError]? = nil, warnings: [AppMediaStateError]? = nil, state: State? = nil) {
		self.errors = errors
		self.warnings = warnings
		self.state = state
	}

	public init(from decoder: Decoder) throws {
		let values = try decoder.container(keyedBy: StringCodingKey.self)
		self.errors = try values.decodeIfPresent([AppMediaStateError].self, forKey: "errors")
		self.warnings = try values.decodeIfPresent([AppMediaStateError].self, forKey: "warnings")
		self.state = try values.decodeIfPresent(State.self, forKey: "state")
	}

	public func encode(to encoder: Encoder) throws {
		var values = encoder.container(keyedBy: StringCodingKey.self)
		try values.encodeIfPresent(errors, forKey: "errors")
		try values.encodeIfPresent(warnings, forKey: "warnings")
		try values.encodeIfPresent(state, forKey: "state")
	}
}
