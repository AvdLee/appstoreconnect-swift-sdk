// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct DeviceFamilyOsVersionFilter: Codable {
	public var deviceFamily: DeviceFamily?
	public var minimumOsInclusive: String?
	public var maximumOsInclusive: String?

	public init(deviceFamily: DeviceFamily? = nil, minimumOsInclusive: String? = nil, maximumOsInclusive: String? = nil) {
		self.deviceFamily = deviceFamily
		self.minimumOsInclusive = minimumOsInclusive
		self.maximumOsInclusive = maximumOsInclusive
	}

	public init(from decoder: Decoder) throws {
		let values = try decoder.container(keyedBy: StringCodingKey.self)
		self.deviceFamily = try values.decodeIfPresent(DeviceFamily.self, forKey: "deviceFamily")
		self.minimumOsInclusive = try values.decodeIfPresent(String.self, forKey: "minimumOsInclusive")
		self.maximumOsInclusive = try values.decodeIfPresent(String.self, forKey: "maximumOsInclusive")
	}

	public func encode(to encoder: Encoder) throws {
		var values = encoder.container(keyedBy: StringCodingKey.self)
		try values.encodeIfPresent(deviceFamily, forKey: "deviceFamily")
		try values.encodeIfPresent(minimumOsInclusive, forKey: "minimumOsInclusive")
		try values.encodeIfPresent(maximumOsInclusive, forKey: "maximumOsInclusive")
	}
}
