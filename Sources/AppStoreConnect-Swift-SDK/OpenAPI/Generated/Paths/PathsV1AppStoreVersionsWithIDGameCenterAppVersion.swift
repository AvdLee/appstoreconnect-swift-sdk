// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1.AppStoreVersions.WithID {
	public var gameCenterAppVersion: GameCenterAppVersion {
		GameCenterAppVersion(path: path + "/gameCenterAppVersion")
	}

	public struct GameCenterAppVersion {
		/// Path: `/v1/appStoreVersions/{id}/gameCenterAppVersion`
		public let path: String

		public func get(parameters: GetParameters? = nil) -> Request<AppStoreConnect_Swift_SDK.GameCenterAppVersionResponse> {
			Request(path: path, method: "GET", query: parameters?.asQuery, id: "appStoreVersions_gameCenterAppVersion_getToOneRelated")
		}

		public struct GetParameters {
			public var fieldsGameCenterAppVersions: [FieldsGameCenterAppVersions]?
			public var fieldsAppStoreVersions: [FieldsAppStoreVersions]?
			public var include: [Include]?
			public var limitCompatibilityVersions: Int?

			public enum FieldsGameCenterAppVersions: String, Codable, CaseIterable {
				case enabled
				case compatibilityVersions
				case appStoreVersion
			}

			public enum FieldsAppStoreVersions: String, Codable, CaseIterable {
				case platform
				case versionString
				case appStoreState
				case appVersionState
				case copyright
				case reviewType
				case releaseType
				case earliestReleaseDate
				case usesIdfa
				case downloadable
				case createdDate
				case app
				case ageRatingDeclaration
				case appStoreVersionLocalizations
				case build
				case appStoreVersionPhasedRelease
				case gameCenterAppVersion
				case routingAppCoverage
				case appStoreReviewDetail
				case appStoreVersionSubmission
				case appClipDefaultExperience
				case appStoreVersionExperiments
				case appStoreVersionExperimentsV2
				case customerReviews
				case alternativeDistributionPackage
			}

			public enum Include: String, Codable, CaseIterable {
				case compatibilityVersions
				case appStoreVersion
			}

			public init(fieldsGameCenterAppVersions: [FieldsGameCenterAppVersions]? = nil, fieldsAppStoreVersions: [FieldsAppStoreVersions]? = nil, include: [Include]? = nil, limitCompatibilityVersions: Int? = nil) {
				self.fieldsGameCenterAppVersions = fieldsGameCenterAppVersions
				self.fieldsAppStoreVersions = fieldsAppStoreVersions
				self.include = include
				self.limitCompatibilityVersions = limitCompatibilityVersions
			}

			public var asQuery: [(String, String?)] {
				let encoder = URLQueryEncoder(explode: false)
				encoder.encode(fieldsGameCenterAppVersions, forKey: "fields[gameCenterAppVersions]")
				encoder.encode(fieldsAppStoreVersions, forKey: "fields[appStoreVersions]")
				encoder.encode(include, forKey: "include")
				encoder.encode(limitCompatibilityVersions, forKey: "limit[compatibilityVersions]")
				return encoder.items
			}
		}
	}
}
