// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1.InAppPurchaseAppStoreReviewScreenshots {
	public func id(_ id: String) -> WithID {
		WithID(path: "\(path)/\(id)")
	}

	public struct WithID {
		/// Path: `/v1/inAppPurchaseAppStoreReviewScreenshots/{id}`
		public let path: String

		public func get(fieldsInAppPurchaseAppStoreReviewScreenshots: [FieldsInAppPurchaseAppStoreReviewScreenshots]? = nil, include: [Include]? = nil) -> Request<AppStoreConnect_Swift_SDK.InAppPurchaseAppStoreReviewScreenshotResponse> {
			Request(path: path, method: "GET", query: makeGetQuery(fieldsInAppPurchaseAppStoreReviewScreenshots, include), id: "inAppPurchaseAppStoreReviewScreenshots_getInstance")
		}

		private func makeGetQuery(_ fieldsInAppPurchaseAppStoreReviewScreenshots: [FieldsInAppPurchaseAppStoreReviewScreenshots]?, _ include: [Include]?) -> [(String, String?)] {
			let encoder = URLQueryEncoder(explode: false)
			encoder.encode(fieldsInAppPurchaseAppStoreReviewScreenshots, forKey: "fields[inAppPurchaseAppStoreReviewScreenshots]")
			encoder.encode(include, forKey: "include")
			return encoder.items
		}

		public enum FieldsInAppPurchaseAppStoreReviewScreenshots: String, Codable, CaseIterable {
			case fileSize
			case fileName
			case sourceFileChecksum
			case imageAsset
			case assetToken
			case assetType
			case uploadOperations
			case assetDeliveryState
			case inAppPurchaseV2
		}

		public enum Include: String, Codable, CaseIterable {
			case inAppPurchaseV2
		}

		public func patch(_ body: AppStoreConnect_Swift_SDK.InAppPurchaseAppStoreReviewScreenshotUpdateRequest) -> Request<AppStoreConnect_Swift_SDK.InAppPurchaseAppStoreReviewScreenshotResponse> {
			Request(path: path, method: "PATCH", body: body, id: "inAppPurchaseAppStoreReviewScreenshots_updateInstance")
		}

		public var delete: Request<Void> {
			Request(path: path, method: "DELETE", id: "inAppPurchaseAppStoreReviewScreenshots_deleteInstance")
		}
	}
}
