// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1.BetaBuildLocalizations.WithID {
	public var build: Build {
		Build(path: path + "/build")
	}

	public struct Build {
		/// Path: `/v1/betaBuildLocalizations/{id}/build`
		public let path: String

		public func get(fieldsBuilds: [FieldsBuilds]? = nil) -> Request<AppStoreConnect_Swift_SDK.BuildWithoutIncludesResponse> {
			Request(path: path, method: "GET", query: makeGetQuery(fieldsBuilds), id: "betaBuildLocalizations_build_getToOneRelated")
		}

		private func makeGetQuery(_ fieldsBuilds: [FieldsBuilds]?) -> [(String, String?)] {
			let encoder = URLQueryEncoder()
			encoder.encode(fieldsBuilds, forKey: "fields[builds]", explode: false)
			return encoder.items
		}

		public enum FieldsBuilds: String, Codable, CaseIterable {
			case version
			case uploadedDate
			case expirationDate
			case expired
			case minOsVersion
			case lsMinimumSystemVersion
			case computedMinMacOsVersion
			case computedMinVisionOsVersion
			case iconAssetToken
			case processingState
			case buildAudienceType
			case usesNonExemptEncryption
			case preReleaseVersion
			case individualTesters
			case betaGroups
			case betaBuildLocalizations
			case appEncryptionDeclaration
			case betaAppReviewSubmission
			case app
			case buildBetaDetail
			case appStoreVersion
			case icons
			case buildBundles
			case perfPowerMetrics
			case diagnosticSignatures
		}
	}
}
