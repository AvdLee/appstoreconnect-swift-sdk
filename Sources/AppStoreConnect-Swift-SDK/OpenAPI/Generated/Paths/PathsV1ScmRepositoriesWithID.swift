// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1.ScmRepositories {
	public func id(_ id: String) -> WithID {
		WithID(path: "\(path)/\(id)")
	}

	public struct WithID {
		/// Path: `/v1/scmRepositories/{id}`
		public let path: String

		public func get(fieldsScmRepositories: [FieldsScmRepositories]? = nil, include: [Include]? = nil) -> Request<AppStoreConnect_Swift_SDK.ScmRepositoryResponse> {
			Request(path: path, method: "GET", query: makeGetQuery(fieldsScmRepositories, include), id: "scmRepositories_getInstance")
		}

		private func makeGetQuery(_ fieldsScmRepositories: [FieldsScmRepositories]?, _ include: [Include]?) -> [(String, String?)] {
			let encoder = URLQueryEncoder(explode: false)
			encoder.encode(fieldsScmRepositories, forKey: "fields[scmRepositories]")
			encoder.encode(include, forKey: "include")
			return encoder.items
		}

		public enum FieldsScmRepositories: String, Codable, CaseIterable {
			case lastAccessedDate
			case httpCloneURL = "httpCloneUrl"
			case sshCloneURL = "sshCloneUrl"
			case ownerName
			case repositoryName
			case scmProvider
			case defaultBranch
			case gitReferences
			case pullRequests
		}

		public enum Include: String, Codable, CaseIterable {
			case scmProvider
			case defaultBranch
		}
	}
}
