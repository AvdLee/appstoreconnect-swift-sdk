// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1.GameCenterDetails.WithID {
	public var activityReleases: ActivityReleases {
		ActivityReleases(path: path + "/activityReleases")
	}

	public struct ActivityReleases {
		/// Path: `/v1/gameCenterDetails/{id}/activityReleases`
		public let path: String

		public func get(parameters: GetParameters? = nil) -> Request<AppStoreConnect_Swift_SDK.GameCenterActivityVersionReleasesResponse> {
			Request(path: path, method: "GET", query: parameters?.asQuery, id: "gameCenterDetails_activityReleases_getToManyRelated")
		}

		public struct GetParameters {
			public var fieldsGameCenterActivityVersionReleases: [FieldsGameCenterActivityVersionReleases]?
			public var fieldsGameCenterActivityVersions: [FieldsGameCenterActivityVersions]?
			public var limit: Int?
			public var include: [Include]?

			public enum FieldsGameCenterActivityVersionReleases: String, Codable, CaseIterable {
				case version
			}

			public enum FieldsGameCenterActivityVersions: String, Codable, CaseIterable {
				case version
				case state
				case fallbackURL = "fallbackUrl"
				case activity
				case localizations
				case defaultImage
				case releases
			}

			public enum Include: String, Codable, CaseIterable {
				case version
			}

			public init(fieldsGameCenterActivityVersionReleases: [FieldsGameCenterActivityVersionReleases]? = nil, fieldsGameCenterActivityVersions: [FieldsGameCenterActivityVersions]? = nil, limit: Int? = nil, include: [Include]? = nil) {
				self.fieldsGameCenterActivityVersionReleases = fieldsGameCenterActivityVersionReleases
				self.fieldsGameCenterActivityVersions = fieldsGameCenterActivityVersions
				self.limit = limit
				self.include = include
			}

			public var asQuery: [(String, String?)] {
				let encoder = URLQueryEncoder(explode: false)
				encoder.encode(fieldsGameCenterActivityVersionReleases, forKey: "fields[gameCenterActivityVersionReleases]")
				encoder.encode(fieldsGameCenterActivityVersions, forKey: "fields[gameCenterActivityVersions]")
				encoder.encode(limit, forKey: "limit")
				encoder.encode(include, forKey: "include")
				return encoder.items
			}
		}
	}
}
