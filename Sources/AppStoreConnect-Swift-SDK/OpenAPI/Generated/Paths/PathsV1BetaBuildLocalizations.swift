// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1 {
	public var betaBuildLocalizations: BetaBuildLocalizations {
		BetaBuildLocalizations(path: path + "/betaBuildLocalizations")
	}

	public struct BetaBuildLocalizations {
		/// Path: `/v1/betaBuildLocalizations`
		public let path: String

		public func get(parameters: GetParameters? = nil) -> Request<AppStoreConnect_Swift_SDK.BetaBuildLocalizationsResponse> {
			Request(path: path, method: "GET", query: parameters?.asQuery, id: "betaBuildLocalizations_getCollection")
		}

		public struct GetParameters {
			public var filterLocale: [String]?
			public var filterBuild: [String]?
			public var fieldsBetaBuildLocalizations: [FieldsBetaBuildLocalizations]?
			public var fieldsBuilds: [FieldsBuilds]?
			public var limit: Int?
			public var include: [Include]?

			public enum FieldsBetaBuildLocalizations: String, Codable, CaseIterable {
				case whatsNew
				case locale
				case build
			}

			public enum FieldsBuilds: String, Codable, CaseIterable {
				case version
				case uploadedDate
				case expirationDate
				case expired
				case minOsVersion
				case lsMinimumSystemVersion
				case computedMinMacOsVersion
				case computedMinVisionOsVersion
				case iconAssetToken
				case processingState
				case buildAudienceType
				case usesNonExemptEncryption
				case preReleaseVersion
				case individualTesters
				case betaGroups
				case betaBuildLocalizations
				case appEncryptionDeclaration
				case betaAppReviewSubmission
				case app
				case buildBetaDetail
				case appStoreVersion
				case icons
				case buildBundles
				case perfPowerMetrics
				case diagnosticSignatures
			}

			public enum Include: String, Codable, CaseIterable {
				case build
			}

			public init(filterLocale: [String]? = nil, filterBuild: [String]? = nil, fieldsBetaBuildLocalizations: [FieldsBetaBuildLocalizations]? = nil, fieldsBuilds: [FieldsBuilds]? = nil, limit: Int? = nil, include: [Include]? = nil) {
				self.filterLocale = filterLocale
				self.filterBuild = filterBuild
				self.fieldsBetaBuildLocalizations = fieldsBetaBuildLocalizations
				self.fieldsBuilds = fieldsBuilds
				self.limit = limit
				self.include = include
			}

			public var asQuery: [(String, String?)] {
				let encoder = URLQueryEncoder(explode: false)
				encoder.encode(filterLocale, forKey: "filter[locale]")
				encoder.encode(filterBuild, forKey: "filter[build]")
				encoder.encode(fieldsBetaBuildLocalizations, forKey: "fields[betaBuildLocalizations]")
				encoder.encode(fieldsBuilds, forKey: "fields[builds]")
				encoder.encode(limit, forKey: "limit")
				encoder.encode(include, forKey: "include")
				return encoder.items
			}
		}

		public func post(_ body: AppStoreConnect_Swift_SDK.BetaBuildLocalizationCreateRequest) -> Request<AppStoreConnect_Swift_SDK.BetaBuildLocalizationResponse> {
			Request(path: path, method: "POST", body: body, id: "betaBuildLocalizations_createInstance")
		}
	}
}
