// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1.Webhooks.WithID {
	public var deliveries: Deliveries {
		Deliveries(path: path + "/deliveries")
	}

	public struct Deliveries {
		/// Path: `/v1/webhooks/{id}/deliveries`
		public let path: String

		public func get(parameters: GetParameters? = nil) -> Request<AppStoreConnect_Swift_SDK.WebhookDeliveriesResponse> {
			Request(path: path, method: "GET", query: parameters?.asQuery, id: "webhooks_deliveries_getToManyRelated")
		}

		public struct GetParameters {
			public var filterDeliveryState: [FilterDeliveryState]?
			public var filterCreatedDateGreaterThanOrEqualTo: [String]?
			public var filterCreatedDateLessThan: [String]?
			public var fieldsWebhookDeliveries: [FieldsWebhookDeliveries]?
			public var fieldsWebhookEvents: [FieldsWebhookEvents]?
			public var limit: Int?
			public var include: [Include]?

			public enum FilterDeliveryState: String, Codable, CaseIterable {
				case succeeded = "SUCCEEDED"
				case failed = "FAILED"
				case pending = "PENDING"
			}

			public enum FieldsWebhookDeliveries: String, Codable, CaseIterable {
				case createdDate
				case deliveryState
				case errorMessage
				case redelivery
				case sentDate
				case request
				case response
				case event
			}

			public enum FieldsWebhookEvents: String, Codable, CaseIterable {
				case eventType
				case payload
				case ping
				case createdDate
			}

			public enum Include: String, Codable, CaseIterable {
				case event
			}

			public init(filterDeliveryState: [FilterDeliveryState]? = nil, filterCreatedDateGreaterThanOrEqualTo: [String]? = nil, filterCreatedDateLessThan: [String]? = nil, fieldsWebhookDeliveries: [FieldsWebhookDeliveries]? = nil, fieldsWebhookEvents: [FieldsWebhookEvents]? = nil, limit: Int? = nil, include: [Include]? = nil) {
				self.filterDeliveryState = filterDeliveryState
				self.filterCreatedDateGreaterThanOrEqualTo = filterCreatedDateGreaterThanOrEqualTo
				self.filterCreatedDateLessThan = filterCreatedDateLessThan
				self.fieldsWebhookDeliveries = fieldsWebhookDeliveries
				self.fieldsWebhookEvents = fieldsWebhookEvents
				self.limit = limit
				self.include = include
			}

			public var asQuery: [(String, String?)] {
				let encoder = URLQueryEncoder(explode: false)
				encoder.encode(filterDeliveryState, forKey: "filter[deliveryState]")
				encoder.encode(filterCreatedDateGreaterThanOrEqualTo, forKey: "filter[createdDateGreaterThanOrEqualTo]")
				encoder.encode(filterCreatedDateLessThan, forKey: "filter[createdDateLessThan]")
				encoder.encode(fieldsWebhookDeliveries, forKey: "fields[webhookDeliveries]")
				encoder.encode(fieldsWebhookEvents, forKey: "fields[webhookEvents]")
				encoder.encode(limit, forKey: "limit")
				encoder.encode(include, forKey: "include")
				return encoder.items
			}
		}
	}
}
