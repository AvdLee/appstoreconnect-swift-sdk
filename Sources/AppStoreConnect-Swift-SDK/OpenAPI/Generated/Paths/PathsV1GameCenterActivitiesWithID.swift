// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1.GameCenterActivities {
	public func id(_ id: String) -> WithID {
		WithID(path: "\(path)/\(id)")
	}

	public struct WithID {
		/// Path: `/v1/gameCenterActivities/{id}`
		public let path: String

		public func get(parameters: GetParameters? = nil) -> Request<AppStoreConnect_Swift_SDK.GameCenterActivityResponse> {
			Request(path: path, method: "GET", query: parameters?.asQuery, id: "gameCenterActivities_getInstance")
		}

		public struct GetParameters {
			public var fieldsGameCenterActivities: [FieldsGameCenterActivities]?
			public var fieldsGameCenterActivityVersions: [FieldsGameCenterActivityVersions]?
			public var include: [Include]?
			public var limitAchievements: Int?
			public var limitLeaderboards: Int?
			public var limitVersions: Int?

			public enum FieldsGameCenterActivities: String, Codable, CaseIterable {
				case referenceName
				case vendorIdentifier
				case playStyle
				case minimumPlayersCount
				case maximumPlayersCount
				case supportsPartyCode
				case archived
				case properties
				case gameCenterDetail
				case gameCenterGroup
				case achievements
				case leaderboards
				case versions
			}

			public enum FieldsGameCenterActivityVersions: String, Codable, CaseIterable {
				case version
				case state
				case fallbackURL = "fallbackUrl"
				case activity
				case localizations
				case defaultImage
				case releases
			}

			public enum Include: String, Codable, CaseIterable {
				case gameCenterDetail
				case gameCenterGroup
				case achievements
				case leaderboards
				case versions
			}

			public init(fieldsGameCenterActivities: [FieldsGameCenterActivities]? = nil, fieldsGameCenterActivityVersions: [FieldsGameCenterActivityVersions]? = nil, include: [Include]? = nil, limitAchievements: Int? = nil, limitLeaderboards: Int? = nil, limitVersions: Int? = nil) {
				self.fieldsGameCenterActivities = fieldsGameCenterActivities
				self.fieldsGameCenterActivityVersions = fieldsGameCenterActivityVersions
				self.include = include
				self.limitAchievements = limitAchievements
				self.limitLeaderboards = limitLeaderboards
				self.limitVersions = limitVersions
			}

			public var asQuery: [(String, String?)] {
				let encoder = URLQueryEncoder(explode: false)
				encoder.encode(fieldsGameCenterActivities, forKey: "fields[gameCenterActivities]")
				encoder.encode(fieldsGameCenterActivityVersions, forKey: "fields[gameCenterActivityVersions]")
				encoder.encode(include, forKey: "include")
				encoder.encode(limitAchievements, forKey: "limit[achievements]")
				encoder.encode(limitLeaderboards, forKey: "limit[leaderboards]")
				encoder.encode(limitVersions, forKey: "limit[versions]")
				return encoder.items
			}
		}

		public func patch(_ body: AppStoreConnect_Swift_SDK.GameCenterActivityUpdateRequest) -> Request<AppStoreConnect_Swift_SDK.GameCenterActivityResponse> {
			Request(path: path, method: "PATCH", body: body, id: "gameCenterActivities_updateInstance")
		}

		public var delete: Request<Void> {
			Request(path: path, method: "DELETE", id: "gameCenterActivities_deleteInstance")
		}
	}
}
