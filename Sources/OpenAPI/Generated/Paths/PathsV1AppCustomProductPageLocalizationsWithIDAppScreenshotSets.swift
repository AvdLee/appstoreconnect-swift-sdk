// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1.AppCustomProductPageLocalizations.WithID {
	public var appScreenshotSets: AppScreenshotSets {
		AppScreenshotSets(path: path + "/appScreenshotSets")
	}

	public struct AppScreenshotSets {
		/// Path: `/v1/appCustomProductPageLocalizations/{id}/appScreenshotSets`
		public let path: String

		public func get(parameters: GetParameters? = nil) -> Request<AppStoreConnect_Swift_SDK.AppScreenshotSetsResponse> {
			Request(path: path, method: "GET", query: parameters?.asQuery, id: "appCustomProductPageLocalizations_appScreenshotSets_getToManyRelated")
		}

		public struct GetParameters {
			public var filterScreenshotDisplayType: [FilterScreenshotDisplayType]?
			public var filterAppStoreVersionLocalization: [String]?
			public var filterAppStoreVersionExperimentTreatmentLocalization: [String]?
			public var fieldsAppScreenshotSets: [FieldsAppScreenshotSets]?
			public var fieldsAppStoreVersionLocalizations: [FieldsAppStoreVersionLocalizations]?
			public var fieldsAppCustomProductPageLocalizations: [FieldsAppCustomProductPageLocalizations]?
			public var fieldsAppStoreVersionExperimentTreatmentLocalizations: [FieldsAppStoreVersionExperimentTreatmentLocalizations]?
			public var fieldsAppScreenshots: [FieldsAppScreenshots]?
			public var limit: Int?
			public var include: [Include]?
			public var limitAppScreenshots: Int?

			public enum FilterScreenshotDisplayType: String, Codable, CaseIterable {
				case appIphone67 = "APP_IPHONE_67"
				case appIphone61 = "APP_IPHONE_61"
				case appIphone65 = "APP_IPHONE_65"
				case appIphone58 = "APP_IPHONE_58"
				case appIphone55 = "APP_IPHONE_55"
				case appIphone47 = "APP_IPHONE_47"
				case appIphone40 = "APP_IPHONE_40"
				case appIphone35 = "APP_IPHONE_35"
				case appIpadPro3gen129 = "APP_IPAD_PRO_3GEN_129"
				case appIpadPro3gen11 = "APP_IPAD_PRO_3GEN_11"
				case appIpadPro129 = "APP_IPAD_PRO_129"
				case appIpad105 = "APP_IPAD_105"
				case appIpad97 = "APP_IPAD_97"
				case appDesktop = "APP_DESKTOP"
				case appWatchUltra = "APP_WATCH_ULTRA"
				case appWatchSeries10 = "APP_WATCH_SERIES_10"
				case appWatchSeries7 = "APP_WATCH_SERIES_7"
				case appWatchSeries4 = "APP_WATCH_SERIES_4"
				case appWatchSeries3 = "APP_WATCH_SERIES_3"
				case appAppleTv = "APP_APPLE_TV"
				case appAppleVisionPro = "APP_APPLE_VISION_PRO"
				case imessageAppIphone67 = "IMESSAGE_APP_IPHONE_67"
				case imessageAppIphone61 = "IMESSAGE_APP_IPHONE_61"
				case imessageAppIphone65 = "IMESSAGE_APP_IPHONE_65"
				case imessageAppIphone58 = "IMESSAGE_APP_IPHONE_58"
				case imessageAppIphone55 = "IMESSAGE_APP_IPHONE_55"
				case imessageAppIphone47 = "IMESSAGE_APP_IPHONE_47"
				case imessageAppIphone40 = "IMESSAGE_APP_IPHONE_40"
				case imessageAppIpadPro3gen129 = "IMESSAGE_APP_IPAD_PRO_3GEN_129"
				case imessageAppIpadPro3gen11 = "IMESSAGE_APP_IPAD_PRO_3GEN_11"
				case imessageAppIpadPro129 = "IMESSAGE_APP_IPAD_PRO_129"
				case imessageAppIpad105 = "IMESSAGE_APP_IPAD_105"
				case imessageAppIpad97 = "IMESSAGE_APP_IPAD_97"
			}

			public enum FieldsAppScreenshotSets: String, Codable, CaseIterable {
				case screenshotDisplayType
				case appStoreVersionLocalization
				case appCustomProductPageLocalization
				case appStoreVersionExperimentTreatmentLocalization
				case appScreenshots
			}

			public enum FieldsAppStoreVersionLocalizations: String, Codable, CaseIterable {
				case description
				case locale
				case keywords
				case marketingURL = "marketingUrl"
				case promotionalText
				case supportURL = "supportUrl"
				case whatsNew
				case appStoreVersion
				case appScreenshotSets
				case appPreviewSets
				case searchKeywords
			}

			public enum FieldsAppCustomProductPageLocalizations: String, Codable, CaseIterable {
				case locale
				case promotionalText
				case appCustomProductPageVersion
				case appScreenshotSets
				case appPreviewSets
				case searchKeywords
			}

			public enum FieldsAppStoreVersionExperimentTreatmentLocalizations: String, Codable, CaseIterable {
				case locale
				case appStoreVersionExperimentTreatment
				case appScreenshotSets
				case appPreviewSets
			}

			public enum FieldsAppScreenshots: String, Codable, CaseIterable {
				case fileSize
				case fileName
				case sourceFileChecksum
				case imageAsset
				case assetToken
				case assetType
				case uploadOperations
				case assetDeliveryState
				case appScreenshotSet
			}

			public enum Include: String, Codable, CaseIterable {
				case appStoreVersionLocalization
				case appCustomProductPageLocalization
				case appStoreVersionExperimentTreatmentLocalization
				case appScreenshots
			}

			public init(filterScreenshotDisplayType: [FilterScreenshotDisplayType]? = nil, filterAppStoreVersionLocalization: [String]? = nil, filterAppStoreVersionExperimentTreatmentLocalization: [String]? = nil, fieldsAppScreenshotSets: [FieldsAppScreenshotSets]? = nil, fieldsAppStoreVersionLocalizations: [FieldsAppStoreVersionLocalizations]? = nil, fieldsAppCustomProductPageLocalizations: [FieldsAppCustomProductPageLocalizations]? = nil, fieldsAppStoreVersionExperimentTreatmentLocalizations: [FieldsAppStoreVersionExperimentTreatmentLocalizations]? = nil, fieldsAppScreenshots: [FieldsAppScreenshots]? = nil, limit: Int? = nil, include: [Include]? = nil, limitAppScreenshots: Int? = nil) {
				self.filterScreenshotDisplayType = filterScreenshotDisplayType
				self.filterAppStoreVersionLocalization = filterAppStoreVersionLocalization
				self.filterAppStoreVersionExperimentTreatmentLocalization = filterAppStoreVersionExperimentTreatmentLocalization
				self.fieldsAppScreenshotSets = fieldsAppScreenshotSets
				self.fieldsAppStoreVersionLocalizations = fieldsAppStoreVersionLocalizations
				self.fieldsAppCustomProductPageLocalizations = fieldsAppCustomProductPageLocalizations
				self.fieldsAppStoreVersionExperimentTreatmentLocalizations = fieldsAppStoreVersionExperimentTreatmentLocalizations
				self.fieldsAppScreenshots = fieldsAppScreenshots
				self.limit = limit
				self.include = include
				self.limitAppScreenshots = limitAppScreenshots
			}

			public var asQuery: [(String, String?)] {
				let encoder = URLQueryEncoder(explode: false)
				encoder.encode(filterScreenshotDisplayType, forKey: "filter[screenshotDisplayType]")
				encoder.encode(filterAppStoreVersionLocalization, forKey: "filter[appStoreVersionLocalization]")
				encoder.encode(filterAppStoreVersionExperimentTreatmentLocalization, forKey: "filter[appStoreVersionExperimentTreatmentLocalization]")
				encoder.encode(fieldsAppScreenshotSets, forKey: "fields[appScreenshotSets]")
				encoder.encode(fieldsAppStoreVersionLocalizations, forKey: "fields[appStoreVersionLocalizations]")
				encoder.encode(fieldsAppCustomProductPageLocalizations, forKey: "fields[appCustomProductPageLocalizations]")
				encoder.encode(fieldsAppStoreVersionExperimentTreatmentLocalizations, forKey: "fields[appStoreVersionExperimentTreatmentLocalizations]")
				encoder.encode(fieldsAppScreenshots, forKey: "fields[appScreenshots]")
				encoder.encode(limit, forKey: "limit")
				encoder.encode(include, forKey: "include")
				encoder.encode(limitAppScreenshots, forKey: "limit[appScreenshots]")
				return encoder.items
			}
		}
	}
}
