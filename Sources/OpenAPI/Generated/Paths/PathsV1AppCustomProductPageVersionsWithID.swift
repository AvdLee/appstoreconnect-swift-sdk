// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1.AppCustomProductPageVersions {
	public func id(_ id: String) -> WithID {
		WithID(path: "\(path)/\(id)")
	}

	public struct WithID {
		/// Path: `/v1/appCustomProductPageVersions/{id}`
		public let path: String

		public func get(parameters: GetParameters? = nil) -> Request<AppStoreConnect_Swift_SDK.AppCustomProductPageVersionResponse> {
			Request(path: path, method: "GET", query: parameters?.asQuery, id: "appCustomProductPageVersions_getInstance")
		}

		public struct GetParameters {
			public var fieldsAppCustomProductPageVersions: [FieldsAppCustomProductPageVersions]?
			public var fieldsAppCustomProductPageLocalizations: [FieldsAppCustomProductPageLocalizations]?
			public var include: [Include]?
			public var limitAppCustomProductPageLocalizations: Int?

			public enum FieldsAppCustomProductPageVersions: String, Codable, CaseIterable {
				case version
				case state
				case deepLink
				case appCustomProductPage
				case appCustomProductPageLocalizations
			}

			public enum FieldsAppCustomProductPageLocalizations: String, Codable, CaseIterable {
				case locale
				case promotionalText
				case appCustomProductPageVersion
				case appScreenshotSets
				case appPreviewSets
				case searchKeywords
			}

			public enum Include: String, Codable, CaseIterable {
				case appCustomProductPage
				case appCustomProductPageLocalizations
			}

			public init(fieldsAppCustomProductPageVersions: [FieldsAppCustomProductPageVersions]? = nil, fieldsAppCustomProductPageLocalizations: [FieldsAppCustomProductPageLocalizations]? = nil, include: [Include]? = nil, limitAppCustomProductPageLocalizations: Int? = nil) {
				self.fieldsAppCustomProductPageVersions = fieldsAppCustomProductPageVersions
				self.fieldsAppCustomProductPageLocalizations = fieldsAppCustomProductPageLocalizations
				self.include = include
				self.limitAppCustomProductPageLocalizations = limitAppCustomProductPageLocalizations
			}

			public var asQuery: [(String, String?)] {
				let encoder = URLQueryEncoder(explode: false)
				encoder.encode(fieldsAppCustomProductPageVersions, forKey: "fields[appCustomProductPageVersions]")
				encoder.encode(fieldsAppCustomProductPageLocalizations, forKey: "fields[appCustomProductPageLocalizations]")
				encoder.encode(include, forKey: "include")
				encoder.encode(limitAppCustomProductPageLocalizations, forKey: "limit[appCustomProductPageLocalizations]")
				return encoder.items
			}
		}

		public func patch(_ body: AppStoreConnect_Swift_SDK.AppCustomProductPageVersionUpdateRequest) -> Request<AppStoreConnect_Swift_SDK.AppCustomProductPageVersionResponse> {
			Request(path: path, method: "PATCH", body: body, id: "appCustomProductPageVersions_updateInstance")
		}
	}
}
