// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1.AppInfos.WithID {
	public var territoryAgeRatings: TerritoryAgeRatings {
		TerritoryAgeRatings(path: path + "/territoryAgeRatings")
	}

	public struct TerritoryAgeRatings {
		/// Path: `/v1/appInfos/{id}/territoryAgeRatings`
		public let path: String

		public func get(parameters: GetParameters? = nil) -> Request<AppStoreConnect_Swift_SDK.TerritoryAgeRatingsResponse> {
			Request(path: path, method: "GET", query: parameters?.asQuery, id: "appInfos_territoryAgeRatings_getToManyRelated")
		}

		public struct GetParameters {
			public var fieldsTerritoryAgeRatings: [FieldsTerritoryAgeRatings]?
			public var fieldsTerritories: [FieldsTerritories]?
			public var limit: Int?
			public var include: [Include]?

			public enum FieldsTerritoryAgeRatings: String, Codable, CaseIterable {
				case appStoreAgeRating
				case territory
			}

			public enum FieldsTerritories: String, Codable, CaseIterable {
				case currency
			}

			public enum Include: String, Codable, CaseIterable {
				case territory
			}

			public init(fieldsTerritoryAgeRatings: [FieldsTerritoryAgeRatings]? = nil, fieldsTerritories: [FieldsTerritories]? = nil, limit: Int? = nil, include: [Include]? = nil) {
				self.fieldsTerritoryAgeRatings = fieldsTerritoryAgeRatings
				self.fieldsTerritories = fieldsTerritories
				self.limit = limit
				self.include = include
			}

			public var asQuery: [(String, String?)] {
				let encoder = URLQueryEncoder(explode: false)
				encoder.encode(fieldsTerritoryAgeRatings, forKey: "fields[territoryAgeRatings]")
				encoder.encode(fieldsTerritories, forKey: "fields[territories]")
				encoder.encode(limit, forKey: "limit")
				encoder.encode(include, forKey: "include")
				return encoder.items
			}
		}
	}
}
