// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swiftlint:disable all

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1.CustomerReviews {
	public func id(_ id: String) -> WithID {
		WithID(path: "\(path)/\(id)")
	}

	public struct WithID {
		/// Path: `/v1/customerReviews/{id}`
		public let path: String

		public func get(parameters: GetParameters? = nil) -> Request<AppStoreConnect_Swift_SDK.CustomerReviewResponse> {
			Request(method: "GET", url: path, query: parameters?.asQuery, id: "customerReviews-get_instance")
		}

		public struct GetParameters {
			public var fieldsCustomerReviews: [FieldsCustomerReviews]?
			public var include: [Include]?
			public var fieldsCustomerReviewResponses: [FieldsCustomerReviewResponses]?

			public enum FieldsCustomerReviews: String, Codable, CaseIterable {
				case body
				case createdDate
				case rating
				case response
				case reviewerNickname
				case territory
				case title
			}

			public enum Include: String, Codable, CaseIterable {
				case response
			}

			public enum FieldsCustomerReviewResponses: String, Codable, CaseIterable {
				case lastModifiedDate
				case responseBody
				case review
				case state
			}

			public init(fieldsCustomerReviews: [FieldsCustomerReviews]? = nil, include: [Include]? = nil, fieldsCustomerReviewResponses: [FieldsCustomerReviewResponses]? = nil) {
				self.fieldsCustomerReviews = fieldsCustomerReviews
				self.include = include
				self.fieldsCustomerReviewResponses = fieldsCustomerReviewResponses
			}

			public var asQuery: [(String, String?)] {
				let encoder = URLQueryEncoder(explode: false)
				encoder.encode(fieldsCustomerReviews, forKey: "fields[customerReviews]")
				encoder.encode(include, forKey: "include")
				encoder.encode(fieldsCustomerReviewResponses, forKey: "fields[customerReviewResponses]")
				return encoder.items
			}
		}
	}
}
