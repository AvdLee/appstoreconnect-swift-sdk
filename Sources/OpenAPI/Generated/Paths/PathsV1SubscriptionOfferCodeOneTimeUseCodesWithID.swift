// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swiftlint:disable all

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1.SubscriptionOfferCodeOneTimeUseCodes {
	public func id(_ id: String) -> WithID {
		WithID(path: "\(path)/\(id)")
	}

	public struct WithID {
		/// Path: `/v1/subscriptionOfferCodeOneTimeUseCodes/{id}`
		public let path: String

		public func get(parameters: GetParameters? = nil) -> Request<AppStoreConnect_Swift_SDK.SubscriptionOfferCodeOneTimeUseCodeResponse> {
			Request(method: "GET", url: path, query: parameters?.asQuery, id: "subscriptionOfferCodeOneTimeUseCodes-get_instance")
		}

		public struct GetParameters {
			public var fieldsSubscriptionOfferCodeOneTimeUseCodes: [FieldsSubscriptionOfferCodeOneTimeUseCodes]?
			public var include: [Include]?
			public var fieldsSubscriptionOfferCodeOneTimeUseCodeValues: [String]?

			public enum FieldsSubscriptionOfferCodeOneTimeUseCodes: String, Codable, CaseIterable {
				case active
				case createdDate
				case expirationDate
				case numberOfCodes
				case offerCode
				case values
			}

			public enum Include: String, Codable, CaseIterable {
				case offerCode
			}

			public init(fieldsSubscriptionOfferCodeOneTimeUseCodes: [FieldsSubscriptionOfferCodeOneTimeUseCodes]? = nil, include: [Include]? = nil, fieldsSubscriptionOfferCodeOneTimeUseCodeValues: [String]? = nil) {
				self.fieldsSubscriptionOfferCodeOneTimeUseCodes = fieldsSubscriptionOfferCodeOneTimeUseCodes
				self.include = include
				self.fieldsSubscriptionOfferCodeOneTimeUseCodeValues = fieldsSubscriptionOfferCodeOneTimeUseCodeValues
			}

			public var asQuery: [(String, String?)] {
				let encoder = URLQueryEncoder(explode: false)
				encoder.encode(fieldsSubscriptionOfferCodeOneTimeUseCodes, forKey: "fields[subscriptionOfferCodeOneTimeUseCodes]")
				encoder.encode(include, forKey: "include")
				encoder.encode(fieldsSubscriptionOfferCodeOneTimeUseCodeValues, forKey: "fields[subscriptionOfferCodeOneTimeUseCodeValues]")
				return encoder.items
			}
		}

		public func patch(_ body: AppStoreConnect_Swift_SDK.SubscriptionOfferCodeOneTimeUseCodeUpdateRequest) -> Request<AppStoreConnect_Swift_SDK.SubscriptionOfferCodeOneTimeUseCodeResponse> {
			Request(method: "PATCH", url: path, body: body, id: "subscriptionOfferCodeOneTimeUseCodes-update_instance")
		}
	}
}
