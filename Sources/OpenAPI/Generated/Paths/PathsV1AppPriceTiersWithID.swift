// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swiftlint:disable all

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1.AppPriceTiers {
	public func id(_ id: String) -> WithID {
		WithID(path: "\(path)/\(id)")
	}

	public struct WithID {
		/// Path: `/v1/appPriceTiers/{id}`
		public let path: String

		public func get(parameters: GetParameters? = nil) -> Request<AppStoreConnect_Swift_SDK.AppPriceTierResponse> {
			Request(method: "GET", url: path, query: parameters?.asQuery, id: "appPriceTiers-get_instance")
		}

		public struct GetParameters {
			public var fieldsAppPriceTiers: [FieldsAppPriceTiers]?
			public var include: [Include]?
			public var fieldsAppPricePoints: [FieldsAppPricePoints]?
			public var limitPricePoints: Int?

			public enum FieldsAppPriceTiers: String, Codable, CaseIterable {
				case pricePoints
			}

			public enum Include: String, Codable, CaseIterable {
				case pricePoints
			}

			public enum FieldsAppPricePoints: String, Codable, CaseIterable {
				case customerPrice
				case priceTier
				case proceeds
				case territory
			}

			public init(fieldsAppPriceTiers: [FieldsAppPriceTiers]? = nil, include: [Include]? = nil, fieldsAppPricePoints: [FieldsAppPricePoints]? = nil, limitPricePoints: Int? = nil) {
				self.fieldsAppPriceTiers = fieldsAppPriceTiers
				self.include = include
				self.fieldsAppPricePoints = fieldsAppPricePoints
				self.limitPricePoints = limitPricePoints
			}

			public var asQuery: [(String, String?)] {
				let encoder = URLQueryEncoder(explode: false)
				encoder.encode(fieldsAppPriceTiers, forKey: "fields[appPriceTiers]")
				encoder.encode(include, forKey: "include")
				encoder.encode(fieldsAppPricePoints, forKey: "fields[appPricePoints]")
				encoder.encode(limitPricePoints, forKey: "limit[pricePoints]")
				return encoder.items
			}
		}
	}
}
