// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1.AppStoreVersionExperiments {
	public func id(_ id: String) -> WithID {
		WithID(path: "\(path)/\(id)")
	}

	public struct WithID {
		/// Path: `/v1/appStoreVersionExperiments/{id}`
		public let path: String

		@available(*, deprecated, message: "Deprecated")
		public func get(parameters: GetParameters? = nil) -> Request<AppStoreConnect_Swift_SDK.AppStoreVersionExperimentResponse> {
			Request(path: path, method: "GET", query: parameters?.asQuery, id: "appStoreVersionExperiments_getInstance")
		}

		public struct GetParameters {
			public var fieldsAppStoreVersionExperiments: [FieldsAppStoreVersionExperiments]?
			public var fieldsAppStoreVersionExperimentTreatments: [FieldsAppStoreVersionExperimentTreatments]?
			public var include: [Include]?
			public var limitAppStoreVersionExperimentTreatments: Int?

			public enum FieldsAppStoreVersionExperiments: String, Codable, CaseIterable {
				case name
				case trafficProportion
				case state
				case reviewRequired
				case startDate
				case endDate
				case appStoreVersion
				case appStoreVersionExperimentTreatments
			}

			public enum FieldsAppStoreVersionExperimentTreatments: String, Codable, CaseIterable {
				case name
				case appIcon
				case appIconName
				case promotedDate
				case appStoreVersionExperiment
				case appStoreVersionExperimentV2
				case appStoreVersionExperimentTreatmentLocalizations
			}

			public enum Include: String, Codable, CaseIterable {
				case appStoreVersion
				case appStoreVersionExperimentTreatments
			}

			public init(fieldsAppStoreVersionExperiments: [FieldsAppStoreVersionExperiments]? = nil, fieldsAppStoreVersionExperimentTreatments: [FieldsAppStoreVersionExperimentTreatments]? = nil, include: [Include]? = nil, limitAppStoreVersionExperimentTreatments: Int? = nil) {
				self.fieldsAppStoreVersionExperiments = fieldsAppStoreVersionExperiments
				self.fieldsAppStoreVersionExperimentTreatments = fieldsAppStoreVersionExperimentTreatments
				self.include = include
				self.limitAppStoreVersionExperimentTreatments = limitAppStoreVersionExperimentTreatments
			}

			public var asQuery: [(String, String?)] {
				let encoder = URLQueryEncoder(explode: false)
				encoder.encode(fieldsAppStoreVersionExperiments, forKey: "fields[appStoreVersionExperiments]")
				encoder.encode(fieldsAppStoreVersionExperimentTreatments, forKey: "fields[appStoreVersionExperimentTreatments]")
				encoder.encode(include, forKey: "include")
				encoder.encode(limitAppStoreVersionExperimentTreatments, forKey: "limit[appStoreVersionExperimentTreatments]")
				return encoder.items
			}
		}

		@available(*, deprecated, message: "Deprecated")
		public func patch(_ body: AppStoreConnect_Swift_SDK.AppStoreVersionExperimentUpdateRequest) -> Request<AppStoreConnect_Swift_SDK.AppStoreVersionExperimentResponse> {
			Request(path: path, method: "PATCH", body: body, id: "appStoreVersionExperiments_updateInstance")
		}

		@available(*, deprecated, message: "Deprecated")
		public var delete: Request<Void> {
			Request(path: path, method: "DELETE", id: "appStoreVersionExperiments_deleteInstance")
		}
	}
}
