{
  "openapi": "3.0.1",
  "info": {
    "title": "App Store Connect API",
    "version": "3.7.0",
    "x-platform": "app_store_connect_api"
  },
  "servers": [
    {
      "url": "https://api.appstoreconnect.apple.com/"
    }
  ],
  "paths": {
    "/v1/actors": {
      "get": {
        "tags": [
          "Actors"
        ],
        "operationId": "actors_getCollection",
        "parameters": [
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": true
          },
          {
            "name": "fields[actors]",
            "in": "query",
            "description": "the fields to include for returned resources of type actors",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "actorType",
                  "userFirstName",
                  "userLastName",
                  "userEmail",
                  "apiKeyId"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Actors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActorsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/actors/{id}": {
      "get": {
        "tags": [
          "Actors"
        ],
        "operationId": "actors_getInstance",
        "parameters": [
          {
            "name": "fields[actors]",
            "in": "query",
            "description": "the fields to include for returned resources of type actors",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "actorType",
                  "userFirstName",
                  "userLastName",
                  "userEmail",
                  "apiKeyId"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single Actor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ageRatingDeclarations/{id}": {
      "patch": {
        "tags": [
          "AgeRatingDeclarations"
        ],
        "operationId": "ageRatingDeclarations_updateInstance",
        "requestBody": {
          "description": "AgeRatingDeclaration representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgeRatingDeclarationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AgeRatingDeclaration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeRatingDeclarationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/alternativeDistributionDomains": {
      "get": {
        "tags": [
          "AlternativeDistributionDomains"
        ],
        "operationId": "alternativeDistributionDomains_getCollection",
        "parameters": [
          {
            "name": "fields[alternativeDistributionDomains]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionDomains",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "domain",
                  "referenceName",
                  "createdDate"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AlternativeDistributionDomains",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeDistributionDomainsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AlternativeDistributionDomains"
        ],
        "operationId": "alternativeDistributionDomains_createInstance",
        "requestBody": {
          "description": "AlternativeDistributionDomain representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlternativeDistributionDomainCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AlternativeDistributionDomain",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeDistributionDomainResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/alternativeDistributionDomains/{id}": {
      "get": {
        "tags": [
          "AlternativeDistributionDomains"
        ],
        "operationId": "alternativeDistributionDomains_getInstance",
        "parameters": [
          {
            "name": "fields[alternativeDistributionDomains]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionDomains",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "domain",
                  "referenceName",
                  "createdDate"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AlternativeDistributionDomain",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeDistributionDomainResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AlternativeDistributionDomains"
        ],
        "operationId": "alternativeDistributionDomains_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/alternativeDistributionKeys": {
      "get": {
        "tags": [
          "AlternativeDistributionKeys"
        ],
        "operationId": "alternativeDistributionKeys_getCollection",
        "parameters": [
          {
            "name": "exists[app]",
            "in": "query",
            "description": "filter by existence or non-existence of related 'app'",
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[alternativeDistributionKeys]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionKeys",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publicKey"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AlternativeDistributionKeys",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeDistributionKeysResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AlternativeDistributionKeys"
        ],
        "operationId": "alternativeDistributionKeys_createInstance",
        "requestBody": {
          "description": "AlternativeDistributionKey representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlternativeDistributionKeyCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AlternativeDistributionKey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeDistributionKeyResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/alternativeDistributionKeys/{id}": {
      "get": {
        "tags": [
          "AlternativeDistributionKeys"
        ],
        "operationId": "alternativeDistributionKeys_getInstance",
        "parameters": [
          {
            "name": "fields[alternativeDistributionKeys]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionKeys",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publicKey"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AlternativeDistributionKey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeDistributionKeyResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AlternativeDistributionKeys"
        ],
        "operationId": "alternativeDistributionKeys_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/alternativeDistributionPackageDeltas/{id}": {
      "get": {
        "tags": [
          "AlternativeDistributionPackageDeltas"
        ],
        "operationId": "alternativeDistributionPackageDeltas_getInstance",
        "parameters": [
          {
            "name": "fields[alternativeDistributionPackageDeltas]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackageDeltas",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "url",
                  "urlExpirationDate",
                  "alternativeDistributionKeyBlob",
                  "fileChecksum"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AlternativeDistributionPackageDelta",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeDistributionPackageDeltaResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/alternativeDistributionPackageVariants/{id}": {
      "get": {
        "tags": [
          "AlternativeDistributionPackageVariants"
        ],
        "operationId": "alternativeDistributionPackageVariants_getInstance",
        "parameters": [
          {
            "name": "fields[alternativeDistributionPackageVariants]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackageVariants",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "url",
                  "urlExpirationDate",
                  "alternativeDistributionKeyBlob",
                  "fileChecksum"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AlternativeDistributionPackageVariant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeDistributionPackageVariantResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/alternativeDistributionPackageVersions/{id}": {
      "get": {
        "tags": [
          "AlternativeDistributionPackageVersions"
        ],
        "operationId": "alternativeDistributionPackageVersions_getInstance",
        "parameters": [
          {
            "name": "fields[alternativeDistributionPackageVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackageVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "url",
                  "urlExpirationDate",
                  "version",
                  "fileChecksum",
                  "state",
                  "variants",
                  "deltas",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[alternativeDistributionPackageVariants]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackageVariants",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "url",
                  "urlExpirationDate",
                  "alternativeDistributionKeyBlob",
                  "fileChecksum"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[alternativeDistributionPackageDeltas]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackageDeltas",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "url",
                  "urlExpirationDate",
                  "alternativeDistributionKeyBlob",
                  "fileChecksum"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants",
                  "deltas",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[deltas]",
            "in": "query",
            "description": "maximum number of related deltas returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[variants]",
            "in": "query",
            "description": "maximum number of related variants returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AlternativeDistributionPackageVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeDistributionPackageVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/alternativeDistributionPackages": {
      "post": {
        "tags": [
          "AlternativeDistributionPackages"
        ],
        "operationId": "alternativeDistributionPackages_createInstance",
        "requestBody": {
          "description": "AlternativeDistributionPackage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlternativeDistributionPackageCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AlternativeDistributionPackage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeDistributionPackageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/alternativeDistributionPackages/{id}": {
      "get": {
        "tags": [
          "AlternativeDistributionPackages"
        ],
        "operationId": "alternativeDistributionPackages_getInstance",
        "parameters": [
          {
            "name": "fields[alternativeDistributionPackages]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "versions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[alternativeDistributionPackageVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackageVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "url",
                  "urlExpirationDate",
                  "version",
                  "fileChecksum",
                  "state",
                  "variants",
                  "deltas",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "versions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[versions]",
            "in": "query",
            "description": "maximum number of related versions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AlternativeDistributionPackage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeDistributionPackageResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/analyticsReportInstances/{id}": {
      "get": {
        "tags": [
          "AnalyticsReportInstances"
        ],
        "operationId": "analyticsReportInstances_getInstance",
        "parameters": [
          {
            "name": "fields[analyticsReportInstances]",
            "in": "query",
            "description": "the fields to include for returned resources of type analyticsReportInstances",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "granularity",
                  "processingDate",
                  "segments"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AnalyticsReportInstance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsReportInstanceResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/analyticsReportRequests": {
      "post": {
        "tags": [
          "AnalyticsReportRequests"
        ],
        "operationId": "analyticsReportRequests_createInstance",
        "requestBody": {
          "description": "AnalyticsReportRequest representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsReportRequestCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AnalyticsReportRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsReportRequestResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/analyticsReportRequests/{id}": {
      "get": {
        "tags": [
          "AnalyticsReportRequests"
        ],
        "operationId": "analyticsReportRequests_getInstance",
        "parameters": [
          {
            "name": "fields[analyticsReportRequests]",
            "in": "query",
            "description": "the fields to include for returned resources of type analyticsReportRequests",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "accessType",
                  "stoppedDueToInactivity",
                  "reports"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[analyticsReports]",
            "in": "query",
            "description": "the fields to include for returned resources of type analyticsReports",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "category",
                  "instances"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "reports"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[reports]",
            "in": "query",
            "description": "maximum number of related reports returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AnalyticsReportRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsReportRequestResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AnalyticsReportRequests"
        ],
        "operationId": "analyticsReportRequests_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/analyticsReportSegments/{id}": {
      "get": {
        "tags": [
          "AnalyticsReportSegments"
        ],
        "operationId": "analyticsReportSegments_getInstance",
        "parameters": [
          {
            "name": "fields[analyticsReportSegments]",
            "in": "query",
            "description": "the fields to include for returned resources of type analyticsReportSegments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "checksum",
                  "sizeInBytes",
                  "url"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AnalyticsReportSegment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsReportSegmentResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/analyticsReports/{id}": {
      "get": {
        "tags": [
          "AnalyticsReports"
        ],
        "operationId": "analyticsReports_getInstance",
        "parameters": [
          {
            "name": "fields[analyticsReports]",
            "in": "query",
            "description": "the fields to include for returned resources of type analyticsReports",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "category",
                  "instances"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AnalyticsReport",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsReportResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v2/appAvailabilities": {
      "post": {
        "tags": [
          "AppAvailabilities"
        ],
        "operationId": "appAvailabilitiesV2_createInstance",
        "requestBody": {
          "description": "AppAvailability representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppAvailabilityV2CreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppAvailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAvailabilityV2Response"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/appAvailabilities/{id}": {
      "get": {
        "tags": [
          "AppAvailabilities"
        ],
        "operationId": "appAvailabilitiesV2_getInstance",
        "parameters": [
          {
            "name": "fields[appAvailabilities]",
            "in": "query",
            "description": "the fields to include for returned resources of type appAvailabilities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "availableInNewTerritories",
                  "territoryAvailabilities"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[territoryAvailabilities]",
            "in": "query",
            "description": "the fields to include for returned resources of type territoryAvailabilities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "available",
                  "releaseDate",
                  "preOrderEnabled",
                  "preOrderPublishDate",
                  "contentStatuses",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territoryAvailabilities"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[territoryAvailabilities]",
            "in": "query",
            "description": "maximum number of related territoryAvailabilities returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppAvailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAvailabilityV2Response"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appCategories": {
      "get": {
        "tags": [
          "AppCategories"
        ],
        "operationId": "appCategories_getCollection",
        "parameters": [
          {
            "name": "filter[platforms]",
            "in": "query",
            "description": "filter by attribute 'platforms'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS",
                  "MAC_OS",
                  "TV_OS",
                  "VISION_OS"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "exists[parent]",
            "in": "query",
            "description": "filter by existence or non-existence of related 'parent'",
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appCategories]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCategories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platforms",
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[subcategories]",
            "in": "query",
            "description": "maximum number of related subcategories returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppCategories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCategoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appCategories/{id}": {
      "get": {
        "tags": [
          "AppCategories"
        ],
        "operationId": "appCategories_getInstance",
        "parameters": [
          {
            "name": "fields[appCategories]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCategories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platforms",
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[subcategories]",
            "in": "query",
            "description": "maximum number of related subcategories returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppCategory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appClipAdvancedExperienceImages": {
      "post": {
        "tags": [
          "AppClipAdvancedExperienceImages"
        ],
        "operationId": "appClipAdvancedExperienceImages_createInstance",
        "requestBody": {
          "description": "AppClipAdvancedExperienceImage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppClipAdvancedExperienceImageCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppClipAdvancedExperienceImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipAdvancedExperienceImageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appClipAdvancedExperienceImages/{id}": {
      "get": {
        "tags": [
          "AppClipAdvancedExperienceImages"
        ],
        "operationId": "appClipAdvancedExperienceImages_getInstance",
        "parameters": [
          {
            "name": "fields[appClipAdvancedExperienceImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipAdvancedExperienceImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipAdvancedExperienceImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipAdvancedExperienceImageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppClipAdvancedExperienceImages"
        ],
        "operationId": "appClipAdvancedExperienceImages_updateInstance",
        "requestBody": {
          "description": "AppClipAdvancedExperienceImage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppClipAdvancedExperienceImageUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipAdvancedExperienceImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipAdvancedExperienceImageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appClipAdvancedExperiences": {
      "post": {
        "tags": [
          "AppClipAdvancedExperiences"
        ],
        "operationId": "appClipAdvancedExperiences_createInstance",
        "requestBody": {
          "description": "AppClipAdvancedExperience representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppClipAdvancedExperienceCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppClipAdvancedExperience",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipAdvancedExperienceResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appClipAdvancedExperiences/{id}": {
      "get": {
        "tags": [
          "AppClipAdvancedExperiences"
        ],
        "operationId": "appClipAdvancedExperiences_getInstance",
        "parameters": [
          {
            "name": "fields[appClipAdvancedExperiences]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipAdvancedExperiences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "link",
                  "version",
                  "status",
                  "action",
                  "isPoweredBy",
                  "place",
                  "placeStatus",
                  "businessCategory",
                  "defaultLanguage",
                  "appClip",
                  "headerImage",
                  "localizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appClip",
                  "headerImage",
                  "localizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipAdvancedExperience",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipAdvancedExperienceResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppClipAdvancedExperiences"
        ],
        "operationId": "appClipAdvancedExperiences_updateInstance",
        "requestBody": {
          "description": "AppClipAdvancedExperience representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppClipAdvancedExperienceUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipAdvancedExperience",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipAdvancedExperienceResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appClipAppStoreReviewDetails": {
      "post": {
        "tags": [
          "AppClipAppStoreReviewDetails"
        ],
        "operationId": "appClipAppStoreReviewDetails_createInstance",
        "requestBody": {
          "description": "AppClipAppStoreReviewDetail representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppClipAppStoreReviewDetailCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppClipAppStoreReviewDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipAppStoreReviewDetailResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appClipAppStoreReviewDetails/{id}": {
      "get": {
        "tags": [
          "AppClipAppStoreReviewDetails"
        ],
        "operationId": "appClipAppStoreReviewDetails_getInstance",
        "parameters": [
          {
            "name": "fields[appClipAppStoreReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipAppStoreReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "invocationUrls",
                  "appClipDefaultExperience"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appClipDefaultExperience"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipAppStoreReviewDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipAppStoreReviewDetailResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppClipAppStoreReviewDetails"
        ],
        "operationId": "appClipAppStoreReviewDetails_updateInstance",
        "requestBody": {
          "description": "AppClipAppStoreReviewDetail representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppClipAppStoreReviewDetailUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipAppStoreReviewDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipAppStoreReviewDetailResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appClipDefaultExperienceLocalizations": {
      "post": {
        "tags": [
          "AppClipDefaultExperienceLocalizations"
        ],
        "operationId": "appClipDefaultExperienceLocalizations_createInstance",
        "requestBody": {
          "description": "AppClipDefaultExperienceLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppClipDefaultExperienceLocalizationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppClipDefaultExperienceLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipDefaultExperienceLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appClipDefaultExperienceLocalizations/{id}": {
      "get": {
        "tags": [
          "AppClipDefaultExperienceLocalizations"
        ],
        "operationId": "appClipDefaultExperienceLocalizations_getInstance",
        "parameters": [
          {
            "name": "fields[appClipDefaultExperienceLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperienceLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "subtitle",
                  "appClipDefaultExperience",
                  "appClipHeaderImage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appClipHeaderImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipHeaderImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appClipDefaultExperienceLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appClipDefaultExperience",
                  "appClipHeaderImage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipDefaultExperienceLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipDefaultExperienceLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppClipDefaultExperienceLocalizations"
        ],
        "operationId": "appClipDefaultExperienceLocalizations_updateInstance",
        "requestBody": {
          "description": "AppClipDefaultExperienceLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppClipDefaultExperienceLocalizationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipDefaultExperienceLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipDefaultExperienceLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppClipDefaultExperienceLocalizations"
        ],
        "operationId": "appClipDefaultExperienceLocalizations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appClipDefaultExperiences": {
      "post": {
        "tags": [
          "AppClipDefaultExperiences"
        ],
        "operationId": "appClipDefaultExperiences_createInstance",
        "requestBody": {
          "description": "AppClipDefaultExperience representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppClipDefaultExperienceCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppClipDefaultExperience",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipDefaultExperienceResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appClipDefaultExperiences/{id}": {
      "get": {
        "tags": [
          "AppClipDefaultExperiences"
        ],
        "operationId": "appClipDefaultExperiences_getInstance",
        "parameters": [
          {
            "name": "fields[appClipDefaultExperiences]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperiences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action",
                  "appClip",
                  "releaseWithAppStoreVersion",
                  "appClipDefaultExperienceLocalizations",
                  "appClipAppStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appClipDefaultExperienceLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperienceLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "subtitle",
                  "appClipDefaultExperience",
                  "appClipHeaderImage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appClipAppStoreReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipAppStoreReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "invocationUrls",
                  "appClipDefaultExperience"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appClip",
                  "releaseWithAppStoreVersion",
                  "appClipDefaultExperienceLocalizations",
                  "appClipAppStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appClipDefaultExperienceLocalizations]",
            "in": "query",
            "description": "maximum number of related appClipDefaultExperienceLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipDefaultExperience",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipDefaultExperienceResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppClipDefaultExperiences"
        ],
        "operationId": "appClipDefaultExperiences_updateInstance",
        "requestBody": {
          "description": "AppClipDefaultExperience representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppClipDefaultExperienceUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipDefaultExperience",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipDefaultExperienceResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppClipDefaultExperiences"
        ],
        "operationId": "appClipDefaultExperiences_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appClipHeaderImages": {
      "post": {
        "tags": [
          "AppClipHeaderImages"
        ],
        "operationId": "appClipHeaderImages_createInstance",
        "requestBody": {
          "description": "AppClipHeaderImage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppClipHeaderImageCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppClipHeaderImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipHeaderImageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appClipHeaderImages/{id}": {
      "get": {
        "tags": [
          "AppClipHeaderImages"
        ],
        "operationId": "appClipHeaderImages_getInstance",
        "parameters": [
          {
            "name": "fields[appClipHeaderImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipHeaderImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appClipDefaultExperienceLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appClipDefaultExperienceLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipHeaderImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipHeaderImageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppClipHeaderImages"
        ],
        "operationId": "appClipHeaderImages_updateInstance",
        "requestBody": {
          "description": "AppClipHeaderImage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppClipHeaderImageUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipHeaderImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipHeaderImageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppClipHeaderImages"
        ],
        "operationId": "appClipHeaderImages_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appClips/{id}": {
      "get": {
        "tags": [
          "AppClips"
        ],
        "operationId": "appClips_getInstance",
        "parameters": [
          {
            "name": "fields[appClips]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClips",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bundleId",
                  "app",
                  "appClipDefaultExperiences",
                  "appClipAdvancedExperiences"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appClipDefaultExperiences]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperiences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action",
                  "appClip",
                  "releaseWithAppStoreVersion",
                  "appClipDefaultExperienceLocalizations",
                  "appClipAppStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "appClipDefaultExperiences"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appClipDefaultExperiences]",
            "in": "query",
            "description": "maximum number of related appClipDefaultExperiences returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appCustomProductPageLocalizations": {
      "post": {
        "tags": [
          "AppCustomProductPageLocalizations"
        ],
        "operationId": "appCustomProductPageLocalizations_createInstance",
        "requestBody": {
          "description": "AppCustomProductPageLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppCustomProductPageLocalizationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppCustomProductPageLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCustomProductPageLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appCustomProductPageLocalizations/{id}": {
      "get": {
        "tags": [
          "AppCustomProductPageLocalizations"
        ],
        "operationId": "appCustomProductPageLocalizations_getInstance",
        "parameters": [
          {
            "name": "fields[appCustomProductPageLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPageLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "promotionalText",
                  "appCustomProductPageVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appScreenshotSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshotSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "screenshotDisplayType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appScreenshots"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appPreviewSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviewSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "previewType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appPreviews"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appCustomProductPageVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appPreviewSets]",
            "in": "query",
            "description": "maximum number of related appPreviewSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appScreenshotSets]",
            "in": "query",
            "description": "maximum number of related appScreenshotSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppCustomProductPageLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCustomProductPageLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppCustomProductPageLocalizations"
        ],
        "operationId": "appCustomProductPageLocalizations_updateInstance",
        "requestBody": {
          "description": "AppCustomProductPageLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppCustomProductPageLocalizationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppCustomProductPageLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCustomProductPageLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppCustomProductPageLocalizations"
        ],
        "operationId": "appCustomProductPageLocalizations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appCustomProductPageVersions": {
      "post": {
        "tags": [
          "AppCustomProductPageVersions"
        ],
        "operationId": "appCustomProductPageVersions_createInstance",
        "requestBody": {
          "description": "AppCustomProductPageVersion representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppCustomProductPageVersionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppCustomProductPageVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCustomProductPageVersionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appCustomProductPageVersions/{id}": {
      "get": {
        "tags": [
          "AppCustomProductPageVersions"
        ],
        "operationId": "appCustomProductPageVersions_getInstance",
        "parameters": [
          {
            "name": "fields[appCustomProductPageVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPageVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "state",
                  "deepLink",
                  "appCustomProductPage",
                  "appCustomProductPageLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appCustomProductPageLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPageLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "promotionalText",
                  "appCustomProductPageVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appCustomProductPage",
                  "appCustomProductPageLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appCustomProductPageLocalizations]",
            "in": "query",
            "description": "maximum number of related appCustomProductPageLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppCustomProductPageVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCustomProductPageVersionResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppCustomProductPageVersions"
        ],
        "operationId": "appCustomProductPageVersions_updateInstance",
        "requestBody": {
          "description": "AppCustomProductPageVersion representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppCustomProductPageVersionUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppCustomProductPageVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCustomProductPageVersionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appCustomProductPages": {
      "post": {
        "tags": [
          "AppCustomProductPages"
        ],
        "operationId": "appCustomProductPages_createInstance",
        "requestBody": {
          "description": "AppCustomProductPage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppCustomProductPageCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppCustomProductPage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCustomProductPageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appCustomProductPages/{id}": {
      "get": {
        "tags": [
          "AppCustomProductPages"
        ],
        "operationId": "appCustomProductPages_getInstance",
        "parameters": [
          {
            "name": "fields[appCustomProductPages]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "url",
                  "visible",
                  "app",
                  "appCustomProductPageVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appCustomProductPageVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPageVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "state",
                  "deepLink",
                  "appCustomProductPage",
                  "appCustomProductPageLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "appCustomProductPageVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appCustomProductPageVersions]",
            "in": "query",
            "description": "maximum number of related appCustomProductPageVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppCustomProductPage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCustomProductPageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppCustomProductPages"
        ],
        "operationId": "appCustomProductPages_updateInstance",
        "requestBody": {
          "description": "AppCustomProductPage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppCustomProductPageUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppCustomProductPage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCustomProductPageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppCustomProductPages"
        ],
        "operationId": "appCustomProductPages_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appEncryptionDeclarationDocuments": {
      "post": {
        "tags": [
          "AppEncryptionDeclarationDocuments"
        ],
        "operationId": "appEncryptionDeclarationDocuments_createInstance",
        "requestBody": {
          "description": "AppEncryptionDeclarationDocument representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppEncryptionDeclarationDocumentCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppEncryptionDeclarationDocument",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEncryptionDeclarationDocumentResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appEncryptionDeclarationDocuments/{id}": {
      "get": {
        "tags": [
          "AppEncryptionDeclarationDocuments"
        ],
        "operationId": "appEncryptionDeclarationDocuments_getInstance",
        "parameters": [
          {
            "name": "fields[appEncryptionDeclarationDocuments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEncryptionDeclarationDocuments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "assetToken",
                  "downloadUrl",
                  "sourceFileChecksum",
                  "uploadOperations",
                  "assetDeliveryState"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppEncryptionDeclarationDocument",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEncryptionDeclarationDocumentResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppEncryptionDeclarationDocuments"
        ],
        "operationId": "appEncryptionDeclarationDocuments_updateInstance",
        "requestBody": {
          "description": "AppEncryptionDeclarationDocument representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppEncryptionDeclarationDocumentUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppEncryptionDeclarationDocument",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEncryptionDeclarationDocumentResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appEncryptionDeclarations": {
      "get": {
        "tags": [
          "AppEncryptionDeclarations"
        ],
        "operationId": "appEncryptionDeclarations_getCollection",
        "parameters": [
          {
            "name": "filter[platform]",
            "in": "query",
            "description": "filter by attribute 'platform'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS",
                  "MAC_OS",
                  "TV_OS",
                  "VISION_OS"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[app]",
            "in": "query",
            "description": "filter by id(s) of related 'app'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[builds]",
            "in": "query",
            "description": "filter by id(s) of related 'builds'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appEncryptionDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEncryptionDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appDescription",
                  "createdDate",
                  "usesEncryption",
                  "exempt",
                  "containsProprietaryCryptography",
                  "containsThirdPartyCryptography",
                  "availableOnFrenchStore",
                  "platform",
                  "uploadedDate",
                  "documentUrl",
                  "documentName",
                  "documentType",
                  "appEncryptionDeclarationState",
                  "codeValue",
                  "app",
                  "builds",
                  "appEncryptionDeclarationDocument"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "deprecated": true
          },
          {
            "name": "fields[appEncryptionDeclarationDocuments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEncryptionDeclarationDocuments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "assetToken",
                  "downloadUrl",
                  "sourceFileChecksum",
                  "uploadOperations",
                  "assetDeliveryState"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "builds",
                  "appEncryptionDeclarationDocument"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[builds]",
            "in": "query",
            "description": "maximum number of related builds returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppEncryptionDeclarations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEncryptionDeclarationsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AppEncryptionDeclarations"
        ],
        "operationId": "appEncryptionDeclarations_createInstance",
        "requestBody": {
          "description": "AppEncryptionDeclaration representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppEncryptionDeclarationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppEncryptionDeclaration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEncryptionDeclarationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appEncryptionDeclarations/{id}": {
      "get": {
        "tags": [
          "AppEncryptionDeclarations"
        ],
        "operationId": "appEncryptionDeclarations_getInstance",
        "parameters": [
          {
            "name": "fields[appEncryptionDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEncryptionDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appDescription",
                  "createdDate",
                  "usesEncryption",
                  "exempt",
                  "containsProprietaryCryptography",
                  "containsThirdPartyCryptography",
                  "availableOnFrenchStore",
                  "platform",
                  "uploadedDate",
                  "documentUrl",
                  "documentName",
                  "documentType",
                  "appEncryptionDeclarationState",
                  "codeValue",
                  "app",
                  "builds",
                  "appEncryptionDeclarationDocument"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "deprecated": true
          },
          {
            "name": "fields[appEncryptionDeclarationDocuments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEncryptionDeclarationDocuments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "assetToken",
                  "downloadUrl",
                  "sourceFileChecksum",
                  "uploadOperations",
                  "assetDeliveryState"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "builds",
                  "appEncryptionDeclarationDocument"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[builds]",
            "in": "query",
            "description": "maximum number of related builds returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppEncryptionDeclaration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEncryptionDeclarationResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appEventLocalizations": {
      "post": {
        "tags": [
          "AppEventLocalizations"
        ],
        "operationId": "appEventLocalizations_createInstance",
        "requestBody": {
          "description": "AppEventLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppEventLocalizationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppEventLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEventLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appEventLocalizations/{id}": {
      "get": {
        "tags": [
          "AppEventLocalizations"
        ],
        "operationId": "appEventLocalizations_getInstance",
        "parameters": [
          {
            "name": "fields[appEventLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEventLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "shortDescription",
                  "longDescription",
                  "appEvent",
                  "appEventScreenshots",
                  "appEventVideoClips"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appEventScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEventScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "imageAsset",
                  "assetToken",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appEventAssetType",
                  "appEventLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appEventVideoClips]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEventVideoClips",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "previewFrameTimeCode",
                  "videoUrl",
                  "previewFrameImage",
                  "previewImage",
                  "uploadOperations",
                  "assetDeliveryState",
                  "videoDeliveryState",
                  "appEventAssetType",
                  "appEventLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appEvent",
                  "appEventScreenshots",
                  "appEventVideoClips"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appEventScreenshots]",
            "in": "query",
            "description": "maximum number of related appEventScreenshots returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appEventVideoClips]",
            "in": "query",
            "description": "maximum number of related appEventVideoClips returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppEventLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEventLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppEventLocalizations"
        ],
        "operationId": "appEventLocalizations_updateInstance",
        "requestBody": {
          "description": "AppEventLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppEventLocalizationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppEventLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEventLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppEventLocalizations"
        ],
        "operationId": "appEventLocalizations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appEventScreenshots": {
      "post": {
        "tags": [
          "AppEventScreenshots"
        ],
        "operationId": "appEventScreenshots_createInstance",
        "requestBody": {
          "description": "AppEventScreenshot representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppEventScreenshotCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppEventScreenshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEventScreenshotResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appEventScreenshots/{id}": {
      "get": {
        "tags": [
          "AppEventScreenshots"
        ],
        "operationId": "appEventScreenshots_getInstance",
        "parameters": [
          {
            "name": "fields[appEventScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEventScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "imageAsset",
                  "assetToken",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appEventAssetType",
                  "appEventLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appEventLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppEventScreenshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEventScreenshotResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppEventScreenshots"
        ],
        "operationId": "appEventScreenshots_updateInstance",
        "requestBody": {
          "description": "AppEventScreenshot representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppEventScreenshotUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppEventScreenshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEventScreenshotResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppEventScreenshots"
        ],
        "operationId": "appEventScreenshots_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appEventVideoClips": {
      "post": {
        "tags": [
          "AppEventVideoClips"
        ],
        "operationId": "appEventVideoClips_createInstance",
        "requestBody": {
          "description": "AppEventVideoClip representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppEventVideoClipCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppEventVideoClip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEventVideoClipResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appEventVideoClips/{id}": {
      "get": {
        "tags": [
          "AppEventVideoClips"
        ],
        "operationId": "appEventVideoClips_getInstance",
        "parameters": [
          {
            "name": "fields[appEventVideoClips]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEventVideoClips",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "previewFrameTimeCode",
                  "videoUrl",
                  "previewFrameImage",
                  "previewImage",
                  "uploadOperations",
                  "assetDeliveryState",
                  "videoDeliveryState",
                  "appEventAssetType",
                  "appEventLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appEventLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppEventVideoClip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEventVideoClipResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppEventVideoClips"
        ],
        "operationId": "appEventVideoClips_updateInstance",
        "requestBody": {
          "description": "AppEventVideoClip representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppEventVideoClipUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppEventVideoClip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEventVideoClipResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppEventVideoClips"
        ],
        "operationId": "appEventVideoClips_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appEvents": {
      "post": {
        "tags": [
          "AppEvents"
        ],
        "operationId": "appEvents_createInstance",
        "requestBody": {
          "description": "AppEvent representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppEventCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppEvent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEventResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appEvents/{id}": {
      "get": {
        "tags": [
          "AppEvents"
        ],
        "operationId": "appEvents_getInstance",
        "parameters": [
          {
            "name": "fields[appEvents]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEvents",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "badge",
                  "eventState",
                  "deepLink",
                  "purchaseRequirement",
                  "primaryLocale",
                  "priority",
                  "purpose",
                  "territorySchedules",
                  "archivedTerritorySchedules",
                  "localizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appEventLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEventLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "shortDescription",
                  "longDescription",
                  "appEvent",
                  "appEventScreenshots",
                  "appEventVideoClips"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "localizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppEvent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEventResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppEvents"
        ],
        "operationId": "appEvents_updateInstance",
        "requestBody": {
          "description": "AppEvent representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppEventUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppEvent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEventResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppEvents"
        ],
        "operationId": "appEvents_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appInfoLocalizations": {
      "post": {
        "tags": [
          "AppInfoLocalizations"
        ],
        "operationId": "appInfoLocalizations_createInstance",
        "requestBody": {
          "description": "AppInfoLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppInfoLocalizationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppInfoLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppInfoLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appInfoLocalizations/{id}": {
      "get": {
        "tags": [
          "AppInfoLocalizations"
        ],
        "operationId": "appInfoLocalizations_getInstance",
        "parameters": [
          {
            "name": "fields[appInfoLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appInfoLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "subtitle",
                  "privacyPolicyUrl",
                  "privacyChoicesUrl",
                  "privacyPolicyText",
                  "appInfo"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appInfo"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppInfoLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppInfoLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppInfoLocalizations"
        ],
        "operationId": "appInfoLocalizations_updateInstance",
        "requestBody": {
          "description": "AppInfoLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppInfoLocalizationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppInfoLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppInfoLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppInfoLocalizations"
        ],
        "operationId": "appInfoLocalizations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appInfos/{id}": {
      "get": {
        "tags": [
          "AppInfos"
        ],
        "operationId": "appInfos_getInstance",
        "parameters": [
          {
            "name": "fields[appInfos]",
            "in": "query",
            "description": "the fields to include for returned resources of type appInfos",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreState",
                  "state",
                  "appStoreAgeRating",
                  "australiaAgeRating",
                  "brazilAgeRating",
                  "brazilAgeRatingV2",
                  "franceAgeRating",
                  "koreaAgeRating",
                  "kidsAgeBand",
                  "app",
                  "ageRatingDeclaration",
                  "appInfoLocalizations",
                  "primaryCategory",
                  "primarySubcategoryOne",
                  "primarySubcategoryTwo",
                  "secondaryCategory",
                  "secondarySubcategoryOne",
                  "secondarySubcategoryTwo"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[ageRatingDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type ageRatingDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "alcoholTobaccoOrDrugUseOrReferences",
                  "contests",
                  "gamblingAndContests",
                  "gambling",
                  "gamblingSimulated",
                  "kidsAgeBand",
                  "lootBox",
                  "medicalOrTreatmentInformation",
                  "profanityOrCrudeHumor",
                  "sexualContentGraphicAndNudity",
                  "sexualContentOrNudity",
                  "horrorOrFearThemes",
                  "matureOrSuggestiveThemes",
                  "unrestrictedWebAccess",
                  "violenceCartoonOrFantasy",
                  "violenceRealisticProlongedGraphicOrSadistic",
                  "violenceRealistic",
                  "ageRatingOverride",
                  "koreaAgeRatingOverride",
                  "seventeenPlus"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appInfoLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appInfoLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "subtitle",
                  "privacyPolicyUrl",
                  "privacyChoicesUrl",
                  "privacyPolicyText",
                  "appInfo"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appCategories]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCategories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platforms",
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "ageRatingDeclaration",
                  "appInfoLocalizations",
                  "primaryCategory",
                  "primarySubcategoryOne",
                  "primarySubcategoryTwo",
                  "secondaryCategory",
                  "secondarySubcategoryOne",
                  "secondarySubcategoryTwo"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appInfoLocalizations]",
            "in": "query",
            "description": "maximum number of related appInfoLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppInfo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppInfoResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppInfos"
        ],
        "operationId": "appInfos_updateInstance",
        "requestBody": {
          "description": "AppInfo representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppInfoUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppInfo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppInfoResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appPreviewSets": {
      "post": {
        "tags": [
          "AppPreviewSets"
        ],
        "operationId": "appPreviewSets_createInstance",
        "requestBody": {
          "description": "AppPreviewSet representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPreviewSetCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppPreviewSet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPreviewSetResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appPreviewSets/{id}": {
      "get": {
        "tags": [
          "AppPreviewSets"
        ],
        "operationId": "appPreviewSets_getInstance",
        "parameters": [
          {
            "name": "fields[appPreviewSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviewSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "previewType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appPreviews"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appPreviews]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviews",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "previewFrameTimeCode",
                  "mimeType",
                  "videoUrl",
                  "previewFrameImage",
                  "previewImage",
                  "uploadOperations",
                  "assetDeliveryState",
                  "videoDeliveryState",
                  "appPreviewSet"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appPreviews"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appPreviews]",
            "in": "query",
            "description": "maximum number of related appPreviews returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppPreviewSet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPreviewSetResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPreviewSets"
        ],
        "operationId": "appPreviewSets_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appPreviews": {
      "post": {
        "tags": [
          "AppPreviews"
        ],
        "operationId": "appPreviews_createInstance",
        "requestBody": {
          "description": "AppPreview representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPreviewCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppPreview",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPreviewResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appPreviews/{id}": {
      "get": {
        "tags": [
          "AppPreviews"
        ],
        "operationId": "appPreviews_getInstance",
        "parameters": [
          {
            "name": "fields[appPreviews]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviews",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "previewFrameTimeCode",
                  "mimeType",
                  "videoUrl",
                  "previewFrameImage",
                  "previewImage",
                  "uploadOperations",
                  "assetDeliveryState",
                  "videoDeliveryState",
                  "appPreviewSet"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appPreviewSet"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppPreview",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPreviewResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppPreviews"
        ],
        "operationId": "appPreviews_updateInstance",
        "requestBody": {
          "description": "AppPreview representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPreviewUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppPreview",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPreviewResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPreviews"
        ],
        "operationId": "appPreviews_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v3/appPricePoints/{id}": {
      "get": {
        "tags": [
          "AppPricePoints"
        ],
        "operationId": "appPricePointsV3_getInstance",
        "parameters": [
          {
            "name": "fields[appPricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "app",
                  "equalizations",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppPricePoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPricePointV3Response"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appPriceSchedules": {
      "post": {
        "tags": [
          "AppPriceSchedules"
        ],
        "operationId": "appPriceSchedules_createInstance",
        "requestBody": {
          "description": "AppPriceSchedule representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPriceScheduleCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppPriceSchedule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPriceScheduleResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appPriceSchedules/{id}": {
      "get": {
        "tags": [
          "AppPriceSchedules"
        ],
        "operationId": "appPriceSchedules_getInstance",
        "parameters": [
          {
            "name": "fields[appPriceSchedules]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPriceSchedules",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "baseTerritory",
                  "manualPrices",
                  "automaticPrices"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appPrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "manual",
                  "startDate",
                  "endDate",
                  "appPricePoint",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "baseTerritory",
                  "manualPrices",
                  "automaticPrices"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[automaticPrices]",
            "in": "query",
            "description": "maximum number of related automaticPrices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[manualPrices]",
            "in": "query",
            "description": "maximum number of related manualPrices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppPriceSchedule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPriceScheduleResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appScreenshotSets": {
      "post": {
        "tags": [
          "AppScreenshotSets"
        ],
        "operationId": "appScreenshotSets_createInstance",
        "requestBody": {
          "description": "AppScreenshotSet representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppScreenshotSetCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppScreenshotSet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppScreenshotSetResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appScreenshotSets/{id}": {
      "get": {
        "tags": [
          "AppScreenshotSets"
        ],
        "operationId": "appScreenshotSets_getInstance",
        "parameters": [
          {
            "name": "fields[appScreenshotSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshotSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "screenshotDisplayType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appScreenshots"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "assetToken",
                  "assetType",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appScreenshotSet"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appScreenshots"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appScreenshots]",
            "in": "query",
            "description": "maximum number of related appScreenshots returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppScreenshotSet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppScreenshotSetResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppScreenshotSets"
        ],
        "operationId": "appScreenshotSets_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appScreenshots": {
      "post": {
        "tags": [
          "AppScreenshots"
        ],
        "operationId": "appScreenshots_createInstance",
        "requestBody": {
          "description": "AppScreenshot representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppScreenshotCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppScreenshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppScreenshotResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appScreenshots/{id}": {
      "get": {
        "tags": [
          "AppScreenshots"
        ],
        "operationId": "appScreenshots_getInstance",
        "parameters": [
          {
            "name": "fields[appScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "assetToken",
                  "assetType",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appScreenshotSet"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appScreenshotSet"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppScreenshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppScreenshotResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppScreenshots"
        ],
        "operationId": "appScreenshots_updateInstance",
        "requestBody": {
          "description": "AppScreenshot representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppScreenshotUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppScreenshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppScreenshotResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppScreenshots"
        ],
        "operationId": "appScreenshots_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreReviewAttachments": {
      "post": {
        "tags": [
          "AppStoreReviewAttachments"
        ],
        "operationId": "appStoreReviewAttachments_createInstance",
        "requestBody": {
          "description": "AppStoreReviewAttachment representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreReviewAttachmentCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppStoreReviewAttachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreReviewAttachmentResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreReviewAttachments/{id}": {
      "get": {
        "tags": [
          "AppStoreReviewAttachments"
        ],
        "operationId": "appStoreReviewAttachments_getInstance",
        "parameters": [
          {
            "name": "fields[appStoreReviewAttachments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreReviewAttachments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreReviewAttachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreReviewAttachmentResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppStoreReviewAttachments"
        ],
        "operationId": "appStoreReviewAttachments_updateInstance",
        "requestBody": {
          "description": "AppStoreReviewAttachment representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreReviewAttachmentUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreReviewAttachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreReviewAttachmentResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppStoreReviewAttachments"
        ],
        "operationId": "appStoreReviewAttachments_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreReviewDetails": {
      "post": {
        "tags": [
          "AppStoreReviewDetails"
        ],
        "operationId": "appStoreReviewDetails_createInstance",
        "requestBody": {
          "description": "AppStoreReviewDetail representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreReviewDetailCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppStoreReviewDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreReviewDetailResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreReviewDetails/{id}": {
      "get": {
        "tags": [
          "AppStoreReviewDetails"
        ],
        "operationId": "appStoreReviewDetails_getInstance",
        "parameters": [
          {
            "name": "fields[appStoreReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contactFirstName",
                  "contactLastName",
                  "contactPhone",
                  "contactEmail",
                  "demoAccountName",
                  "demoAccountPassword",
                  "demoAccountRequired",
                  "notes",
                  "appStoreVersion",
                  "appStoreReviewAttachments"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appStoreReviewAttachments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreReviewAttachments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersion",
                  "appStoreReviewAttachments"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appStoreReviewAttachments]",
            "in": "query",
            "description": "maximum number of related appStoreReviewAttachments returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreReviewDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreReviewDetailResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppStoreReviewDetails"
        ],
        "operationId": "appStoreReviewDetails_updateInstance",
        "requestBody": {
          "description": "AppStoreReviewDetail representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreReviewDetailUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreReviewDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreReviewDetailResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersionExperimentTreatmentLocalizations": {
      "post": {
        "tags": [
          "AppStoreVersionExperimentTreatmentLocalizations"
        ],
        "operationId": "appStoreVersionExperimentTreatmentLocalizations_createInstance",
        "requestBody": {
          "description": "AppStoreVersionExperimentTreatmentLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentLocalizationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppStoreVersionExperimentTreatmentLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionExperimentTreatmentLocalizations/{id}": {
      "get": {
        "tags": [
          "AppStoreVersionExperimentTreatmentLocalizations"
        ],
        "operationId": "appStoreVersionExperimentTreatmentLocalizations_getInstance",
        "parameters": [
          {
            "name": "fields[appStoreVersionExperimentTreatmentLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "appStoreVersionExperimentTreatment",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appScreenshotSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshotSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "screenshotDisplayType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appScreenshots"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appPreviewSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviewSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "previewType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appPreviews"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersionExperimentTreatment",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appPreviewSets]",
            "in": "query",
            "description": "maximum number of related appPreviewSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appScreenshotSets]",
            "in": "query",
            "description": "maximum number of related appScreenshotSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersionExperimentTreatmentLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppStoreVersionExperimentTreatmentLocalizations"
        ],
        "operationId": "appStoreVersionExperimentTreatmentLocalizations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersionExperimentTreatments": {
      "post": {
        "tags": [
          "AppStoreVersionExperimentTreatments"
        ],
        "operationId": "appStoreVersionExperimentTreatments_createInstance",
        "requestBody": {
          "description": "AppStoreVersionExperimentTreatment representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppStoreVersionExperimentTreatment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionExperimentTreatments/{id}": {
      "get": {
        "tags": [
          "AppStoreVersionExperimentTreatments"
        ],
        "operationId": "appStoreVersionExperimentTreatments_getInstance",
        "parameters": [
          {
            "name": "fields[appStoreVersionExperimentTreatments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "appIcon",
                  "appIconName",
                  "promotedDate",
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appStoreVersionExperimentTreatmentLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appStoreVersionExperimentTreatmentLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "appStoreVersionExperimentTreatment",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appStoreVersionExperimentTreatmentLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appStoreVersionExperimentTreatmentLocalizations]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperimentTreatmentLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersionExperimentTreatment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppStoreVersionExperimentTreatments"
        ],
        "operationId": "appStoreVersionExperimentTreatments_updateInstance",
        "requestBody": {
          "description": "AppStoreVersionExperimentTreatment representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersionExperimentTreatment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppStoreVersionExperimentTreatments"
        ],
        "operationId": "appStoreVersionExperimentTreatments_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v2/appStoreVersionExperiments": {
      "post": {
        "tags": [
          "AppStoreVersionExperiments"
        ],
        "operationId": "appStoreVersionExperimentsV2_createInstance",
        "requestBody": {
          "description": "AppStoreVersionExperiment representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionExperimentV2CreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppStoreVersionExperiment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentV2Response"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/appStoreVersionExperiments/{id}": {
      "get": {
        "tags": [
          "AppStoreVersionExperiments"
        ],
        "operationId": "appStoreVersionExperimentsV2_getInstance",
        "parameters": [
          {
            "name": "fields[appStoreVersionExperiments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperiments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "trafficProportion",
                  "state",
                  "reviewRequired",
                  "startDate",
                  "endDate",
                  "app",
                  "latestControlVersion",
                  "controlVersions",
                  "appStoreVersionExperimentTreatments"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appStoreVersionExperimentTreatments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "appIcon",
                  "appIconName",
                  "promotedDate",
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appStoreVersionExperimentTreatmentLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "latestControlVersion",
                  "controlVersions",
                  "appStoreVersionExperimentTreatments"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appStoreVersionExperimentTreatments]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperimentTreatments returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[controlVersions]",
            "in": "query",
            "description": "maximum number of related controlVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersionExperiment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentV2Response"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppStoreVersionExperiments"
        ],
        "operationId": "appStoreVersionExperimentsV2_updateInstance",
        "requestBody": {
          "description": "AppStoreVersionExperiment representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionExperimentV2UpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersionExperiment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentV2Response"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppStoreVersionExperiments"
        ],
        "operationId": "appStoreVersionExperimentsV2_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersionExperiments": {
      "post": {
        "tags": [
          "AppStoreVersionExperiments"
        ],
        "operationId": "appStoreVersionExperiments_createInstance",
        "deprecated": true,
        "requestBody": {
          "description": "AppStoreVersionExperiment representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionExperimentCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppStoreVersionExperiment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionExperiments/{id}": {
      "get": {
        "tags": [
          "AppStoreVersionExperiments"
        ],
        "operationId": "appStoreVersionExperiments_getInstance",
        "deprecated": true,
        "parameters": [
          {
            "name": "fields[appStoreVersionExperiments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperiments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "trafficProportion",
                  "state",
                  "reviewRequired",
                  "startDate",
                  "endDate",
                  "appStoreVersion",
                  "appStoreVersionExperimentTreatments"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appStoreVersionExperimentTreatments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "appIcon",
                  "appIconName",
                  "promotedDate",
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appStoreVersionExperimentTreatmentLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersion",
                  "appStoreVersionExperimentTreatments"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appStoreVersionExperimentTreatments]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperimentTreatments returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersionExperiment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppStoreVersionExperiments"
        ],
        "operationId": "appStoreVersionExperiments_updateInstance",
        "deprecated": true,
        "requestBody": {
          "description": "AppStoreVersionExperiment representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionExperimentUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersionExperiment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppStoreVersionExperiments"
        ],
        "operationId": "appStoreVersionExperiments_deleteInstance",
        "deprecated": true,
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersionLocalizations": {
      "post": {
        "tags": [
          "AppStoreVersionLocalizations"
        ],
        "operationId": "appStoreVersionLocalizations_createInstance",
        "requestBody": {
          "description": "AppStoreVersionLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionLocalizationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppStoreVersionLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionLocalizations/{id}": {
      "get": {
        "tags": [
          "AppStoreVersionLocalizations"
        ],
        "operationId": "appStoreVersionLocalizations_getInstance",
        "parameters": [
          {
            "name": "fields[appStoreVersionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "locale",
                  "keywords",
                  "marketingUrl",
                  "promotionalText",
                  "supportUrl",
                  "whatsNew",
                  "appStoreVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appScreenshotSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshotSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "screenshotDisplayType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appScreenshots"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appPreviewSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviewSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "previewType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appPreviews"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appPreviewSets]",
            "in": "query",
            "description": "maximum number of related appPreviewSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appScreenshotSets]",
            "in": "query",
            "description": "maximum number of related appScreenshotSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersionLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppStoreVersionLocalizations"
        ],
        "operationId": "appStoreVersionLocalizations_updateInstance",
        "requestBody": {
          "description": "AppStoreVersionLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionLocalizationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersionLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppStoreVersionLocalizations"
        ],
        "operationId": "appStoreVersionLocalizations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersionPhasedReleases": {
      "post": {
        "tags": [
          "AppStoreVersionPhasedReleases"
        ],
        "operationId": "appStoreVersionPhasedReleases_createInstance",
        "requestBody": {
          "description": "AppStoreVersionPhasedRelease representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionPhasedReleaseCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppStoreVersionPhasedRelease",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionPhasedReleaseResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionPhasedReleases/{id}": {
      "patch": {
        "tags": [
          "AppStoreVersionPhasedReleases"
        ],
        "operationId": "appStoreVersionPhasedReleases_updateInstance",
        "requestBody": {
          "description": "AppStoreVersionPhasedRelease representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionPhasedReleaseUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersionPhasedRelease",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionPhasedReleaseResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppStoreVersionPhasedReleases"
        ],
        "operationId": "appStoreVersionPhasedReleases_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersionPromotions": {
      "post": {
        "tags": [
          "AppStoreVersionPromotions"
        ],
        "operationId": "appStoreVersionPromotions_createInstance",
        "requestBody": {
          "description": "AppStoreVersionPromotion representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionPromotionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppStoreVersionPromotion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionPromotionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionReleaseRequests": {
      "post": {
        "tags": [
          "AppStoreVersionReleaseRequests"
        ],
        "operationId": "appStoreVersionReleaseRequests_createInstance",
        "requestBody": {
          "description": "AppStoreVersionReleaseRequest representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionReleaseRequestCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppStoreVersionReleaseRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionReleaseRequestResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionSubmissions": {
      "post": {
        "tags": [
          "AppStoreVersionSubmissions"
        ],
        "operationId": "appStoreVersionSubmissions_createInstance",
        "deprecated": true,
        "requestBody": {
          "description": "AppStoreVersionSubmission representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionSubmissionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppStoreVersionSubmission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionSubmissionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionSubmissions/{id}": {
      "delete": {
        "tags": [
          "AppStoreVersionSubmissions"
        ],
        "operationId": "appStoreVersionSubmissions_deleteInstance",
        "deprecated": true,
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersions": {
      "post": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_createInstance",
        "requestBody": {
          "description": "AppStoreVersion representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single AppStoreVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersions/{id}": {
      "get": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_getInstance",
        "parameters": [
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[ageRatingDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type ageRatingDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "alcoholTobaccoOrDrugUseOrReferences",
                  "contests",
                  "gamblingAndContests",
                  "gambling",
                  "gamblingSimulated",
                  "kidsAgeBand",
                  "lootBox",
                  "medicalOrTreatmentInformation",
                  "profanityOrCrudeHumor",
                  "sexualContentGraphicAndNudity",
                  "sexualContentOrNudity",
                  "horrorOrFearThemes",
                  "matureOrSuggestiveThemes",
                  "unrestrictedWebAccess",
                  "violenceCartoonOrFantasy",
                  "violenceRealisticProlongedGraphicOrSadistic",
                  "violenceRealistic",
                  "ageRatingOverride",
                  "koreaAgeRatingOverride",
                  "seventeenPlus"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "deprecated": true
          },
          {
            "name": "fields[appStoreVersionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "locale",
                  "keywords",
                  "marketingUrl",
                  "promotionalText",
                  "supportUrl",
                  "whatsNew",
                  "appStoreVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appStoreVersionPhasedReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionPhasedReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "phasedReleaseState",
                  "startDate",
                  "totalPauseDuration",
                  "currentDayNumber"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterAppVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAppVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "enabled",
                  "compatibilityVersions",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[routingAppCoverages]",
            "in": "query",
            "description": "the fields to include for returned resources of type routingAppCoverages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appStoreReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contactFirstName",
                  "contactLastName",
                  "contactPhone",
                  "contactEmail",
                  "demoAccountName",
                  "demoAccountPassword",
                  "demoAccountRequired",
                  "notes",
                  "appStoreVersion",
                  "appStoreReviewAttachments"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appStoreVersionSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "deprecated": true
          },
          {
            "name": "fields[appClipDefaultExperiences]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperiences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action",
                  "appClip",
                  "releaseWithAppStoreVersion",
                  "appClipDefaultExperienceLocalizations",
                  "appClipAppStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appStoreVersionExperiments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperiments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "trafficProportion",
                  "state",
                  "reviewRequired",
                  "startDate",
                  "endDate",
                  "appStoreVersion",
                  "appStoreVersionExperimentTreatments",
                  "platform",
                  "app",
                  "latestControlVersion",
                  "controlVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[alternativeDistributionPackages]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "versions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appStoreVersionExperiments]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperiments returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false,
            "deprecated": true
          },
          {
            "name": "limit[appStoreVersionExperimentsV2]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperimentsV2 returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appStoreVersionLocalizations]",
            "in": "query",
            "description": "maximum number of related appStoreVersionLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_updateInstance",
        "requestBody": {
          "description": "AppStoreVersion representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_getCollection",
        "parameters": [
          {
            "name": "filter[name]",
            "in": "query",
            "description": "filter by attribute 'name'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[bundleId]",
            "in": "query",
            "description": "filter by attribute 'bundleId'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[sku]",
            "in": "query",
            "description": "filter by attribute 'sku'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[appStoreVersions.appStoreState]",
            "in": "query",
            "description": "filter by attribute 'appStoreVersions.appStoreState'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACCEPTED",
                  "DEVELOPER_REMOVED_FROM_SALE",
                  "DEVELOPER_REJECTED",
                  "IN_REVIEW",
                  "INVALID_BINARY",
                  "METADATA_REJECTED",
                  "PENDING_APPLE_RELEASE",
                  "PENDING_CONTRACT",
                  "PENDING_DEVELOPER_RELEASE",
                  "PREPARE_FOR_SUBMISSION",
                  "PREORDER_READY_FOR_SALE",
                  "PROCESSING_FOR_APP_STORE",
                  "READY_FOR_REVIEW",
                  "READY_FOR_SALE",
                  "REJECTED",
                  "REMOVED_FROM_SALE",
                  "WAITING_FOR_EXPORT_COMPLIANCE",
                  "WAITING_FOR_REVIEW",
                  "REPLACED_WITH_NEW_VERSION",
                  "NOT_APPLICABLE"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[appStoreVersions.platform]",
            "in": "query",
            "description": "filter by attribute 'appStoreVersions.platform'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS",
                  "MAC_OS",
                  "TV_OS",
                  "VISION_OS"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[appStoreVersions.appVersionState]",
            "in": "query",
            "description": "filter by attribute 'appStoreVersions.appVersionState'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACCEPTED",
                  "DEVELOPER_REJECTED",
                  "IN_REVIEW",
                  "INVALID_BINARY",
                  "METADATA_REJECTED",
                  "PENDING_APPLE_RELEASE",
                  "PENDING_DEVELOPER_RELEASE",
                  "PREPARE_FOR_SUBMISSION",
                  "PROCESSING_FOR_DISTRIBUTION",
                  "READY_FOR_DISTRIBUTION",
                  "READY_FOR_REVIEW",
                  "REJECTED",
                  "REPLACED_WITH_NEW_VERSION",
                  "WAITING_FOR_EXPORT_COMPLIANCE",
                  "WAITING_FOR_REVIEW"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[reviewSubmissions.state]",
            "in": "query",
            "description": "filter by attribute 'reviewSubmissions.state'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "READY_FOR_REVIEW",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "UNRESOLVED_ISSUES",
                  "CANCELING",
                  "COMPLETING",
                  "COMPLETE"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[reviewSubmissions.platform]",
            "in": "query",
            "description": "filter by attribute 'reviewSubmissions.platform'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS",
                  "MAC_OS",
                  "TV_OS",
                  "VISION_OS"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[appStoreVersions]",
            "in": "query",
            "description": "filter by id(s) of related 'appStoreVersions'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "exists[gameCenterEnabledVersions]",
            "in": "query",
            "description": "filter by existence or non-existence of related 'gameCenterEnabledVersions'",
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "required": false,
            "deprecated": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "-name",
                  "bundleId",
                  "-bundleId",
                  "sku",
                  "-sku"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appEncryptionDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEncryptionDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appDescription",
                  "createdDate",
                  "usesEncryption",
                  "exempt",
                  "containsProprietaryCryptography",
                  "containsThirdPartyCryptography",
                  "availableOnFrenchStore",
                  "platform",
                  "uploadedDate",
                  "documentUrl",
                  "documentName",
                  "documentType",
                  "appEncryptionDeclarationState",
                  "codeValue",
                  "app",
                  "builds",
                  "appEncryptionDeclarationDocument"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[ciProducts]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciProducts",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "productType",
                  "app",
                  "bundleId",
                  "workflows",
                  "primaryRepositories",
                  "additionalRepositories",
                  "buildRuns"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "isInternalGroup",
                  "hasAccessToAllBuilds",
                  "publicLinkEnabled",
                  "publicLinkId",
                  "publicLinkLimitEnabled",
                  "publicLinkLimit",
                  "publicLink",
                  "feedbackEnabled",
                  "iosBuildsAvailableForAppleSiliconMac",
                  "app",
                  "builds",
                  "betaTesters"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[preReleaseVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type preReleaseVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "platform",
                  "builds",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaAppLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "feedbackEmail",
                  "marketingUrl",
                  "privacyPolicyUrl",
                  "tvOsPrivacyPolicy",
                  "description",
                  "locale",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaLicenseAgreements]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaLicenseAgreements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "agreementText",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaAppReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contactFirstName",
                  "contactLastName",
                  "contactPhone",
                  "contactEmail",
                  "demoAccountName",
                  "demoAccountPassword",
                  "demoAccountRequired",
                  "notes",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appInfos]",
            "in": "query",
            "description": "the fields to include for returned resources of type appInfos",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreState",
                  "state",
                  "appStoreAgeRating",
                  "australiaAgeRating",
                  "brazilAgeRating",
                  "brazilAgeRatingV2",
                  "franceAgeRating",
                  "koreaAgeRating",
                  "kidsAgeBand",
                  "app",
                  "ageRatingDeclaration",
                  "appInfoLocalizations",
                  "primaryCategory",
                  "primarySubcategoryOne",
                  "primarySubcategoryTwo",
                  "secondaryCategory",
                  "secondarySubcategoryOne",
                  "secondarySubcategoryTwo"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appClips]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClips",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bundleId",
                  "app",
                  "appClipDefaultExperiences",
                  "appClipAdvancedExperiences"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[endUserLicenseAgreements]",
            "in": "query",
            "description": "the fields to include for returned resources of type endUserLicenseAgreements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "agreementText",
                  "app",
                  "territories"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[inAppPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "productId",
                  "inAppPurchaseType",
                  "state",
                  "apps",
                  "name",
                  "reviewNote",
                  "familySharable",
                  "contentHosting",
                  "inAppPurchaseLocalizations",
                  "pricePoints",
                  "content",
                  "appStoreReviewScreenshot",
                  "promotedPurchase",
                  "iapPriceSchedule",
                  "inAppPurchaseAvailability",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "subscriptions",
                  "subscriptionGroupLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterEnabledVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterEnabledVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "iconAsset",
                  "compatibleVersions",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "deprecated": true
          },
          {
            "name": "fields[appCustomProductPages]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "url",
                  "visible",
                  "app",
                  "appCustomProductPageVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[promotedPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "visibleForAllUsers",
                  "enabled",
                  "state",
                  "inAppPurchaseV2",
                  "subscription",
                  "promotionImages"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appEvents]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEvents",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "badge",
                  "eventState",
                  "deepLink",
                  "purchaseRequirement",
                  "primaryLocale",
                  "priority",
                  "purpose",
                  "territorySchedules",
                  "archivedTerritorySchedules",
                  "localizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[reviewSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type reviewSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "submittedDate",
                  "state",
                  "app",
                  "items",
                  "appStoreVersionForReview",
                  "submittedByActor",
                  "lastUpdatedByActor"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionGracePeriods]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionGracePeriods",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "optIn",
                  "sandboxOptIn",
                  "duration",
                  "renewalType"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appStoreVersionExperiments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperiments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "trafficProportion",
                  "state",
                  "reviewRequired",
                  "startDate",
                  "endDate",
                  "app",
                  "latestControlVersion",
                  "controlVersions",
                  "appStoreVersionExperimentTreatments"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "endUserLicenseAgreement",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appClips]",
            "in": "query",
            "description": "maximum number of related appClips returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appCustomProductPages]",
            "in": "query",
            "description": "maximum number of related appCustomProductPages returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appEncryptionDeclarations]",
            "in": "query",
            "description": "maximum number of related appEncryptionDeclarations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appEvents]",
            "in": "query",
            "description": "maximum number of related appEvents returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appInfos]",
            "in": "query",
            "description": "maximum number of related appInfos returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appStoreVersionExperimentsV2]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperimentsV2 returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appStoreVersions]",
            "in": "query",
            "description": "maximum number of related appStoreVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[betaAppLocalizations]",
            "in": "query",
            "description": "maximum number of related betaAppLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[betaGroups]",
            "in": "query",
            "description": "maximum number of related betaGroups returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[builds]",
            "in": "query",
            "description": "maximum number of related builds returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[gameCenterEnabledVersions]",
            "in": "query",
            "description": "maximum number of related gameCenterEnabledVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false,
            "deprecated": true
          },
          {
            "name": "limit[inAppPurchases]",
            "in": "query",
            "description": "maximum number of related inAppPurchases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false,
            "deprecated": true
          },
          {
            "name": "limit[inAppPurchasesV2]",
            "in": "query",
            "description": "maximum number of related inAppPurchasesV2 returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[preReleaseVersions]",
            "in": "query",
            "description": "maximum number of related preReleaseVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[promotedPurchases]",
            "in": "query",
            "description": "maximum number of related promotedPurchases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[reviewSubmissions]",
            "in": "query",
            "description": "maximum number of related reviewSubmissions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[subscriptionGroups]",
            "in": "query",
            "description": "maximum number of related subscriptionGroups returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Apps",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/apps/{id}": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_getInstance",
        "parameters": [
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appEncryptionDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEncryptionDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appDescription",
                  "createdDate",
                  "usesEncryption",
                  "exempt",
                  "containsProprietaryCryptography",
                  "containsThirdPartyCryptography",
                  "availableOnFrenchStore",
                  "platform",
                  "uploadedDate",
                  "documentUrl",
                  "documentName",
                  "documentType",
                  "appEncryptionDeclarationState",
                  "codeValue",
                  "app",
                  "builds",
                  "appEncryptionDeclarationDocument"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[ciProducts]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciProducts",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "productType",
                  "app",
                  "bundleId",
                  "workflows",
                  "primaryRepositories",
                  "additionalRepositories",
                  "buildRuns"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "isInternalGroup",
                  "hasAccessToAllBuilds",
                  "publicLinkEnabled",
                  "publicLinkId",
                  "publicLinkLimitEnabled",
                  "publicLinkLimit",
                  "publicLink",
                  "feedbackEnabled",
                  "iosBuildsAvailableForAppleSiliconMac",
                  "app",
                  "builds",
                  "betaTesters"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[preReleaseVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type preReleaseVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "platform",
                  "builds",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaAppLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "feedbackEmail",
                  "marketingUrl",
                  "privacyPolicyUrl",
                  "tvOsPrivacyPolicy",
                  "description",
                  "locale",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaLicenseAgreements]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaLicenseAgreements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "agreementText",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaAppReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contactFirstName",
                  "contactLastName",
                  "contactPhone",
                  "contactEmail",
                  "demoAccountName",
                  "demoAccountPassword",
                  "demoAccountRequired",
                  "notes",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appInfos]",
            "in": "query",
            "description": "the fields to include for returned resources of type appInfos",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreState",
                  "state",
                  "appStoreAgeRating",
                  "australiaAgeRating",
                  "brazilAgeRating",
                  "brazilAgeRatingV2",
                  "franceAgeRating",
                  "koreaAgeRating",
                  "kidsAgeBand",
                  "app",
                  "ageRatingDeclaration",
                  "appInfoLocalizations",
                  "primaryCategory",
                  "primarySubcategoryOne",
                  "primarySubcategoryTwo",
                  "secondaryCategory",
                  "secondarySubcategoryOne",
                  "secondarySubcategoryTwo"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appClips]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClips",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bundleId",
                  "app",
                  "appClipDefaultExperiences",
                  "appClipAdvancedExperiences"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[endUserLicenseAgreements]",
            "in": "query",
            "description": "the fields to include for returned resources of type endUserLicenseAgreements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "agreementText",
                  "app",
                  "territories"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[inAppPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "productId",
                  "inAppPurchaseType",
                  "state",
                  "apps",
                  "name",
                  "reviewNote",
                  "familySharable",
                  "contentHosting",
                  "inAppPurchaseLocalizations",
                  "pricePoints",
                  "content",
                  "appStoreReviewScreenshot",
                  "promotedPurchase",
                  "iapPriceSchedule",
                  "inAppPurchaseAvailability",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "subscriptions",
                  "subscriptionGroupLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterEnabledVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterEnabledVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "iconAsset",
                  "compatibleVersions",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "deprecated": true
          },
          {
            "name": "fields[appCustomProductPages]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "url",
                  "visible",
                  "app",
                  "appCustomProductPageVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[promotedPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "visibleForAllUsers",
                  "enabled",
                  "state",
                  "inAppPurchaseV2",
                  "subscription",
                  "promotionImages"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appEvents]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEvents",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "badge",
                  "eventState",
                  "deepLink",
                  "purchaseRequirement",
                  "primaryLocale",
                  "priority",
                  "purpose",
                  "territorySchedules",
                  "archivedTerritorySchedules",
                  "localizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[reviewSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type reviewSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "submittedDate",
                  "state",
                  "app",
                  "items",
                  "appStoreVersionForReview",
                  "submittedByActor",
                  "lastUpdatedByActor"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionGracePeriods]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionGracePeriods",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "optIn",
                  "sandboxOptIn",
                  "duration",
                  "renewalType"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appStoreVersionExperiments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperiments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "trafficProportion",
                  "state",
                  "reviewRequired",
                  "startDate",
                  "endDate",
                  "app",
                  "latestControlVersion",
                  "controlVersions",
                  "appStoreVersionExperimentTreatments"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "endUserLicenseAgreement",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[appClips]",
            "in": "query",
            "description": "maximum number of related appClips returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appCustomProductPages]",
            "in": "query",
            "description": "maximum number of related appCustomProductPages returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appEncryptionDeclarations]",
            "in": "query",
            "description": "maximum number of related appEncryptionDeclarations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appEvents]",
            "in": "query",
            "description": "maximum number of related appEvents returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appInfos]",
            "in": "query",
            "description": "maximum number of related appInfos returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appStoreVersionExperimentsV2]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperimentsV2 returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[appStoreVersions]",
            "in": "query",
            "description": "maximum number of related appStoreVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[betaAppLocalizations]",
            "in": "query",
            "description": "maximum number of related betaAppLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[betaGroups]",
            "in": "query",
            "description": "maximum number of related betaGroups returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[builds]",
            "in": "query",
            "description": "maximum number of related builds returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[gameCenterEnabledVersions]",
            "in": "query",
            "description": "maximum number of related gameCenterEnabledVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false,
            "deprecated": true
          },
          {
            "name": "limit[inAppPurchases]",
            "in": "query",
            "description": "maximum number of related inAppPurchases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false,
            "deprecated": true
          },
          {
            "name": "limit[inAppPurchasesV2]",
            "in": "query",
            "description": "maximum number of related inAppPurchasesV2 returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[preReleaseVersions]",
            "in": "query",
            "description": "maximum number of related preReleaseVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[promotedPurchases]",
            "in": "query",
            "description": "maximum number of related promotedPurchases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[reviewSubmissions]",
            "in": "query",
            "description": "maximum number of related reviewSubmissions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[subscriptionGroups]",
            "in": "query",
            "description": "maximum number of related subscriptionGroups returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single App",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_updateInstance",
        "requestBody": {
          "description": "App representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single App",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaAppClipInvocationLocalizations": {
      "post": {
        "tags": [
          "BetaAppClipInvocationLocalizations"
        ],
        "operationId": "betaAppClipInvocationLocalizations_createInstance",
        "requestBody": {
          "description": "BetaAppClipInvocationLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaAppClipInvocationLocalizationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single BetaAppClipInvocationLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppClipInvocationLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaAppClipInvocationLocalizations/{id}": {
      "patch": {
        "tags": [
          "BetaAppClipInvocationLocalizations"
        ],
        "operationId": "betaAppClipInvocationLocalizations_updateInstance",
        "requestBody": {
          "description": "BetaAppClipInvocationLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaAppClipInvocationLocalizationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaAppClipInvocationLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppClipInvocationLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BetaAppClipInvocationLocalizations"
        ],
        "operationId": "betaAppClipInvocationLocalizations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaAppClipInvocations": {
      "post": {
        "tags": [
          "BetaAppClipInvocations"
        ],
        "operationId": "betaAppClipInvocations_createInstance",
        "requestBody": {
          "description": "BetaAppClipInvocation representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaAppClipInvocationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single BetaAppClipInvocation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppClipInvocationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaAppClipInvocations/{id}": {
      "get": {
        "tags": [
          "BetaAppClipInvocations"
        ],
        "operationId": "betaAppClipInvocations_getInstance",
        "parameters": [
          {
            "name": "fields[betaAppClipInvocations]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppClipInvocations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "url",
                  "betaAppClipInvocationLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "betaAppClipInvocationLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[betaAppClipInvocationLocalizations]",
            "in": "query",
            "description": "maximum number of related betaAppClipInvocationLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaAppClipInvocation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppClipInvocationResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "BetaAppClipInvocations"
        ],
        "operationId": "betaAppClipInvocations_updateInstance",
        "requestBody": {
          "description": "BetaAppClipInvocation representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaAppClipInvocationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaAppClipInvocation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppClipInvocationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BetaAppClipInvocations"
        ],
        "operationId": "betaAppClipInvocations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaAppLocalizations": {
      "get": {
        "tags": [
          "BetaAppLocalizations"
        ],
        "operationId": "betaAppLocalizations_getCollection",
        "parameters": [
          {
            "name": "filter[locale]",
            "in": "query",
            "description": "filter by attribute 'locale'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[app]",
            "in": "query",
            "description": "filter by id(s) of related 'app'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaAppLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "feedbackEmail",
                  "marketingUrl",
                  "privacyPolicyUrl",
                  "tvOsPrivacyPolicy",
                  "description",
                  "locale",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BetaAppLocalizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BetaAppLocalizations"
        ],
        "operationId": "betaAppLocalizations_createInstance",
        "requestBody": {
          "description": "BetaAppLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaAppLocalizationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single BetaAppLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaAppLocalizations/{id}": {
      "get": {
        "tags": [
          "BetaAppLocalizations"
        ],
        "operationId": "betaAppLocalizations_getInstance",
        "parameters": [
          {
            "name": "fields[betaAppLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "feedbackEmail",
                  "marketingUrl",
                  "privacyPolicyUrl",
                  "tvOsPrivacyPolicy",
                  "description",
                  "locale",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaAppLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "BetaAppLocalizations"
        ],
        "operationId": "betaAppLocalizations_updateInstance",
        "requestBody": {
          "description": "BetaAppLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaAppLocalizationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaAppLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BetaAppLocalizations"
        ],
        "operationId": "betaAppLocalizations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaAppReviewDetails": {
      "get": {
        "tags": [
          "BetaAppReviewDetails"
        ],
        "operationId": "betaAppReviewDetails_getCollection",
        "parameters": [
          {
            "name": "filter[app]",
            "in": "query",
            "description": "filter by id(s) of related 'app'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": true
          },
          {
            "name": "fields[betaAppReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contactFirstName",
                  "contactLastName",
                  "contactPhone",
                  "contactEmail",
                  "demoAccountName",
                  "demoAccountPassword",
                  "demoAccountRequired",
                  "notes",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BetaAppReviewDetails",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppReviewDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaAppReviewDetails/{id}": {
      "get": {
        "tags": [
          "BetaAppReviewDetails"
        ],
        "operationId": "betaAppReviewDetails_getInstance",
        "parameters": [
          {
            "name": "fields[betaAppReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contactFirstName",
                  "contactLastName",
                  "contactPhone",
                  "contactEmail",
                  "demoAccountName",
                  "demoAccountPassword",
                  "demoAccountRequired",
                  "notes",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaAppReviewDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppReviewDetailResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "BetaAppReviewDetails"
        ],
        "operationId": "betaAppReviewDetails_updateInstance",
        "requestBody": {
          "description": "BetaAppReviewDetail representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaAppReviewDetailUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaAppReviewDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppReviewDetailResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaAppReviewSubmissions": {
      "get": {
        "tags": [
          "BetaAppReviewSubmissions"
        ],
        "operationId": "betaAppReviewSubmissions_getCollection",
        "parameters": [
          {
            "name": "filter[betaReviewState]",
            "in": "query",
            "description": "filter by attribute 'betaReviewState'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "REJECTED",
                  "APPROVED"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[build]",
            "in": "query",
            "description": "filter by id(s) of related 'build'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": true
          },
          {
            "name": "fields[betaAppReviewSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppReviewSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "betaReviewState",
                  "submittedDate",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BetaAppReviewSubmissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppReviewSubmissionsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BetaAppReviewSubmissions"
        ],
        "operationId": "betaAppReviewSubmissions_createInstance",
        "requestBody": {
          "description": "BetaAppReviewSubmission representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaAppReviewSubmissionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single BetaAppReviewSubmission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppReviewSubmissionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaAppReviewSubmissions/{id}": {
      "get": {
        "tags": [
          "BetaAppReviewSubmissions"
        ],
        "operationId": "betaAppReviewSubmissions_getInstance",
        "parameters": [
          {
            "name": "fields[betaAppReviewSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppReviewSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "betaReviewState",
                  "submittedDate",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaAppReviewSubmission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppReviewSubmissionResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaBuildLocalizations": {
      "get": {
        "tags": [
          "BetaBuildLocalizations"
        ],
        "operationId": "betaBuildLocalizations_getCollection",
        "parameters": [
          {
            "name": "filter[locale]",
            "in": "query",
            "description": "filter by attribute 'locale'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[build]",
            "in": "query",
            "description": "filter by id(s) of related 'build'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaBuildLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaBuildLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "whatsNew",
                  "locale",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BetaBuildLocalizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaBuildLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BetaBuildLocalizations"
        ],
        "operationId": "betaBuildLocalizations_createInstance",
        "requestBody": {
          "description": "BetaBuildLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaBuildLocalizationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single BetaBuildLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaBuildLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaBuildLocalizations/{id}": {
      "get": {
        "tags": [
          "BetaBuildLocalizations"
        ],
        "operationId": "betaBuildLocalizations_getInstance",
        "parameters": [
          {
            "name": "fields[betaBuildLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaBuildLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "whatsNew",
                  "locale",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaBuildLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaBuildLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "BetaBuildLocalizations"
        ],
        "operationId": "betaBuildLocalizations_updateInstance",
        "requestBody": {
          "description": "BetaBuildLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaBuildLocalizationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaBuildLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaBuildLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BetaBuildLocalizations"
        ],
        "operationId": "betaBuildLocalizations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaGroups": {
      "get": {
        "tags": [
          "BetaGroups"
        ],
        "operationId": "betaGroups_getCollection",
        "parameters": [
          {
            "name": "filter[name]",
            "in": "query",
            "description": "filter by attribute 'name'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[isInternalGroup]",
            "in": "query",
            "description": "filter by attribute 'isInternalGroup'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[publicLinkEnabled]",
            "in": "query",
            "description": "filter by attribute 'publicLinkEnabled'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[publicLinkLimitEnabled]",
            "in": "query",
            "description": "filter by attribute 'publicLinkLimitEnabled'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[publicLink]",
            "in": "query",
            "description": "filter by attribute 'publicLink'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[app]",
            "in": "query",
            "description": "filter by id(s) of related 'app'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[builds]",
            "in": "query",
            "description": "filter by id(s) of related 'builds'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "-name",
                  "createdDate",
                  "-createdDate",
                  "publicLinkEnabled",
                  "-publicLinkEnabled",
                  "publicLinkLimit",
                  "-publicLinkLimit"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "isInternalGroup",
                  "hasAccessToAllBuilds",
                  "publicLinkEnabled",
                  "publicLinkId",
                  "publicLinkLimitEnabled",
                  "publicLinkLimit",
                  "publicLink",
                  "feedbackEnabled",
                  "iosBuildsAvailableForAppleSiliconMac",
                  "app",
                  "builds",
                  "betaTesters"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaTesters]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaTesters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "firstName",
                  "lastName",
                  "email",
                  "inviteType",
                  "state",
                  "apps",
                  "betaGroups",
                  "builds"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "builds",
                  "betaTesters"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[betaTesters]",
            "in": "query",
            "description": "maximum number of related betaTesters returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[builds]",
            "in": "query",
            "description": "maximum number of related builds returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 1000
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BetaGroups",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaGroupsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BetaGroups"
        ],
        "operationId": "betaGroups_createInstance",
        "requestBody": {
          "description": "BetaGroup representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaGroupCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single BetaGroup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaGroupResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaGroups/{id}": {
      "get": {
        "tags": [
          "BetaGroups"
        ],
        "operationId": "betaGroups_getInstance",
        "parameters": [
          {
            "name": "fields[betaGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "isInternalGroup",
                  "hasAccessToAllBuilds",
                  "publicLinkEnabled",
                  "publicLinkId",
                  "publicLinkLimitEnabled",
                  "publicLinkLimit",
                  "publicLink",
                  "feedbackEnabled",
                  "iosBuildsAvailableForAppleSiliconMac",
                  "app",
                  "builds",
                  "betaTesters"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaTesters]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaTesters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "firstName",
                  "lastName",
                  "email",
                  "inviteType",
                  "state",
                  "apps",
                  "betaGroups",
                  "builds"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "builds",
                  "betaTesters"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[betaTesters]",
            "in": "query",
            "description": "maximum number of related betaTesters returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[builds]",
            "in": "query",
            "description": "maximum number of related builds returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 1000
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaGroup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaGroupResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "BetaGroups"
        ],
        "operationId": "betaGroups_updateInstance",
        "requestBody": {
          "description": "BetaGroup representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaGroupUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaGroup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaGroupResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BetaGroups"
        ],
        "operationId": "betaGroups_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaLicenseAgreements": {
      "get": {
        "tags": [
          "BetaLicenseAgreements"
        ],
        "operationId": "betaLicenseAgreements_getCollection",
        "parameters": [
          {
            "name": "filter[app]",
            "in": "query",
            "description": "filter by id(s) of related 'app'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaLicenseAgreements]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaLicenseAgreements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "agreementText",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BetaLicenseAgreements",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaLicenseAgreementsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaLicenseAgreements/{id}": {
      "get": {
        "tags": [
          "BetaLicenseAgreements"
        ],
        "operationId": "betaLicenseAgreements_getInstance",
        "parameters": [
          {
            "name": "fields[betaLicenseAgreements]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaLicenseAgreements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "agreementText",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaLicenseAgreement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaLicenseAgreementResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "BetaLicenseAgreements"
        ],
        "operationId": "betaLicenseAgreements_updateInstance",
        "requestBody": {
          "description": "BetaLicenseAgreement representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaLicenseAgreementUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaLicenseAgreement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaLicenseAgreementResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaTesterInvitations": {
      "post": {
        "tags": [
          "BetaTesterInvitations"
        ],
        "operationId": "betaTesterInvitations_createInstance",
        "requestBody": {
          "description": "BetaTesterInvitation representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaTesterInvitationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single BetaTesterInvitation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaTesterInvitationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaTesters": {
      "get": {
        "tags": [
          "BetaTesters"
        ],
        "operationId": "betaTesters_getCollection",
        "parameters": [
          {
            "name": "filter[firstName]",
            "in": "query",
            "description": "filter by attribute 'firstName'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[lastName]",
            "in": "query",
            "description": "filter by attribute 'lastName'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[email]",
            "in": "query",
            "description": "filter by attribute 'email'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[inviteType]",
            "in": "query",
            "description": "filter by attribute 'inviteType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "EMAIL",
                  "PUBLIC_LINK"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[apps]",
            "in": "query",
            "description": "filter by id(s) of related 'apps'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[betaGroups]",
            "in": "query",
            "description": "filter by id(s) of related 'betaGroups'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[builds]",
            "in": "query",
            "description": "filter by id(s) of related 'builds'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "firstName",
                  "-firstName",
                  "lastName",
                  "-lastName",
                  "email",
                  "-email",
                  "inviteType",
                  "-inviteType",
                  "state",
                  "-state"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaTesters]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaTesters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "firstName",
                  "lastName",
                  "email",
                  "inviteType",
                  "state",
                  "apps",
                  "betaGroups",
                  "builds"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "isInternalGroup",
                  "hasAccessToAllBuilds",
                  "publicLinkEnabled",
                  "publicLinkId",
                  "publicLinkLimitEnabled",
                  "publicLinkLimit",
                  "publicLink",
                  "feedbackEnabled",
                  "iosBuildsAvailableForAppleSiliconMac",
                  "app",
                  "builds",
                  "betaTesters"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "apps",
                  "betaGroups",
                  "builds"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[apps]",
            "in": "query",
            "description": "maximum number of related apps returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[betaGroups]",
            "in": "query",
            "description": "maximum number of related betaGroups returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[builds]",
            "in": "query",
            "description": "maximum number of related builds returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BetaTesters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaTestersResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BetaTesters"
        ],
        "operationId": "betaTesters_createInstance",
        "requestBody": {
          "description": "BetaTester representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaTesterCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single BetaTester",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaTesterResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaTesters/{id}": {
      "get": {
        "tags": [
          "BetaTesters"
        ],
        "operationId": "betaTesters_getInstance",
        "parameters": [
          {
            "name": "fields[betaTesters]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaTesters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "firstName",
                  "lastName",
                  "email",
                  "inviteType",
                  "state",
                  "apps",
                  "betaGroups",
                  "builds"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "isInternalGroup",
                  "hasAccessToAllBuilds",
                  "publicLinkEnabled",
                  "publicLinkId",
                  "publicLinkLimitEnabled",
                  "publicLinkLimit",
                  "publicLink",
                  "feedbackEnabled",
                  "iosBuildsAvailableForAppleSiliconMac",
                  "app",
                  "builds",
                  "betaTesters"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "apps",
                  "betaGroups",
                  "builds"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[apps]",
            "in": "query",
            "description": "maximum number of related apps returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[betaGroups]",
            "in": "query",
            "description": "maximum number of related betaGroups returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[builds]",
            "in": "query",
            "description": "maximum number of related builds returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaTester",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaTesterResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BetaTesters"
        ],
        "operationId": "betaTesters_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for future completion"
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/buildBetaDetails": {
      "get": {
        "tags": [
          "BuildBetaDetails"
        ],
        "operationId": "buildBetaDetails_getCollection",
        "parameters": [
          {
            "name": "filter[build]",
            "in": "query",
            "description": "filter by id(s) of related 'build'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[buildBetaDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type buildBetaDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "autoNotifyEnabled",
                  "internalBuildState",
                  "externalBuildState",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BuildBetaDetails",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildBetaDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/buildBetaDetails/{id}": {
      "get": {
        "tags": [
          "BuildBetaDetails"
        ],
        "operationId": "buildBetaDetails_getInstance",
        "parameters": [
          {
            "name": "fields[buildBetaDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type buildBetaDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "autoNotifyEnabled",
                  "internalBuildState",
                  "externalBuildState",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BuildBetaDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildBetaDetailResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "BuildBetaDetails"
        ],
        "operationId": "buildBetaDetails_updateInstance",
        "requestBody": {
          "description": "BuildBetaDetail representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildBetaDetailUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BuildBetaDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildBetaDetailResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/buildBetaNotifications": {
      "post": {
        "tags": [
          "BuildBetaNotifications"
        ],
        "operationId": "buildBetaNotifications_createInstance",
        "requestBody": {
          "description": "BuildBetaNotification representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildBetaNotificationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single BuildBetaNotification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildBetaNotificationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/builds": {
      "get": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_getCollection",
        "parameters": [
          {
            "name": "filter[version]",
            "in": "query",
            "description": "filter by attribute 'version'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[expired]",
            "in": "query",
            "description": "filter by attribute 'expired'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[processingState]",
            "in": "query",
            "description": "filter by attribute 'processingState'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PROCESSING",
                  "FAILED",
                  "INVALID",
                  "VALID"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[betaAppReviewSubmission.betaReviewState]",
            "in": "query",
            "description": "filter by attribute 'betaAppReviewSubmission.betaReviewState'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "REJECTED",
                  "APPROVED"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[usesNonExemptEncryption]",
            "in": "query",
            "description": "filter by attribute 'usesNonExemptEncryption'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[preReleaseVersion.version]",
            "in": "query",
            "description": "filter by attribute 'preReleaseVersion.version'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[preReleaseVersion.platform]",
            "in": "query",
            "description": "filter by attribute 'preReleaseVersion.platform'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS",
                  "MAC_OS",
                  "TV_OS",
                  "VISION_OS"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[buildAudienceType]",
            "in": "query",
            "description": "filter by attribute 'buildAudienceType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INTERNAL_ONLY",
                  "APP_STORE_ELIGIBLE"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[preReleaseVersion]",
            "in": "query",
            "description": "filter by id(s) of related 'preReleaseVersion'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[app]",
            "in": "query",
            "description": "filter by id(s) of related 'app'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[betaGroups]",
            "in": "query",
            "description": "filter by id(s) of related 'betaGroups'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[appStoreVersion]",
            "in": "query",
            "description": "filter by id(s) of related 'appStoreVersion'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "-version",
                  "uploadedDate",
                  "-uploadedDate",
                  "preReleaseVersion",
                  "-preReleaseVersion"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[preReleaseVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type preReleaseVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "platform",
                  "builds",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaTesters]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaTesters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "firstName",
                  "lastName",
                  "email",
                  "inviteType",
                  "state",
                  "apps",
                  "betaGroups",
                  "builds"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaBuildLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaBuildLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "whatsNew",
                  "locale",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appEncryptionDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEncryptionDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appDescription",
                  "createdDate",
                  "usesEncryption",
                  "exempt",
                  "containsProprietaryCryptography",
                  "containsThirdPartyCryptography",
                  "availableOnFrenchStore",
                  "platform",
                  "uploadedDate",
                  "documentUrl",
                  "documentName",
                  "documentType",
                  "appEncryptionDeclarationState",
                  "codeValue",
                  "app",
                  "builds",
                  "appEncryptionDeclarationDocument"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaAppReviewSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppReviewSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "betaReviewState",
                  "submittedDate",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[buildBetaDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type buildBetaDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "autoNotifyEnabled",
                  "internalBuildState",
                  "externalBuildState",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[buildIcons]",
            "in": "query",
            "description": "the fields to include for returned resources of type buildIcons",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "iconAsset",
                  "iconType"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[betaBuildLocalizations]",
            "in": "query",
            "description": "maximum number of related betaBuildLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[betaGroups]",
            "in": "query",
            "description": "maximum number of related betaGroups returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[buildBundles]",
            "in": "query",
            "description": "maximum number of related buildBundles returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[icons]",
            "in": "query",
            "description": "maximum number of related icons returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[individualTesters]",
            "in": "query",
            "description": "maximum number of related individualTesters returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Builds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/builds/{id}": {
      "get": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_getInstance",
        "parameters": [
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[preReleaseVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type preReleaseVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "platform",
                  "builds",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaTesters]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaTesters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "firstName",
                  "lastName",
                  "email",
                  "inviteType",
                  "state",
                  "apps",
                  "betaGroups",
                  "builds"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaBuildLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaBuildLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "whatsNew",
                  "locale",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appEncryptionDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEncryptionDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appDescription",
                  "createdDate",
                  "usesEncryption",
                  "exempt",
                  "containsProprietaryCryptography",
                  "containsThirdPartyCryptography",
                  "availableOnFrenchStore",
                  "platform",
                  "uploadedDate",
                  "documentUrl",
                  "documentName",
                  "documentType",
                  "appEncryptionDeclarationState",
                  "codeValue",
                  "app",
                  "builds",
                  "appEncryptionDeclarationDocument"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[betaAppReviewSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppReviewSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "betaReviewState",
                  "submittedDate",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[buildBetaDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type buildBetaDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "autoNotifyEnabled",
                  "internalBuildState",
                  "externalBuildState",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[buildIcons]",
            "in": "query",
            "description": "the fields to include for returned resources of type buildIcons",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "iconAsset",
                  "iconType"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[betaBuildLocalizations]",
            "in": "query",
            "description": "maximum number of related betaBuildLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[betaGroups]",
            "in": "query",
            "description": "maximum number of related betaGroups returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[buildBundles]",
            "in": "query",
            "description": "maximum number of related buildBundles returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[icons]",
            "in": "query",
            "description": "maximum number of related icons returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[individualTesters]",
            "in": "query",
            "description": "maximum number of related individualTesters returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single Build",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_updateInstance",
        "requestBody": {
          "description": "Build representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single Build",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/bundleIdCapabilities": {
      "post": {
        "tags": [
          "BundleIdCapabilities"
        ],
        "operationId": "bundleIdCapabilities_createInstance",
        "requestBody": {
          "description": "BundleIdCapability representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BundleIdCapabilityCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single BundleIdCapability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleIdCapabilityResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/bundleIdCapabilities/{id}": {
      "patch": {
        "tags": [
          "BundleIdCapabilities"
        ],
        "operationId": "bundleIdCapabilities_updateInstance",
        "requestBody": {
          "description": "BundleIdCapability representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BundleIdCapabilityUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BundleIdCapability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleIdCapabilityResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BundleIdCapabilities"
        ],
        "operationId": "bundleIdCapabilities_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/bundleIds": {
      "get": {
        "tags": [
          "BundleIds"
        ],
        "operationId": "bundleIds_getCollection",
        "parameters": [
          {
            "name": "filter[name]",
            "in": "query",
            "description": "filter by attribute 'name'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[platform]",
            "in": "query",
            "description": "filter by attribute 'platform'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS",
                  "MAC_OS",
                  "UNIVERSAL"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[identifier]",
            "in": "query",
            "description": "filter by attribute 'identifier'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[seedId]",
            "in": "query",
            "description": "filter by attribute 'seedId'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "-name",
                  "platform",
                  "-platform",
                  "identifier",
                  "-identifier",
                  "seedId",
                  "-seedId",
                  "id",
                  "-id"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[bundleIds]",
            "in": "query",
            "description": "the fields to include for returned resources of type bundleIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "identifier",
                  "seedId",
                  "profiles",
                  "bundleIdCapabilities",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[profiles]",
            "in": "query",
            "description": "the fields to include for returned resources of type profiles",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "profileType",
                  "profileState",
                  "profileContent",
                  "uuid",
                  "createdDate",
                  "expirationDate",
                  "bundleId",
                  "devices",
                  "certificates"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[bundleIdCapabilities]",
            "in": "query",
            "description": "the fields to include for returned resources of type bundleIdCapabilities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "capabilityType",
                  "settings"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "profiles",
                  "bundleIdCapabilities",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[bundleIdCapabilities]",
            "in": "query",
            "description": "maximum number of related bundleIdCapabilities returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[profiles]",
            "in": "query",
            "description": "maximum number of related profiles returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BundleIds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleIdsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BundleIds"
        ],
        "operationId": "bundleIds_createInstance",
        "requestBody": {
          "description": "BundleId representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BundleIdCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single BundleId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleIdResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/bundleIds/{id}": {
      "get": {
        "tags": [
          "BundleIds"
        ],
        "operationId": "bundleIds_getInstance",
        "parameters": [
          {
            "name": "fields[bundleIds]",
            "in": "query",
            "description": "the fields to include for returned resources of type bundleIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "identifier",
                  "seedId",
                  "profiles",
                  "bundleIdCapabilities",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[profiles]",
            "in": "query",
            "description": "the fields to include for returned resources of type profiles",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "profileType",
                  "profileState",
                  "profileContent",
                  "uuid",
                  "createdDate",
                  "expirationDate",
                  "bundleId",
                  "devices",
                  "certificates"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[bundleIdCapabilities]",
            "in": "query",
            "description": "the fields to include for returned resources of type bundleIdCapabilities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "capabilityType",
                  "settings"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "profiles",
                  "bundleIdCapabilities",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[bundleIdCapabilities]",
            "in": "query",
            "description": "maximum number of related bundleIdCapabilities returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[profiles]",
            "in": "query",
            "description": "maximum number of related profiles returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BundleId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleIdResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "BundleIds"
        ],
        "operationId": "bundleIds_updateInstance",
        "requestBody": {
          "description": "BundleId representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BundleIdUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BundleId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleIdResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BundleIds"
        ],
        "operationId": "bundleIds_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/certificates": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "operationId": "certificates_getCollection",
        "parameters": [
          {
            "name": "filter[displayName]",
            "in": "query",
            "description": "filter by attribute 'displayName'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[certificateType]",
            "in": "query",
            "description": "filter by attribute 'certificateType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS_DEVELOPMENT",
                  "IOS_DISTRIBUTION",
                  "MAC_APP_DISTRIBUTION",
                  "MAC_INSTALLER_DISTRIBUTION",
                  "MAC_APP_DEVELOPMENT",
                  "DEVELOPER_ID_KEXT",
                  "DEVELOPER_ID_KEXT_G2",
                  "DEVELOPER_ID_APPLICATION",
                  "DEVELOPER_ID_APPLICATION_G2",
                  "DEVELOPMENT",
                  "DISTRIBUTION",
                  "PASS_TYPE_ID",
                  "PASS_TYPE_ID_WITH_NFC"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[serialNumber]",
            "in": "query",
            "description": "filter by attribute 'serialNumber'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "displayName",
                  "-displayName",
                  "certificateType",
                  "-certificateType",
                  "serialNumber",
                  "-serialNumber",
                  "id",
                  "-id"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[certificates]",
            "in": "query",
            "description": "the fields to include for returned resources of type certificates",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "certificateType",
                  "displayName",
                  "serialNumber",
                  "platform",
                  "expirationDate",
                  "certificateContent"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Certificates",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificatesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Certificates"
        ],
        "operationId": "certificates_createInstance",
        "requestBody": {
          "description": "Certificate representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single Certificate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/certificates/{id}": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "operationId": "certificates_getInstance",
        "parameters": [
          {
            "name": "fields[certificates]",
            "in": "query",
            "description": "the fields to include for returned resources of type certificates",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "certificateType",
                  "displayName",
                  "serialNumber",
                  "platform",
                  "expirationDate",
                  "certificateContent"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single Certificate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Certificates"
        ],
        "operationId": "certificates_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciArtifacts/{id}": {
      "get": {
        "tags": [
          "CiArtifacts"
        ],
        "operationId": "ciArtifacts_getInstance",
        "parameters": [
          {
            "name": "fields[ciArtifacts]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciArtifacts",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileType",
                  "fileName",
                  "fileSize",
                  "downloadUrl"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single CiArtifact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiArtifactResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciBuildActions/{id}": {
      "get": {
        "tags": [
          "CiBuildActions"
        ],
        "operationId": "ciBuildActions_getInstance",
        "parameters": [
          {
            "name": "fields[ciBuildActions]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciBuildActions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "actionType",
                  "startedDate",
                  "finishedDate",
                  "issueCounts",
                  "executionProgress",
                  "completionStatus",
                  "isRequiredToPass",
                  "buildRun",
                  "artifacts",
                  "issues",
                  "testResults"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[ciBuildRuns]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciBuildRuns",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "number",
                  "createdDate",
                  "startedDate",
                  "finishedDate",
                  "sourceCommit",
                  "destinationCommit",
                  "isPullRequestBuild",
                  "issueCounts",
                  "executionProgress",
                  "completionStatus",
                  "startReason",
                  "cancelReason",
                  "builds",
                  "workflow",
                  "product",
                  "sourceBranchOrTag",
                  "destinationBranch",
                  "actions",
                  "pullRequest"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "buildRun"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single CiBuildAction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiBuildActionResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciBuildRuns": {
      "post": {
        "tags": [
          "CiBuildRuns"
        ],
        "operationId": "ciBuildRuns_createInstance",
        "requestBody": {
          "description": "CiBuildRun representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CiBuildRunCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single CiBuildRun",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiBuildRunResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ciBuildRuns/{id}": {
      "get": {
        "tags": [
          "CiBuildRuns"
        ],
        "operationId": "ciBuildRuns_getInstance",
        "parameters": [
          {
            "name": "fields[ciBuildRuns]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciBuildRuns",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "number",
                  "createdDate",
                  "startedDate",
                  "finishedDate",
                  "sourceCommit",
                  "destinationCommit",
                  "isPullRequestBuild",
                  "issueCounts",
                  "executionProgress",
                  "completionStatus",
                  "startReason",
                  "cancelReason",
                  "builds",
                  "workflow",
                  "product",
                  "sourceBranchOrTag",
                  "destinationBranch",
                  "actions",
                  "pullRequest"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "builds",
                  "workflow",
                  "product",
                  "sourceBranchOrTag",
                  "destinationBranch",
                  "pullRequest"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[builds]",
            "in": "query",
            "description": "maximum number of related builds returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single CiBuildRun",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiBuildRunResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciIssues/{id}": {
      "get": {
        "tags": [
          "CiIssues"
        ],
        "operationId": "ciIssues_getInstance",
        "parameters": [
          {
            "name": "fields[ciIssues]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciIssues",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "issueType",
                  "message",
                  "fileSource",
                  "category"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single CiIssue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiIssueResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciMacOsVersions": {
      "get": {
        "tags": [
          "CiMacOsVersions"
        ],
        "operationId": "ciMacOsVersions_getCollection",
        "parameters": [
          {
            "name": "fields[ciMacOsVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciMacOsVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "name",
                  "xcodeVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[ciXcodeVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciXcodeVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "name",
                  "testDestinations",
                  "macOsVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "xcodeVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[xcodeVersions]",
            "in": "query",
            "description": "maximum number of related xcodeVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of CiMacOsVersions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiMacOsVersionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ciMacOsVersions/{id}": {
      "get": {
        "tags": [
          "CiMacOsVersions"
        ],
        "operationId": "ciMacOsVersions_getInstance",
        "parameters": [
          {
            "name": "fields[ciMacOsVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciMacOsVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "name",
                  "xcodeVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[ciXcodeVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciXcodeVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "name",
                  "testDestinations",
                  "macOsVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "xcodeVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[xcodeVersions]",
            "in": "query",
            "description": "maximum number of related xcodeVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single CiMacOsVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiMacOsVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciProducts": {
      "get": {
        "tags": [
          "CiProducts"
        ],
        "operationId": "ciProducts_getCollection",
        "parameters": [
          {
            "name": "filter[productType]",
            "in": "query",
            "description": "filter by attribute 'productType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "APP",
                  "FRAMEWORK"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[app]",
            "in": "query",
            "description": "filter by id(s) of related 'app'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[ciProducts]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciProducts",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "productType",
                  "app",
                  "bundleId",
                  "workflows",
                  "primaryRepositories",
                  "additionalRepositories",
                  "buildRuns"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[scmRepositories]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmRepositories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lastAccessedDate",
                  "httpCloneUrl",
                  "sshCloneUrl",
                  "ownerName",
                  "repositoryName",
                  "scmProvider",
                  "defaultBranch",
                  "gitReferences",
                  "pullRequests"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "bundleId",
                  "primaryRepositories"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[primaryRepositories]",
            "in": "query",
            "description": "maximum number of related primaryRepositories returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of CiProducts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiProductsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ciProducts/{id}": {
      "get": {
        "tags": [
          "CiProducts"
        ],
        "operationId": "ciProducts_getInstance",
        "parameters": [
          {
            "name": "fields[ciProducts]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciProducts",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "productType",
                  "app",
                  "bundleId",
                  "workflows",
                  "primaryRepositories",
                  "additionalRepositories",
                  "buildRuns"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[scmRepositories]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmRepositories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lastAccessedDate",
                  "httpCloneUrl",
                  "sshCloneUrl",
                  "ownerName",
                  "repositoryName",
                  "scmProvider",
                  "defaultBranch",
                  "gitReferences",
                  "pullRequests"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "bundleId",
                  "primaryRepositories"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[primaryRepositories]",
            "in": "query",
            "description": "maximum number of related primaryRepositories returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single CiProduct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiProductResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CiProducts"
        ],
        "operationId": "ciProducts_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciTestResults/{id}": {
      "get": {
        "tags": [
          "CiTestResults"
        ],
        "operationId": "ciTestResults_getInstance",
        "parameters": [
          {
            "name": "fields[ciTestResults]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciTestResults",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "className",
                  "name",
                  "status",
                  "fileSource",
                  "message",
                  "destinationTestResults"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single CiTestResult",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiTestResultResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciWorkflows": {
      "post": {
        "tags": [
          "CiWorkflows"
        ],
        "operationId": "ciWorkflows_createInstance",
        "requestBody": {
          "description": "CiWorkflow representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CiWorkflowCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single CiWorkflow",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiWorkflowResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ciWorkflows/{id}": {
      "get": {
        "tags": [
          "CiWorkflows"
        ],
        "operationId": "ciWorkflows_getInstance",
        "parameters": [
          {
            "name": "fields[ciWorkflows]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciWorkflows",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "branchStartCondition",
                  "tagStartCondition",
                  "pullRequestStartCondition",
                  "scheduledStartCondition",
                  "manualBranchStartCondition",
                  "manualTagStartCondition",
                  "manualPullRequestStartCondition",
                  "actions",
                  "isEnabled",
                  "isLockedForEditing",
                  "clean",
                  "containerFilePath",
                  "lastModifiedDate",
                  "product",
                  "repository",
                  "xcodeVersion",
                  "macOsVersion",
                  "buildRuns"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[scmRepositories]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmRepositories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lastAccessedDate",
                  "httpCloneUrl",
                  "sshCloneUrl",
                  "ownerName",
                  "repositoryName",
                  "scmProvider",
                  "defaultBranch",
                  "gitReferences",
                  "pullRequests"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "product",
                  "repository",
                  "xcodeVersion",
                  "macOsVersion"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single CiWorkflow",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiWorkflowResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CiWorkflows"
        ],
        "operationId": "ciWorkflows_updateInstance",
        "requestBody": {
          "description": "CiWorkflow representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CiWorkflowUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single CiWorkflow",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiWorkflowResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CiWorkflows"
        ],
        "operationId": "ciWorkflows_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciXcodeVersions": {
      "get": {
        "tags": [
          "CiXcodeVersions"
        ],
        "operationId": "ciXcodeVersions_getCollection",
        "parameters": [
          {
            "name": "fields[ciXcodeVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciXcodeVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "name",
                  "testDestinations",
                  "macOsVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[ciMacOsVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciMacOsVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "name",
                  "xcodeVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "macOsVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[macOsVersions]",
            "in": "query",
            "description": "maximum number of related macOsVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of CiXcodeVersions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiXcodeVersionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ciXcodeVersions/{id}": {
      "get": {
        "tags": [
          "CiXcodeVersions"
        ],
        "operationId": "ciXcodeVersions_getInstance",
        "parameters": [
          {
            "name": "fields[ciXcodeVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciXcodeVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "name",
                  "testDestinations",
                  "macOsVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[ciMacOsVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciMacOsVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "name",
                  "xcodeVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "macOsVersions"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[macOsVersions]",
            "in": "query",
            "description": "maximum number of related macOsVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single CiXcodeVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiXcodeVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/customerReviewResponses": {
      "post": {
        "tags": [
          "CustomerReviewResponses"
        ],
        "operationId": "customerReviewResponses_createInstance",
        "requestBody": {
          "description": "CustomerReviewResponse representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerReviewResponseV1CreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single CustomerReviewResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReviewResponseV1Response"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customerReviewResponses/{id}": {
      "get": {
        "tags": [
          "CustomerReviewResponses"
        ],
        "operationId": "customerReviewResponses_getInstance",
        "parameters": [
          {
            "name": "fields[customerReviewResponses]",
            "in": "query",
            "description": "the fields to include for returned resources of type customerReviewResponses",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "responseBody",
                  "lastModifiedDate",
                  "state",
                  "review"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "review"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single CustomerReviewResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReviewResponseV1Response"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerReviewResponses"
        ],
        "operationId": "customerReviewResponses_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/customerReviews/{id}": {
      "get": {
        "tags": [
          "CustomerReviews"
        ],
        "operationId": "customerReviews_getInstance",
        "parameters": [
          {
            "name": "fields[customerReviews]",
            "in": "query",
            "description": "the fields to include for returned resources of type customerReviews",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "rating",
                  "title",
                  "body",
                  "reviewerNickname",
                  "createdDate",
                  "territory",
                  "response"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[customerReviewResponses]",
            "in": "query",
            "description": "the fields to include for returned resources of type customerReviewResponses",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "responseBody",
                  "lastModifiedDate",
                  "state",
                  "review"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "response"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single CustomerReview",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReviewResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "devices_getCollection",
        "parameters": [
          {
            "name": "filter[name]",
            "in": "query",
            "description": "filter by attribute 'name'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[platform]",
            "in": "query",
            "description": "filter by attribute 'platform'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS",
                  "MAC_OS",
                  "UNIVERSAL"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[udid]",
            "in": "query",
            "description": "filter by attribute 'udid'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[status]",
            "in": "query",
            "description": "filter by attribute 'status'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ENABLED",
                  "DISABLED"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "-name",
                  "platform",
                  "-platform",
                  "udid",
                  "-udid",
                  "status",
                  "-status",
                  "id",
                  "-id"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[devices]",
            "in": "query",
            "description": "the fields to include for returned resources of type devices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "udid",
                  "deviceClass",
                  "status",
                  "model",
                  "addedDate"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Devices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "devices_createInstance",
        "requestBody": {
          "description": "Device representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single Device",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/devices/{id}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "devices_getInstance",
        "parameters": [
          {
            "name": "fields[devices]",
            "in": "query",
            "description": "the fields to include for returned resources of type devices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "udid",
                  "deviceClass",
                  "status",
                  "model",
                  "addedDate"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single Device",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Devices"
        ],
        "operationId": "devices_updateInstance",
        "requestBody": {
          "description": "Device representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single Device",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/endAppAvailabilityPreOrders": {
      "post": {
        "tags": [
          "EndAppAvailabilityPreOrders"
        ],
        "operationId": "endAppAvailabilityPreOrders_createInstance",
        "requestBody": {
          "description": "EndAppAvailabilityPreOrder representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndAppAvailabilityPreOrderCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single EndAppAvailabilityPreOrder",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndAppAvailabilityPreOrderResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/endUserLicenseAgreements": {
      "post": {
        "tags": [
          "EndUserLicenseAgreements"
        ],
        "operationId": "endUserLicenseAgreements_createInstance",
        "requestBody": {
          "description": "EndUserLicenseAgreement representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndUserLicenseAgreementCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single EndUserLicenseAgreement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndUserLicenseAgreementResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/endUserLicenseAgreements/{id}": {
      "get": {
        "tags": [
          "EndUserLicenseAgreements"
        ],
        "operationId": "endUserLicenseAgreements_getInstance",
        "parameters": [
          {
            "name": "fields[endUserLicenseAgreements]",
            "in": "query",
            "description": "the fields to include for returned resources of type endUserLicenseAgreements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "agreementText",
                  "app",
                  "territories"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "territories"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[territories]",
            "in": "query",
            "description": "maximum number of related territories returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single EndUserLicenseAgreement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndUserLicenseAgreementResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "EndUserLicenseAgreements"
        ],
        "operationId": "endUserLicenseAgreements_updateInstance",
        "requestBody": {
          "description": "EndUserLicenseAgreement representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndUserLicenseAgreementUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single EndUserLicenseAgreement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndUserLicenseAgreementResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EndUserLicenseAgreements"
        ],
        "operationId": "endUserLicenseAgreements_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/financeReports": {
      "get": {
        "tags": [
          "FinanceReports"
        ],
        "operationId": "financeReports_getCollection",
        "parameters": [
          {
            "name": "filter[vendorNumber]",
            "in": "query",
            "description": "filter by attribute 'vendorNumber'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": true
          },
          {
            "name": "filter[reportType]",
            "in": "query",
            "description": "filter by attribute 'reportType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "FINANCIAL",
                  "FINANCE_DETAIL"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": true
          },
          {
            "name": "filter[regionCode]",
            "in": "query",
            "description": "filter by attribute 'regionCode'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": true
          },
          {
            "name": "filter[reportDate]",
            "in": "query",
            "description": "filter by attribute 'reportDate'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of FinanceReports",
            "content": {
              "application/a-gzip": {
                "schema": {
                  "$ref": "#/components/schemas/gzip"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterAchievementImages": {
      "post": {
        "tags": [
          "GameCenterAchievementImages"
        ],
        "operationId": "gameCenterAchievementImages_createInstance",
        "requestBody": {
          "description": "GameCenterAchievementImage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterAchievementImageCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterAchievementImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementImageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterAchievementImages/{id}": {
      "get": {
        "tags": [
          "GameCenterAchievementImages"
        ],
        "operationId": "gameCenterAchievementImages_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterAchievementImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState",
                  "gameCenterAchievementLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterAchievementLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterAchievementImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementImageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterAchievementImages"
        ],
        "operationId": "gameCenterAchievementImages_updateInstance",
        "requestBody": {
          "description": "GameCenterAchievementImage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterAchievementImageUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterAchievementImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementImageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterAchievementImages"
        ],
        "operationId": "gameCenterAchievementImages_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterAchievementLocalizations": {
      "post": {
        "tags": [
          "GameCenterAchievementLocalizations"
        ],
        "operationId": "gameCenterAchievementLocalizations_createInstance",
        "requestBody": {
          "description": "GameCenterAchievementLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterAchievementLocalizationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterAchievementLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterAchievementLocalizations/{id}": {
      "get": {
        "tags": [
          "GameCenterAchievementLocalizations"
        ],
        "operationId": "gameCenterAchievementLocalizations_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterAchievementLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "beforeEarnedDescription",
                  "afterEarnedDescription",
                  "gameCenterAchievement",
                  "gameCenterAchievementImage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterAchievements]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "points",
                  "showBeforeEarned",
                  "repeatable",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterAchievementImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState",
                  "gameCenterAchievementLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterAchievement",
                  "gameCenterAchievementImage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterAchievementLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterAchievementLocalizations"
        ],
        "operationId": "gameCenterAchievementLocalizations_updateInstance",
        "requestBody": {
          "description": "GameCenterAchievementLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterAchievementLocalizationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterAchievementLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterAchievementLocalizations"
        ],
        "operationId": "gameCenterAchievementLocalizations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterAchievementReleases": {
      "post": {
        "tags": [
          "GameCenterAchievementReleases"
        ],
        "operationId": "gameCenterAchievementReleases_createInstance",
        "requestBody": {
          "description": "GameCenterAchievementRelease representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterAchievementReleaseCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterAchievementRelease",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementReleaseResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterAchievementReleases/{id}": {
      "get": {
        "tags": [
          "GameCenterAchievementReleases"
        ],
        "operationId": "gameCenterAchievementReleases_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterAchievementReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterAchievement"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterAchievement"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterAchievementRelease",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementReleaseResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterAchievementReleases"
        ],
        "operationId": "gameCenterAchievementReleases_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterAchievements": {
      "post": {
        "tags": [
          "GameCenterAchievements"
        ],
        "operationId": "gameCenterAchievements_createInstance",
        "requestBody": {
          "description": "GameCenterAchievement representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterAchievementCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterAchievement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterAchievements/{id}": {
      "get": {
        "tags": [
          "GameCenterAchievements"
        ],
        "operationId": "gameCenterAchievements_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterAchievements]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "points",
                  "showBeforeEarned",
                  "repeatable",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterAchievementLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "beforeEarnedDescription",
                  "afterEarnedDescription",
                  "gameCenterAchievement",
                  "gameCenterAchievementImage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterAchievementReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterAchievement"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[releases]",
            "in": "query",
            "description": "maximum number of related releases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterAchievement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterAchievements"
        ],
        "operationId": "gameCenterAchievements_updateInstance",
        "requestBody": {
          "description": "GameCenterAchievement representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterAchievementUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterAchievement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterAchievements"
        ],
        "operationId": "gameCenterAchievements_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterAppVersions": {
      "post": {
        "tags": [
          "GameCenterAppVersions"
        ],
        "operationId": "gameCenterAppVersions_createInstance",
        "requestBody": {
          "description": "GameCenterAppVersion representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterAppVersionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterAppVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAppVersionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterAppVersions/{id}": {
      "get": {
        "tags": [
          "GameCenterAppVersions"
        ],
        "operationId": "gameCenterAppVersions_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterAppVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAppVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "enabled",
                  "compatibilityVersions",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "compatibilityVersions",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[compatibilityVersions]",
            "in": "query",
            "description": "maximum number of related compatibilityVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterAppVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAppVersionResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterAppVersions"
        ],
        "operationId": "gameCenterAppVersions_updateInstance",
        "requestBody": {
          "description": "GameCenterAppVersion representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterAppVersionUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterAppVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAppVersionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterDetails": {
      "post": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_createInstance",
        "requestBody": {
          "description": "GameCenterDetail representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterDetailCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterDetailResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterDetails/{id}": {
      "get": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterAppVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAppVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "enabled",
                  "compatibilityVersions",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterAchievements]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "points",
                  "showBeforeEarned",
                  "repeatable",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterAchievementReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterAchievement"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboardReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[achievementReleases]",
            "in": "query",
            "description": "maximum number of related achievementReleases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[gameCenterAchievements]",
            "in": "query",
            "description": "maximum number of related gameCenterAchievements returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[gameCenterAppVersions]",
            "in": "query",
            "description": "maximum number of related gameCenterAppVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboardSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[gameCenterLeaderboards]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboards returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[leaderboardReleases]",
            "in": "query",
            "description": "maximum number of related leaderboardReleases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[leaderboardSetReleases]",
            "in": "query",
            "description": "maximum number of related leaderboardSetReleases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterDetailResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_updateInstance",
        "requestBody": {
          "description": "GameCenterDetail representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterDetailUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterDetailResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterGroups": {
      "get": {
        "tags": [
          "GameCenterGroups"
        ],
        "operationId": "gameCenterGroups_getCollection",
        "parameters": [
          {
            "name": "filter[gameCenterDetails]",
            "in": "query",
            "description": "filter by id(s) of related 'gameCenterDetails'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterAchievements]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "points",
                  "showBeforeEarned",
                  "repeatable",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[gameCenterAchievements]",
            "in": "query",
            "description": "maximum number of related gameCenterAchievements returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[gameCenterDetails]",
            "in": "query",
            "description": "maximum number of related gameCenterDetails returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboardSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[gameCenterLeaderboards]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboards returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterGroups",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterGroupsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "GameCenterGroups"
        ],
        "operationId": "gameCenterGroups_createInstance",
        "requestBody": {
          "description": "GameCenterGroup representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterGroupCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterGroup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterGroupResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterGroups/{id}": {
      "get": {
        "tags": [
          "GameCenterGroups"
        ],
        "operationId": "gameCenterGroups_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterAchievements]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "points",
                  "showBeforeEarned",
                  "repeatable",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[gameCenterAchievements]",
            "in": "query",
            "description": "maximum number of related gameCenterAchievements returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[gameCenterDetails]",
            "in": "query",
            "description": "maximum number of related gameCenterDetails returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboardSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[gameCenterLeaderboards]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboards returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterGroup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterGroupResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterGroups"
        ],
        "operationId": "gameCenterGroups_updateInstance",
        "requestBody": {
          "description": "GameCenterGroup representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterGroupUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterGroup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterGroupResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterGroups"
        ],
        "operationId": "gameCenterGroups_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardEntrySubmissions": {
      "post": {
        "tags": [
          "GameCenterLeaderboardEntrySubmissions"
        ],
        "operationId": "gameCenterLeaderboardEntrySubmissions_createInstance",
        "requestBody": {
          "description": "GameCenterLeaderboardEntrySubmission representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardEntrySubmissionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterLeaderboardEntrySubmission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardEntrySubmissionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterLeaderboardImages": {
      "post": {
        "tags": [
          "GameCenterLeaderboardImages"
        ],
        "operationId": "gameCenterLeaderboardImages_createInstance",
        "requestBody": {
          "description": "GameCenterLeaderboardImage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardImageCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterLeaderboardImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardImageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterLeaderboardImages/{id}": {
      "get": {
        "tags": [
          "GameCenterLeaderboardImages"
        ],
        "operationId": "gameCenterLeaderboardImages_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterLeaderboardImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState",
                  "gameCenterLeaderboardLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardImageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterLeaderboardImages"
        ],
        "operationId": "gameCenterLeaderboardImages_updateInstance",
        "requestBody": {
          "description": "GameCenterLeaderboardImage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardImageUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardImageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterLeaderboardImages"
        ],
        "operationId": "gameCenterLeaderboardImages_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardLocalizations": {
      "post": {
        "tags": [
          "GameCenterLeaderboardLocalizations"
        ],
        "operationId": "gameCenterLeaderboardLocalizations_createInstance",
        "requestBody": {
          "description": "GameCenterLeaderboardLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardLocalizationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterLeaderboardLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterLeaderboardLocalizations/{id}": {
      "get": {
        "tags": [
          "GameCenterLeaderboardLocalizations"
        ],
        "operationId": "gameCenterLeaderboardLocalizations_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterLeaderboardLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "formatterOverride",
                  "formatterSuffix",
                  "formatterSuffixSingular",
                  "gameCenterLeaderboard",
                  "gameCenterLeaderboardImage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboardImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState",
                  "gameCenterLeaderboardLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboard",
                  "gameCenterLeaderboardImage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterLeaderboardLocalizations"
        ],
        "operationId": "gameCenterLeaderboardLocalizations_updateInstance",
        "requestBody": {
          "description": "GameCenterLeaderboardLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardLocalizationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterLeaderboardLocalizations"
        ],
        "operationId": "gameCenterLeaderboardLocalizations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardReleases": {
      "post": {
        "tags": [
          "GameCenterLeaderboardReleases"
        ],
        "operationId": "gameCenterLeaderboardReleases_createInstance",
        "requestBody": {
          "description": "GameCenterLeaderboardRelease representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardReleaseCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterLeaderboardRelease",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardReleaseResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterLeaderboardReleases/{id}": {
      "get": {
        "tags": [
          "GameCenterLeaderboardReleases"
        ],
        "operationId": "gameCenterLeaderboardReleases_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterLeaderboardReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardRelease",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardReleaseResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterLeaderboardReleases"
        ],
        "operationId": "gameCenterLeaderboardReleases_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardSetImages": {
      "post": {
        "tags": [
          "GameCenterLeaderboardSetImages"
        ],
        "operationId": "gameCenterLeaderboardSetImages_createInstance",
        "requestBody": {
          "description": "GameCenterLeaderboardSetImage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardSetImageCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterLeaderboardSetImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetImageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterLeaderboardSetImages/{id}": {
      "get": {
        "tags": [
          "GameCenterLeaderboardSetImages"
        ],
        "operationId": "gameCenterLeaderboardSetImages_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterLeaderboardSetImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState",
                  "gameCenterLeaderboardSetLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardSetLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardSetImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetImageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterLeaderboardSetImages"
        ],
        "operationId": "gameCenterLeaderboardSetImages_updateInstance",
        "requestBody": {
          "description": "GameCenterLeaderboardSetImage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardSetImageUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardSetImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetImageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterLeaderboardSetImages"
        ],
        "operationId": "gameCenterLeaderboardSetImages_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardSetLocalizations": {
      "post": {
        "tags": [
          "GameCenterLeaderboardSetLocalizations"
        ],
        "operationId": "gameCenterLeaderboardSetLocalizations_createInstance",
        "requestBody": {
          "description": "GameCenterLeaderboardSetLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardSetLocalizationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterLeaderboardSetLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterLeaderboardSetLocalizations/{id}": {
      "get": {
        "tags": [
          "GameCenterLeaderboardSetLocalizations"
        ],
        "operationId": "gameCenterLeaderboardSetLocalizations_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterLeaderboardSetLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "gameCenterLeaderboardSet",
                  "gameCenterLeaderboardSetImage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState",
                  "gameCenterLeaderboardSetLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardSet",
                  "gameCenterLeaderboardSetImage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardSetLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterLeaderboardSetLocalizations"
        ],
        "operationId": "gameCenterLeaderboardSetLocalizations_updateInstance",
        "requestBody": {
          "description": "GameCenterLeaderboardSetLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardSetLocalizationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardSetLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterLeaderboardSetLocalizations"
        ],
        "operationId": "gameCenterLeaderboardSetLocalizations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardSetMemberLocalizations": {
      "get": {
        "tags": [
          "GameCenterLeaderboardSetMemberLocalizations"
        ],
        "operationId": "gameCenterLeaderboardSetMemberLocalizations_getCollection",
        "parameters": [
          {
            "name": "filter[gameCenterLeaderboardSet]",
            "in": "query",
            "description": "filter by id(s) of related 'gameCenterLeaderboardSet'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": true
          },
          {
            "name": "filter[gameCenterLeaderboard]",
            "in": "query",
            "description": "filter by id(s) of related 'gameCenterLeaderboard'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": true
          },
          {
            "name": "fields[gameCenterLeaderboardSetMemberLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetMemberLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "locale",
                  "gameCenterLeaderboardSet",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardSet",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterLeaderboardSetMemberLocalizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetMemberLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "GameCenterLeaderboardSetMemberLocalizations"
        ],
        "operationId": "gameCenterLeaderboardSetMemberLocalizations_createInstance",
        "requestBody": {
          "description": "GameCenterLeaderboardSetMemberLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardSetMemberLocalizationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterLeaderboardSetMemberLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetMemberLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterLeaderboardSetMemberLocalizations/{id}": {
      "patch": {
        "tags": [
          "GameCenterLeaderboardSetMemberLocalizations"
        ],
        "operationId": "gameCenterLeaderboardSetMemberLocalizations_updateInstance",
        "requestBody": {
          "description": "GameCenterLeaderboardSetMemberLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardSetMemberLocalizationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardSetMemberLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetMemberLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterLeaderboardSetMemberLocalizations"
        ],
        "operationId": "gameCenterLeaderboardSetMemberLocalizations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardSetReleases": {
      "post": {
        "tags": [
          "GameCenterLeaderboardSetReleases"
        ],
        "operationId": "gameCenterLeaderboardSetReleases_createInstance",
        "requestBody": {
          "description": "GameCenterLeaderboardSetRelease representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardSetReleaseCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterLeaderboardSetRelease",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetReleaseResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterLeaderboardSetReleases/{id}": {
      "get": {
        "tags": [
          "GameCenterLeaderboardSetReleases"
        ],
        "operationId": "gameCenterLeaderboardSetReleases_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterLeaderboardSetReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardSetRelease",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetReleaseResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterLeaderboardSetReleases"
        ],
        "operationId": "gameCenterLeaderboardSetReleases_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardSets": {
      "post": {
        "tags": [
          "GameCenterLeaderboardSets"
        ],
        "operationId": "gameCenterLeaderboardSets_createInstance",
        "requestBody": {
          "description": "GameCenterLeaderboardSet representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardSetCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterLeaderboardSet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterLeaderboardSets/{id}": {
      "get": {
        "tags": [
          "GameCenterLeaderboardSets"
        ],
        "operationId": "gameCenterLeaderboardSets_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "gameCenterLeaderboardSet",
                  "gameCenterLeaderboardSetImage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[gameCenterLeaderboards]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboards returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[releases]",
            "in": "query",
            "description": "maximum number of related releases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardSet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterLeaderboardSets"
        ],
        "operationId": "gameCenterLeaderboardSets_updateInstance",
        "requestBody": {
          "description": "GameCenterLeaderboardSet representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardSetUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardSet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterLeaderboardSets"
        ],
        "operationId": "gameCenterLeaderboardSets_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboards": {
      "post": {
        "tags": [
          "GameCenterLeaderboards"
        ],
        "operationId": "gameCenterLeaderboards_createInstance",
        "requestBody": {
          "description": "GameCenterLeaderboard representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterLeaderboard",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterLeaderboards/{id}": {
      "get": {
        "tags": [
          "GameCenterLeaderboards"
        ],
        "operationId": "gameCenterLeaderboards_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboardLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "formatterOverride",
                  "formatterSuffix",
                  "formatterSuffixSingular",
                  "gameCenterLeaderboard",
                  "gameCenterLeaderboardImage"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterLeaderboardReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboardSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[releases]",
            "in": "query",
            "description": "maximum number of related releases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboard",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterLeaderboards"
        ],
        "operationId": "gameCenterLeaderboards_updateInstance",
        "requestBody": {
          "description": "GameCenterLeaderboard representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboard",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterLeaderboards"
        ],
        "operationId": "gameCenterLeaderboards_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterMatchmakingQueues": {
      "get": {
        "tags": [
          "GameCenterMatchmakingQueues"
        ],
        "operationId": "gameCenterMatchmakingQueues_getCollection",
        "parameters": [
          {
            "name": "fields[gameCenterMatchmakingQueues]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterMatchmakingQueues",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "classicMatchmakingBundleIds",
                  "ruleSet",
                  "experimentRuleSet"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ruleSet",
                  "experimentRuleSet"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterMatchmakingQueues",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingQueuesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "GameCenterMatchmakingQueues"
        ],
        "operationId": "gameCenterMatchmakingQueues_createInstance",
        "requestBody": {
          "description": "GameCenterMatchmakingQueue representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterMatchmakingQueueCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterMatchmakingQueue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingQueueResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterMatchmakingQueues/{id}": {
      "get": {
        "tags": [
          "GameCenterMatchmakingQueues"
        ],
        "operationId": "gameCenterMatchmakingQueues_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterMatchmakingQueues]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterMatchmakingQueues",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "classicMatchmakingBundleIds",
                  "ruleSet",
                  "experimentRuleSet"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ruleSet",
                  "experimentRuleSet"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterMatchmakingQueue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingQueueResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterMatchmakingQueues"
        ],
        "operationId": "gameCenterMatchmakingQueues_updateInstance",
        "requestBody": {
          "description": "GameCenterMatchmakingQueue representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterMatchmakingQueueUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterMatchmakingQueue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingQueueResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterMatchmakingQueues"
        ],
        "operationId": "gameCenterMatchmakingQueues_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterMatchmakingRuleSetTests": {
      "post": {
        "tags": [
          "GameCenterMatchmakingRuleSetTests"
        ],
        "operationId": "gameCenterMatchmakingRuleSetTests_createInstance",
        "requestBody": {
          "description": "GameCenterMatchmakingRuleSetTest representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterMatchmakingRuleSetTestCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterMatchmakingRuleSetTest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingRuleSetTestResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterMatchmakingRuleSets": {
      "get": {
        "tags": [
          "GameCenterMatchmakingRuleSets"
        ],
        "operationId": "gameCenterMatchmakingRuleSets_getCollection",
        "parameters": [
          {
            "name": "fields[gameCenterMatchmakingRuleSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterMatchmakingRuleSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "ruleLanguageVersion",
                  "minPlayers",
                  "maxPlayers",
                  "teams",
                  "rules",
                  "matchmakingQueues"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterMatchmakingTeams]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterMatchmakingTeams",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "minPlayers",
                  "maxPlayers"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterMatchmakingRules]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterMatchmakingRules",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "description",
                  "type",
                  "expression",
                  "weight"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterMatchmakingQueues]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterMatchmakingQueues",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "classicMatchmakingBundleIds",
                  "ruleSet",
                  "experimentRuleSet"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "teams",
                  "rules",
                  "matchmakingQueues"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[matchmakingQueues]",
            "in": "query",
            "description": "maximum number of related matchmakingQueues returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[rules]",
            "in": "query",
            "description": "maximum number of related rules returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[teams]",
            "in": "query",
            "description": "maximum number of related teams returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterMatchmakingRuleSets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingRuleSetsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "GameCenterMatchmakingRuleSets"
        ],
        "operationId": "gameCenterMatchmakingRuleSets_createInstance",
        "requestBody": {
          "description": "GameCenterMatchmakingRuleSet representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterMatchmakingRuleSetCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterMatchmakingRuleSet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingRuleSetResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterMatchmakingRuleSets/{id}": {
      "get": {
        "tags": [
          "GameCenterMatchmakingRuleSets"
        ],
        "operationId": "gameCenterMatchmakingRuleSets_getInstance",
        "parameters": [
          {
            "name": "fields[gameCenterMatchmakingRuleSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterMatchmakingRuleSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "ruleLanguageVersion",
                  "minPlayers",
                  "maxPlayers",
                  "teams",
                  "rules",
                  "matchmakingQueues"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterMatchmakingTeams]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterMatchmakingTeams",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "minPlayers",
                  "maxPlayers"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterMatchmakingRules]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterMatchmakingRules",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "description",
                  "type",
                  "expression",
                  "weight"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[gameCenterMatchmakingQueues]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterMatchmakingQueues",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "classicMatchmakingBundleIds",
                  "ruleSet",
                  "experimentRuleSet"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "teams",
                  "rules",
                  "matchmakingQueues"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[matchmakingQueues]",
            "in": "query",
            "description": "maximum number of related matchmakingQueues returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[rules]",
            "in": "query",
            "description": "maximum number of related rules returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[teams]",
            "in": "query",
            "description": "maximum number of related teams returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterMatchmakingRuleSet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingRuleSetResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterMatchmakingRuleSets"
        ],
        "operationId": "gameCenterMatchmakingRuleSets_updateInstance",
        "requestBody": {
          "description": "GameCenterMatchmakingRuleSet representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterMatchmakingRuleSetUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterMatchmakingRuleSet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingRuleSetResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterMatchmakingRuleSets"
        ],
        "operationId": "gameCenterMatchmakingRuleSets_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterMatchmakingRules": {
      "post": {
        "tags": [
          "GameCenterMatchmakingRules"
        ],
        "operationId": "gameCenterMatchmakingRules_createInstance",
        "requestBody": {
          "description": "GameCenterMatchmakingRule representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterMatchmakingRuleCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterMatchmakingRule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingRuleResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterMatchmakingRules/{id}": {
      "patch": {
        "tags": [
          "GameCenterMatchmakingRules"
        ],
        "operationId": "gameCenterMatchmakingRules_updateInstance",
        "requestBody": {
          "description": "GameCenterMatchmakingRule representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterMatchmakingRuleUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterMatchmakingRule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingRuleResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterMatchmakingRules"
        ],
        "operationId": "gameCenterMatchmakingRules_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterMatchmakingTeams": {
      "post": {
        "tags": [
          "GameCenterMatchmakingTeams"
        ],
        "operationId": "gameCenterMatchmakingTeams_createInstance",
        "requestBody": {
          "description": "GameCenterMatchmakingTeam representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterMatchmakingTeamCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterMatchmakingTeam",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingTeamResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gameCenterMatchmakingTeams/{id}": {
      "patch": {
        "tags": [
          "GameCenterMatchmakingTeams"
        ],
        "operationId": "gameCenterMatchmakingTeams_updateInstance",
        "requestBody": {
          "description": "GameCenterMatchmakingTeam representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterMatchmakingTeamUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterMatchmakingTeam",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingTeamResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterMatchmakingTeams"
        ],
        "operationId": "gameCenterMatchmakingTeams_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterPlayerAchievementSubmissions": {
      "post": {
        "tags": [
          "GameCenterPlayerAchievementSubmissions"
        ],
        "operationId": "gameCenterPlayerAchievementSubmissions_createInstance",
        "requestBody": {
          "description": "GameCenterPlayerAchievementSubmission representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterPlayerAchievementSubmissionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single GameCenterPlayerAchievementSubmission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterPlayerAchievementSubmissionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/inAppPurchaseAppStoreReviewScreenshots": {
      "post": {
        "tags": [
          "InAppPurchaseAppStoreReviewScreenshots"
        ],
        "operationId": "inAppPurchaseAppStoreReviewScreenshots_createInstance",
        "requestBody": {
          "description": "InAppPurchaseAppStoreReviewScreenshot representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InAppPurchaseAppStoreReviewScreenshotCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single InAppPurchaseAppStoreReviewScreenshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseAppStoreReviewScreenshotResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/inAppPurchaseAppStoreReviewScreenshots/{id}": {
      "get": {
        "tags": [
          "InAppPurchaseAppStoreReviewScreenshots"
        ],
        "operationId": "inAppPurchaseAppStoreReviewScreenshots_getInstance",
        "parameters": [
          {
            "name": "fields[inAppPurchaseAppStoreReviewScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseAppStoreReviewScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "assetToken",
                  "assetType",
                  "uploadOperations",
                  "assetDeliveryState",
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single InAppPurchaseAppStoreReviewScreenshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseAppStoreReviewScreenshotResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "InAppPurchaseAppStoreReviewScreenshots"
        ],
        "operationId": "inAppPurchaseAppStoreReviewScreenshots_updateInstance",
        "requestBody": {
          "description": "InAppPurchaseAppStoreReviewScreenshot representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InAppPurchaseAppStoreReviewScreenshotUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single InAppPurchaseAppStoreReviewScreenshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseAppStoreReviewScreenshotResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InAppPurchaseAppStoreReviewScreenshots"
        ],
        "operationId": "inAppPurchaseAppStoreReviewScreenshots_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/inAppPurchaseAvailabilities": {
      "post": {
        "tags": [
          "InAppPurchaseAvailabilities"
        ],
        "operationId": "inAppPurchaseAvailabilities_createInstance",
        "requestBody": {
          "description": "InAppPurchaseAvailability representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InAppPurchaseAvailabilityCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single InAppPurchaseAvailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseAvailabilityResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/inAppPurchaseAvailabilities/{id}": {
      "get": {
        "tags": [
          "InAppPurchaseAvailabilities"
        ],
        "operationId": "inAppPurchaseAvailabilities_getInstance",
        "parameters": [
          {
            "name": "fields[inAppPurchaseAvailabilities]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseAvailabilities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "availableInNewTerritories",
                  "availableTerritories"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "availableTerritories"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[availableTerritories]",
            "in": "query",
            "description": "maximum number of related availableTerritories returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single InAppPurchaseAvailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseAvailabilityResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/inAppPurchaseContents/{id}": {
      "get": {
        "tags": [
          "InAppPurchaseContents"
        ],
        "operationId": "inAppPurchaseContents_getInstance",
        "parameters": [
          {
            "name": "fields[inAppPurchaseContents]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseContents",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileName",
                  "fileSize",
                  "url",
                  "lastModifiedDate",
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single InAppPurchaseContent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseContentResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/inAppPurchaseImages": {
      "post": {
        "tags": [
          "InAppPurchaseImages"
        ],
        "operationId": "inAppPurchaseImages_createInstance",
        "requestBody": {
          "description": "InAppPurchaseImage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InAppPurchaseImageCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single InAppPurchaseImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseImageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/inAppPurchaseImages/{id}": {
      "get": {
        "tags": [
          "InAppPurchaseImages"
        ],
        "operationId": "inAppPurchaseImages_getInstance",
        "parameters": [
          {
            "name": "fields[inAppPurchaseImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "assetToken",
                  "imageAsset",
                  "uploadOperations",
                  "state",
                  "inAppPurchase"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inAppPurchase"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single InAppPurchaseImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseImageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "InAppPurchaseImages"
        ],
        "operationId": "inAppPurchaseImages_updateInstance",
        "requestBody": {
          "description": "InAppPurchaseImage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InAppPurchaseImageUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single InAppPurchaseImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseImageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InAppPurchaseImages"
        ],
        "operationId": "inAppPurchaseImages_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/inAppPurchaseLocalizations": {
      "post": {
        "tags": [
          "InAppPurchaseLocalizations"
        ],
        "operationId": "inAppPurchaseLocalizations_createInstance",
        "requestBody": {
          "description": "InAppPurchaseLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InAppPurchaseLocalizationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single InAppPurchaseLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/inAppPurchaseLocalizations/{id}": {
      "get": {
        "tags": [
          "InAppPurchaseLocalizations"
        ],
        "operationId": "inAppPurchaseLocalizations_getInstance",
        "parameters": [
          {
            "name": "fields[inAppPurchaseLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "locale",
                  "description",
                  "state",
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single InAppPurchaseLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "InAppPurchaseLocalizations"
        ],
        "operationId": "inAppPurchaseLocalizations_updateInstance",
        "requestBody": {
          "description": "InAppPurchaseLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InAppPurchaseLocalizationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single InAppPurchaseLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InAppPurchaseLocalizations"
        ],
        "operationId": "inAppPurchaseLocalizations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/inAppPurchasePriceSchedules": {
      "post": {
        "tags": [
          "InAppPurchasePriceSchedules"
        ],
        "operationId": "inAppPurchasePriceSchedules_createInstance",
        "requestBody": {
          "description": "InAppPurchasePriceSchedule representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InAppPurchasePriceScheduleCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single InAppPurchasePriceSchedule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchasePriceScheduleResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/inAppPurchasePriceSchedules/{id}": {
      "get": {
        "tags": [
          "InAppPurchasePriceSchedules"
        ],
        "operationId": "inAppPurchasePriceSchedules_getInstance",
        "parameters": [
          {
            "name": "fields[inAppPurchasePriceSchedules]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchasePriceSchedules",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "baseTerritory",
                  "manualPrices",
                  "automaticPrices"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[inAppPurchasePrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchasePrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "startDate",
                  "endDate",
                  "manual",
                  "inAppPurchasePricePoint",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "baseTerritory",
                  "manualPrices",
                  "automaticPrices"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[automaticPrices]",
            "in": "query",
            "description": "maximum number of related automaticPrices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[manualPrices]",
            "in": "query",
            "description": "maximum number of related manualPrices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single InAppPurchasePriceSchedule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchasePriceScheduleResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/inAppPurchaseSubmissions": {
      "post": {
        "tags": [
          "InAppPurchaseSubmissions"
        ],
        "operationId": "inAppPurchaseSubmissions_createInstance",
        "requestBody": {
          "description": "InAppPurchaseSubmission representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InAppPurchaseSubmissionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single InAppPurchaseSubmission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseSubmissionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/inAppPurchases/{id}": {
      "get": {
        "tags": [
          "InAppPurchases"
        ],
        "operationId": "inAppPurchases_getInstance",
        "deprecated": true,
        "parameters": [
          {
            "name": "fields[inAppPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "productId",
                  "inAppPurchaseType",
                  "state",
                  "apps"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "apps"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[apps]",
            "in": "query",
            "description": "maximum number of related apps returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single InAppPurchase",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v2/inAppPurchases": {
      "post": {
        "tags": [
          "InAppPurchases"
        ],
        "operationId": "inAppPurchasesV2_createInstance",
        "requestBody": {
          "description": "InAppPurchase representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InAppPurchaseV2CreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single InAppPurchase",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseV2Response"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/inAppPurchases/{id}": {
      "get": {
        "tags": [
          "InAppPurchases"
        ],
        "operationId": "inAppPurchasesV2_getInstance",
        "parameters": [
          {
            "name": "fields[inAppPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "inAppPurchaseType",
                  "state",
                  "reviewNote",
                  "familySharable",
                  "contentHosting",
                  "inAppPurchaseLocalizations",
                  "pricePoints",
                  "content",
                  "appStoreReviewScreenshot",
                  "promotedPurchase",
                  "iapPriceSchedule",
                  "inAppPurchaseAvailability",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[inAppPurchaseLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "locale",
                  "description",
                  "state",
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[inAppPurchasePricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchasePricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "territory",
                  "equalizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[inAppPurchaseContents]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseContents",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileName",
                  "fileSize",
                  "url",
                  "lastModifiedDate",
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[inAppPurchaseAppStoreReviewScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseAppStoreReviewScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "assetToken",
                  "assetType",
                  "uploadOperations",
                  "assetDeliveryState",
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[promotedPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "visibleForAllUsers",
                  "enabled",
                  "state",
                  "inAppPurchaseV2",
                  "subscription",
                  "promotionImages"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[inAppPurchasePriceSchedules]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchasePriceSchedules",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "baseTerritory",
                  "manualPrices",
                  "automaticPrices"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[inAppPurchaseAvailabilities]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseAvailabilities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "availableInNewTerritories",
                  "availableTerritories"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[inAppPurchaseImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "assetToken",
                  "imageAsset",
                  "uploadOperations",
                  "state",
                  "inAppPurchase"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inAppPurchaseLocalizations",
                  "pricePoints",
                  "content",
                  "appStoreReviewScreenshot",
                  "promotedPurchase",
                  "iapPriceSchedule",
                  "inAppPurchaseAvailability",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[images]",
            "in": "query",
            "description": "maximum number of related images returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[inAppPurchaseLocalizations]",
            "in": "query",
            "description": "maximum number of related inAppPurchaseLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[pricePoints]",
            "in": "query",
            "description": "maximum number of related pricePoints returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 8000
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single InAppPurchase",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseV2Response"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "InAppPurchases"
        ],
        "operationId": "inAppPurchasesV2_updateInstance",
        "requestBody": {
          "description": "InAppPurchase representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InAppPurchaseV2UpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single InAppPurchase",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseV2Response"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InAppPurchases"
        ],
        "operationId": "inAppPurchasesV2_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/marketplaceDomains": {
      "get": {
        "tags": [
          "MarketplaceDomains"
        ],
        "operationId": "marketplaceDomains_getCollection",
        "deprecated": true,
        "parameters": [
          {
            "name": "fields[marketplaceDomains]",
            "in": "query",
            "description": "the fields to include for returned resources of type marketplaceDomains",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "domain",
                  "referenceName",
                  "createdDate"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of MarketplaceDomains",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceDomainsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MarketplaceDomains"
        ],
        "operationId": "marketplaceDomains_createInstance",
        "deprecated": true,
        "requestBody": {
          "description": "MarketplaceDomain representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarketplaceDomainCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single MarketplaceDomain",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceDomainResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/marketplaceDomains/{id}": {
      "get": {
        "tags": [
          "MarketplaceDomains"
        ],
        "operationId": "marketplaceDomains_getInstance",
        "deprecated": true,
        "parameters": [
          {
            "name": "fields[marketplaceDomains]",
            "in": "query",
            "description": "the fields to include for returned resources of type marketplaceDomains",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "domain",
                  "referenceName",
                  "createdDate"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single MarketplaceDomain",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceDomainResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MarketplaceDomains"
        ],
        "operationId": "marketplaceDomains_deleteInstance",
        "deprecated": true,
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/marketplaceSearchDetails": {
      "post": {
        "tags": [
          "MarketplaceSearchDetails"
        ],
        "operationId": "marketplaceSearchDetails_createInstance",
        "requestBody": {
          "description": "MarketplaceSearchDetail representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarketplaceSearchDetailCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single MarketplaceSearchDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceSearchDetailResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/marketplaceSearchDetails/{id}": {
      "patch": {
        "tags": [
          "MarketplaceSearchDetails"
        ],
        "operationId": "marketplaceSearchDetails_updateInstance",
        "requestBody": {
          "description": "MarketplaceSearchDetail representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarketplaceSearchDetailUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single MarketplaceSearchDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceSearchDetailResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MarketplaceSearchDetails"
        ],
        "operationId": "marketplaceSearchDetails_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/marketplaceWebhooks": {
      "get": {
        "tags": [
          "MarketplaceWebhooks"
        ],
        "operationId": "marketplaceWebhooks_getCollection",
        "parameters": [
          {
            "name": "fields[marketplaceWebhooks]",
            "in": "query",
            "description": "the fields to include for returned resources of type marketplaceWebhooks",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "endpointUrl"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of MarketplaceWebhooks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceWebhooksResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MarketplaceWebhooks"
        ],
        "operationId": "marketplaceWebhooks_createInstance",
        "requestBody": {
          "description": "MarketplaceWebhook representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarketplaceWebhookCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single MarketplaceWebhook",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceWebhookResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/marketplaceWebhooks/{id}": {
      "patch": {
        "tags": [
          "MarketplaceWebhooks"
        ],
        "operationId": "marketplaceWebhooks_updateInstance",
        "requestBody": {
          "description": "MarketplaceWebhook representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarketplaceWebhookUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single MarketplaceWebhook",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceWebhookResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MarketplaceWebhooks"
        ],
        "operationId": "marketplaceWebhooks_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/preReleaseVersions": {
      "get": {
        "tags": [
          "PreReleaseVersions"
        ],
        "operationId": "preReleaseVersions_getCollection",
        "parameters": [
          {
            "name": "filter[builds.expired]",
            "in": "query",
            "description": "filter by attribute 'builds.expired'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[builds.processingState]",
            "in": "query",
            "description": "filter by attribute 'builds.processingState'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PROCESSING",
                  "FAILED",
                  "INVALID",
                  "VALID"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[builds.version]",
            "in": "query",
            "description": "filter by attribute 'builds.version'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[platform]",
            "in": "query",
            "description": "filter by attribute 'platform'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS",
                  "MAC_OS",
                  "TV_OS",
                  "VISION_OS"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[version]",
            "in": "query",
            "description": "filter by attribute 'version'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[app]",
            "in": "query",
            "description": "filter by id(s) of related 'app'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[builds]",
            "in": "query",
            "description": "filter by id(s) of related 'builds'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "-version"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[preReleaseVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type preReleaseVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "platform",
                  "builds",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "builds",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[builds]",
            "in": "query",
            "description": "maximum number of related builds returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of PreReleaseVersions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreReleaseVersionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/preReleaseVersions/{id}": {
      "get": {
        "tags": [
          "PreReleaseVersions"
        ],
        "operationId": "preReleaseVersions_getInstance",
        "parameters": [
          {
            "name": "fields[preReleaseVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type preReleaseVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "platform",
                  "builds",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "builds",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[builds]",
            "in": "query",
            "description": "maximum number of related builds returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single PrereleaseVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrereleaseVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/profiles": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "operationId": "profiles_getCollection",
        "parameters": [
          {
            "name": "filter[name]",
            "in": "query",
            "description": "filter by attribute 'name'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[profileType]",
            "in": "query",
            "description": "filter by attribute 'profileType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS_APP_DEVELOPMENT",
                  "IOS_APP_STORE",
                  "IOS_APP_ADHOC",
                  "IOS_APP_INHOUSE",
                  "MAC_APP_DEVELOPMENT",
                  "MAC_APP_STORE",
                  "MAC_APP_DIRECT",
                  "TVOS_APP_DEVELOPMENT",
                  "TVOS_APP_STORE",
                  "TVOS_APP_ADHOC",
                  "TVOS_APP_INHOUSE",
                  "MAC_CATALYST_APP_DEVELOPMENT",
                  "MAC_CATALYST_APP_STORE",
                  "MAC_CATALYST_APP_DIRECT"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[profileState]",
            "in": "query",
            "description": "filter by attribute 'profileState'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "INVALID"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "-name",
                  "profileType",
                  "-profileType",
                  "profileState",
                  "-profileState",
                  "id",
                  "-id"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[profiles]",
            "in": "query",
            "description": "the fields to include for returned resources of type profiles",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "profileType",
                  "profileState",
                  "profileContent",
                  "uuid",
                  "createdDate",
                  "expirationDate",
                  "bundleId",
                  "devices",
                  "certificates"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[bundleIds]",
            "in": "query",
            "description": "the fields to include for returned resources of type bundleIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "identifier",
                  "seedId",
                  "profiles",
                  "bundleIdCapabilities",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[devices]",
            "in": "query",
            "description": "the fields to include for returned resources of type devices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "udid",
                  "deviceClass",
                  "status",
                  "model",
                  "addedDate"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[certificates]",
            "in": "query",
            "description": "the fields to include for returned resources of type certificates",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "certificateType",
                  "displayName",
                  "serialNumber",
                  "platform",
                  "expirationDate",
                  "certificateContent"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bundleId",
                  "devices",
                  "certificates"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[certificates]",
            "in": "query",
            "description": "maximum number of related certificates returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[devices]",
            "in": "query",
            "description": "maximum number of related devices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Profiles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Profiles"
        ],
        "operationId": "profiles_createInstance",
        "requestBody": {
          "description": "Profile representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single Profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profiles/{id}": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "operationId": "profiles_getInstance",
        "parameters": [
          {
            "name": "fields[profiles]",
            "in": "query",
            "description": "the fields to include for returned resources of type profiles",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "profileType",
                  "profileState",
                  "profileContent",
                  "uuid",
                  "createdDate",
                  "expirationDate",
                  "bundleId",
                  "devices",
                  "certificates"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[bundleIds]",
            "in": "query",
            "description": "the fields to include for returned resources of type bundleIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "identifier",
                  "seedId",
                  "profiles",
                  "bundleIdCapabilities",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[devices]",
            "in": "query",
            "description": "the fields to include for returned resources of type devices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "udid",
                  "deviceClass",
                  "status",
                  "model",
                  "addedDate"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[certificates]",
            "in": "query",
            "description": "the fields to include for returned resources of type certificates",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "certificateType",
                  "displayName",
                  "serialNumber",
                  "platform",
                  "expirationDate",
                  "certificateContent"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bundleId",
                  "devices",
                  "certificates"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[certificates]",
            "in": "query",
            "description": "maximum number of related certificates returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[devices]",
            "in": "query",
            "description": "maximum number of related devices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single Profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Profiles"
        ],
        "operationId": "profiles_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/promotedPurchaseImages": {
      "post": {
        "tags": [
          "PromotedPurchaseImages"
        ],
        "operationId": "promotedPurchaseImages_createInstance",
        "deprecated": true,
        "requestBody": {
          "description": "PromotedPurchaseImage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedPurchaseImageCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single PromotedPurchaseImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotedPurchaseImageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/promotedPurchaseImages/{id}": {
      "get": {
        "tags": [
          "PromotedPurchaseImages"
        ],
        "operationId": "promotedPurchaseImages_getInstance",
        "deprecated": true,
        "parameters": [
          {
            "name": "fields[promotedPurchaseImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchaseImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "assetToken",
                  "imageAsset",
                  "assetType",
                  "uploadOperations",
                  "state",
                  "promotedPurchase"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "promotedPurchase"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single PromotedPurchaseImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotedPurchaseImageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "PromotedPurchaseImages"
        ],
        "operationId": "promotedPurchaseImages_updateInstance",
        "deprecated": true,
        "requestBody": {
          "description": "PromotedPurchaseImage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedPurchaseImageUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single PromotedPurchaseImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotedPurchaseImageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PromotedPurchaseImages"
        ],
        "operationId": "promotedPurchaseImages_deleteInstance",
        "deprecated": true,
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/promotedPurchases": {
      "post": {
        "tags": [
          "PromotedPurchases"
        ],
        "operationId": "promotedPurchases_createInstance",
        "requestBody": {
          "description": "PromotedPurchase representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedPurchaseCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single PromotedPurchase",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotedPurchaseResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/promotedPurchases/{id}": {
      "get": {
        "tags": [
          "PromotedPurchases"
        ],
        "operationId": "promotedPurchases_getInstance",
        "parameters": [
          {
            "name": "fields[promotedPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "visibleForAllUsers",
                  "enabled",
                  "state",
                  "inAppPurchaseV2",
                  "subscription",
                  "promotionImages"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[promotedPurchaseImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchaseImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "assetToken",
                  "imageAsset",
                  "assetType",
                  "uploadOperations",
                  "state",
                  "promotedPurchase"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "deprecated": true
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inAppPurchaseV2",
                  "subscription",
                  "promotionImages"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[promotionImages]",
            "in": "query",
            "description": "maximum number of related promotionImages returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false,
            "deprecated": true
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single PromotedPurchase",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotedPurchaseResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "PromotedPurchases"
        ],
        "operationId": "promotedPurchases_updateInstance",
        "requestBody": {
          "description": "PromotedPurchase representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedPurchaseUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single PromotedPurchase",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotedPurchaseResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PromotedPurchases"
        ],
        "operationId": "promotedPurchases_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/reviewSubmissionItems": {
      "post": {
        "tags": [
          "ReviewSubmissionItems"
        ],
        "operationId": "reviewSubmissionItems_createInstance",
        "requestBody": {
          "description": "ReviewSubmissionItem representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewSubmissionItemCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single ReviewSubmissionItem",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewSubmissionItemResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reviewSubmissionItems/{id}": {
      "patch": {
        "tags": [
          "ReviewSubmissionItems"
        ],
        "operationId": "reviewSubmissionItems_updateInstance",
        "requestBody": {
          "description": "ReviewSubmissionItem representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewSubmissionItemUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single ReviewSubmissionItem",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewSubmissionItemResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReviewSubmissionItems"
        ],
        "operationId": "reviewSubmissionItems_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/reviewSubmissions": {
      "get": {
        "tags": [
          "ReviewSubmissions"
        ],
        "operationId": "reviewSubmissions_getCollection",
        "parameters": [
          {
            "name": "filter[platform]",
            "in": "query",
            "description": "filter by attribute 'platform'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS",
                  "MAC_OS",
                  "TV_OS",
                  "VISION_OS"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[state]",
            "in": "query",
            "description": "filter by attribute 'state'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "READY_FOR_REVIEW",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "UNRESOLVED_ISSUES",
                  "CANCELING",
                  "COMPLETING",
                  "COMPLETE"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[app]",
            "in": "query",
            "description": "filter by id(s) of related 'app'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": true
          },
          {
            "name": "fields[reviewSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type reviewSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "submittedDate",
                  "state",
                  "app",
                  "items",
                  "appStoreVersionForReview",
                  "submittedByActor",
                  "lastUpdatedByActor"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[reviewSubmissionItems]",
            "in": "query",
            "description": "the fields to include for returned resources of type reviewSubmissionItems",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "state",
                  "appStoreVersion",
                  "appCustomProductPageVersion",
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appEvent"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "items",
                  "appStoreVersionForReview",
                  "submittedByActor",
                  "lastUpdatedByActor"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[items]",
            "in": "query",
            "description": "maximum number of related items returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of ReviewSubmissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewSubmissionsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReviewSubmissions"
        ],
        "operationId": "reviewSubmissions_createInstance",
        "requestBody": {
          "description": "ReviewSubmission representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewSubmissionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single ReviewSubmission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewSubmissionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reviewSubmissions/{id}": {
      "get": {
        "tags": [
          "ReviewSubmissions"
        ],
        "operationId": "reviewSubmissions_getInstance",
        "parameters": [
          {
            "name": "fields[reviewSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type reviewSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "submittedDate",
                  "state",
                  "app",
                  "items",
                  "appStoreVersionForReview",
                  "submittedByActor",
                  "lastUpdatedByActor"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[reviewSubmissionItems]",
            "in": "query",
            "description": "the fields to include for returned resources of type reviewSubmissionItems",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "state",
                  "appStoreVersion",
                  "appCustomProductPageVersion",
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appEvent"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "items",
                  "appStoreVersionForReview",
                  "submittedByActor",
                  "lastUpdatedByActor"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[items]",
            "in": "query",
            "description": "maximum number of related items returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single ReviewSubmission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewSubmissionResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ReviewSubmissions"
        ],
        "operationId": "reviewSubmissions_updateInstance",
        "requestBody": {
          "description": "ReviewSubmission representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewSubmissionUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single ReviewSubmission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewSubmissionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/routingAppCoverages": {
      "post": {
        "tags": [
          "RoutingAppCoverages"
        ],
        "operationId": "routingAppCoverages_createInstance",
        "requestBody": {
          "description": "RoutingAppCoverage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoutingAppCoverageCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single RoutingAppCoverage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingAppCoverageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/routingAppCoverages/{id}": {
      "get": {
        "tags": [
          "RoutingAppCoverages"
        ],
        "operationId": "routingAppCoverages_getInstance",
        "parameters": [
          {
            "name": "fields[routingAppCoverages]",
            "in": "query",
            "description": "the fields to include for returned resources of type routingAppCoverages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single RoutingAppCoverage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingAppCoverageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RoutingAppCoverages"
        ],
        "operationId": "routingAppCoverages_updateInstance",
        "requestBody": {
          "description": "RoutingAppCoverage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoutingAppCoverageUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single RoutingAppCoverage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingAppCoverageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RoutingAppCoverages"
        ],
        "operationId": "routingAppCoverages_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/salesReports": {
      "get": {
        "tags": [
          "SalesReports"
        ],
        "operationId": "salesReports_getCollection",
        "parameters": [
          {
            "name": "filter[vendorNumber]",
            "in": "query",
            "description": "filter by attribute 'vendorNumber'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": true
          },
          {
            "name": "filter[reportType]",
            "in": "query",
            "description": "filter by attribute 'reportType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "SALES",
                  "PRE_ORDER",
                  "NEWSSTAND",
                  "SUBSCRIPTION",
                  "SUBSCRIPTION_EVENT",
                  "SUBSCRIBER",
                  "SUBSCRIPTION_OFFER_CODE_REDEMPTION",
                  "INSTALLS",
                  "FIRST_ANNUAL",
                  "WIN_BACK_ELIGIBILITY"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": true
          },
          {
            "name": "filter[reportSubType]",
            "in": "query",
            "description": "filter by attribute 'reportSubType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "SUMMARY",
                  "DETAILED",
                  "SUMMARY_INSTALL_TYPE",
                  "SUMMARY_TERRITORY",
                  "SUMMARY_CHANNEL"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": true
          },
          {
            "name": "filter[frequency]",
            "in": "query",
            "description": "filter by attribute 'frequency'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DAILY",
                  "WEEKLY",
                  "MONTHLY",
                  "YEARLY"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": true
          },
          {
            "name": "filter[reportDate]",
            "in": "query",
            "description": "filter by attribute 'reportDate'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[version]",
            "in": "query",
            "description": "filter by attribute 'version'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of SalesReports",
            "content": {
              "application/a-gzip": {
                "schema": {
                  "$ref": "#/components/schemas/gzip"
                }
              }
            }
          }
        }
      }
    },
    "/v2/sandboxTesters": {
      "get": {
        "tags": [
          "SandboxTesters"
        ],
        "operationId": "sandboxTestersV2_getCollection",
        "parameters": [
          {
            "name": "fields[sandboxTesters]",
            "in": "query",
            "description": "the fields to include for returned resources of type sandboxTesters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "firstName",
                  "lastName",
                  "acAccountName",
                  "territory",
                  "applePayCompatible",
                  "interruptPurchases",
                  "subscriptionRenewalRate"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of SandboxTesters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SandboxTestersV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/v2/sandboxTesters/{id}": {
      "patch": {
        "tags": [
          "SandboxTesters"
        ],
        "operationId": "sandboxTestersV2_updateInstance",
        "requestBody": {
          "description": "SandboxTester representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SandboxTesterV2UpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SandboxTester",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SandboxTesterV2Response"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v2/sandboxTestersClearPurchaseHistoryRequest": {
      "post": {
        "tags": [
          "SandboxTestersClearPurchaseHistoryRequest"
        ],
        "operationId": "sandboxTestersClearPurchaseHistoryRequestV2_createInstance",
        "requestBody": {
          "description": "SandboxTestersClearPurchaseHistoryRequest representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SandboxTestersClearPurchaseHistoryRequestV2CreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single SandboxTestersClearPurchaseHistoryRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SandboxTestersClearPurchaseHistoryRequestV2Response"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/scmGitReferences/{id}": {
      "get": {
        "tags": [
          "ScmGitReferences"
        ],
        "operationId": "scmGitReferences_getInstance",
        "parameters": [
          {
            "name": "fields[scmGitReferences]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmGitReferences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "canonicalName",
                  "isDeleted",
                  "kind",
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single ScmGitReference",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScmGitReferenceResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/scmProviders": {
      "get": {
        "tags": [
          "ScmProviders"
        ],
        "operationId": "scmProviders_getCollection",
        "parameters": [
          {
            "name": "fields[scmProviders]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmProviders",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "scmProviderType",
                  "url",
                  "repositories"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of ScmProviders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScmProvidersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/scmProviders/{id}": {
      "get": {
        "tags": [
          "ScmProviders"
        ],
        "operationId": "scmProviders_getInstance",
        "parameters": [
          {
            "name": "fields[scmProviders]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmProviders",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "scmProviderType",
                  "url",
                  "repositories"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single ScmProvider",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScmProviderResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/scmPullRequests/{id}": {
      "get": {
        "tags": [
          "ScmPullRequests"
        ],
        "operationId": "scmPullRequests_getInstance",
        "parameters": [
          {
            "name": "fields[scmPullRequests]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmPullRequests",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "number",
                  "webUrl",
                  "sourceRepositoryOwner",
                  "sourceRepositoryName",
                  "sourceBranchName",
                  "destinationRepositoryOwner",
                  "destinationRepositoryName",
                  "destinationBranchName",
                  "isClosed",
                  "isCrossRepository",
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single ScmPullRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScmPullRequestResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/scmRepositories": {
      "get": {
        "tags": [
          "ScmRepositories"
        ],
        "operationId": "scmRepositories_getCollection",
        "parameters": [
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[scmRepositories]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmRepositories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lastAccessedDate",
                  "httpCloneUrl",
                  "sshCloneUrl",
                  "ownerName",
                  "repositoryName",
                  "scmProvider",
                  "defaultBranch",
                  "gitReferences",
                  "pullRequests"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "scmProvider",
                  "defaultBranch"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of ScmRepositories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScmRepositoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/scmRepositories/{id}": {
      "get": {
        "tags": [
          "ScmRepositories"
        ],
        "operationId": "scmRepositories_getInstance",
        "parameters": [
          {
            "name": "fields[scmRepositories]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmRepositories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lastAccessedDate",
                  "httpCloneUrl",
                  "sshCloneUrl",
                  "ownerName",
                  "repositoryName",
                  "scmProvider",
                  "defaultBranch",
                  "gitReferences",
                  "pullRequests"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "scmProvider",
                  "defaultBranch"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single ScmRepository",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScmRepositoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionAppStoreReviewScreenshots": {
      "post": {
        "tags": [
          "SubscriptionAppStoreReviewScreenshots"
        ],
        "operationId": "subscriptionAppStoreReviewScreenshots_createInstance",
        "requestBody": {
          "description": "SubscriptionAppStoreReviewScreenshot representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionAppStoreReviewScreenshotCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single SubscriptionAppStoreReviewScreenshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionAppStoreReviewScreenshotResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionAppStoreReviewScreenshots/{id}": {
      "get": {
        "tags": [
          "SubscriptionAppStoreReviewScreenshots"
        ],
        "operationId": "subscriptionAppStoreReviewScreenshots_getInstance",
        "parameters": [
          {
            "name": "fields[subscriptionAppStoreReviewScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionAppStoreReviewScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "assetToken",
                  "assetType",
                  "uploadOperations",
                  "assetDeliveryState",
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionAppStoreReviewScreenshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionAppStoreReviewScreenshotResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SubscriptionAppStoreReviewScreenshots"
        ],
        "operationId": "subscriptionAppStoreReviewScreenshots_updateInstance",
        "requestBody": {
          "description": "SubscriptionAppStoreReviewScreenshot representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionAppStoreReviewScreenshotUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionAppStoreReviewScreenshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionAppStoreReviewScreenshotResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SubscriptionAppStoreReviewScreenshots"
        ],
        "operationId": "subscriptionAppStoreReviewScreenshots_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionAvailabilities": {
      "post": {
        "tags": [
          "SubscriptionAvailabilities"
        ],
        "operationId": "subscriptionAvailabilities_createInstance",
        "requestBody": {
          "description": "SubscriptionAvailability representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionAvailabilityCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single SubscriptionAvailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionAvailabilityResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionAvailabilities/{id}": {
      "get": {
        "tags": [
          "SubscriptionAvailabilities"
        ],
        "operationId": "subscriptionAvailabilities_getInstance",
        "parameters": [
          {
            "name": "fields[subscriptionAvailabilities]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionAvailabilities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "availableInNewTerritories",
                  "availableTerritories"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "availableTerritories"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[availableTerritories]",
            "in": "query",
            "description": "maximum number of related availableTerritories returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionAvailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionAvailabilityResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionGracePeriods/{id}": {
      "get": {
        "tags": [
          "SubscriptionGracePeriods"
        ],
        "operationId": "subscriptionGracePeriods_getInstance",
        "parameters": [
          {
            "name": "fields[subscriptionGracePeriods]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionGracePeriods",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "optIn",
                  "sandboxOptIn",
                  "duration",
                  "renewalType"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionGracePeriod",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionGracePeriodResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SubscriptionGracePeriods"
        ],
        "operationId": "subscriptionGracePeriods_updateInstance",
        "requestBody": {
          "description": "SubscriptionGracePeriod representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionGracePeriodUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionGracePeriod",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionGracePeriodResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionGroupLocalizations": {
      "post": {
        "tags": [
          "SubscriptionGroupLocalizations"
        ],
        "operationId": "subscriptionGroupLocalizations_createInstance",
        "requestBody": {
          "description": "SubscriptionGroupLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionGroupLocalizationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single SubscriptionGroupLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionGroupLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionGroupLocalizations/{id}": {
      "get": {
        "tags": [
          "SubscriptionGroupLocalizations"
        ],
        "operationId": "subscriptionGroupLocalizations_getInstance",
        "parameters": [
          {
            "name": "fields[subscriptionGroupLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionGroupLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "customAppName",
                  "locale",
                  "state",
                  "subscriptionGroup"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptionGroup"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionGroupLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionGroupLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SubscriptionGroupLocalizations"
        ],
        "operationId": "subscriptionGroupLocalizations_updateInstance",
        "requestBody": {
          "description": "SubscriptionGroupLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionGroupLocalizationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionGroupLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionGroupLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SubscriptionGroupLocalizations"
        ],
        "operationId": "subscriptionGroupLocalizations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionGroupSubmissions": {
      "post": {
        "tags": [
          "SubscriptionGroupSubmissions"
        ],
        "operationId": "subscriptionGroupSubmissions_createInstance",
        "requestBody": {
          "description": "SubscriptionGroupSubmission representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionGroupSubmissionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single SubscriptionGroupSubmission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionGroupSubmissionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionGroups": {
      "post": {
        "tags": [
          "SubscriptionGroups"
        ],
        "operationId": "subscriptionGroups_createInstance",
        "requestBody": {
          "description": "SubscriptionGroup representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionGroupCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single SubscriptionGroup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionGroupResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionGroups/{id}": {
      "get": {
        "tags": [
          "SubscriptionGroups"
        ],
        "operationId": "subscriptionGroups_getInstance",
        "parameters": [
          {
            "name": "fields[subscriptionGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "subscriptions",
                  "subscriptionGroupLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptions]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "familySharable",
                  "state",
                  "subscriptionPeriod",
                  "reviewNote",
                  "groupLevel",
                  "subscriptionLocalizations",
                  "appStoreReviewScreenshot",
                  "group",
                  "introductoryOffers",
                  "promotionalOffers",
                  "offerCodes",
                  "prices",
                  "pricePoints",
                  "promotedPurchase",
                  "subscriptionAvailability",
                  "winBackOffers",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionGroupLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionGroupLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "customAppName",
                  "locale",
                  "state",
                  "subscriptionGroup"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "subscriptionGroupLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[subscriptionGroupLocalizations]",
            "in": "query",
            "description": "maximum number of related subscriptionGroupLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[subscriptions]",
            "in": "query",
            "description": "maximum number of related subscriptions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionGroup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionGroupResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SubscriptionGroups"
        ],
        "operationId": "subscriptionGroups_updateInstance",
        "requestBody": {
          "description": "SubscriptionGroup representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionGroupUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionGroup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionGroupResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SubscriptionGroups"
        ],
        "operationId": "subscriptionGroups_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionImages": {
      "post": {
        "tags": [
          "SubscriptionImages"
        ],
        "operationId": "subscriptionImages_createInstance",
        "requestBody": {
          "description": "SubscriptionImage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionImageCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single SubscriptionImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionImageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionImages/{id}": {
      "get": {
        "tags": [
          "SubscriptionImages"
        ],
        "operationId": "subscriptionImages_getInstance",
        "parameters": [
          {
            "name": "fields[subscriptionImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "assetToken",
                  "imageAsset",
                  "uploadOperations",
                  "state",
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionImageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SubscriptionImages"
        ],
        "operationId": "subscriptionImages_updateInstance",
        "requestBody": {
          "description": "SubscriptionImage representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionImageUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionImageResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SubscriptionImages"
        ],
        "operationId": "subscriptionImages_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionIntroductoryOffers": {
      "post": {
        "tags": [
          "SubscriptionIntroductoryOffers"
        ],
        "operationId": "subscriptionIntroductoryOffers_createInstance",
        "requestBody": {
          "description": "SubscriptionIntroductoryOffer representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionIntroductoryOfferCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single SubscriptionIntroductoryOffer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionIntroductoryOfferResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionIntroductoryOffers/{id}": {
      "patch": {
        "tags": [
          "SubscriptionIntroductoryOffers"
        ],
        "operationId": "subscriptionIntroductoryOffers_updateInstance",
        "requestBody": {
          "description": "SubscriptionIntroductoryOffer representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionIntroductoryOfferUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionIntroductoryOffer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionIntroductoryOfferResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SubscriptionIntroductoryOffers"
        ],
        "operationId": "subscriptionIntroductoryOffers_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionLocalizations": {
      "post": {
        "tags": [
          "SubscriptionLocalizations"
        ],
        "operationId": "subscriptionLocalizations_createInstance",
        "requestBody": {
          "description": "SubscriptionLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionLocalizationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single SubscriptionLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionLocalizations/{id}": {
      "get": {
        "tags": [
          "SubscriptionLocalizations"
        ],
        "operationId": "subscriptionLocalizations_getInstance",
        "parameters": [
          {
            "name": "fields[subscriptionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "locale",
                  "description",
                  "state",
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SubscriptionLocalizations"
        ],
        "operationId": "subscriptionLocalizations_updateInstance",
        "requestBody": {
          "description": "SubscriptionLocalization representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionLocalizationUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionLocalization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionLocalizationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SubscriptionLocalizations"
        ],
        "operationId": "subscriptionLocalizations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionOfferCodeCustomCodes": {
      "post": {
        "tags": [
          "SubscriptionOfferCodeCustomCodes"
        ],
        "operationId": "subscriptionOfferCodeCustomCodes_createInstance",
        "requestBody": {
          "description": "SubscriptionOfferCodeCustomCode representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionOfferCodeCustomCodeCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single SubscriptionOfferCodeCustomCode",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionOfferCodeCustomCodeResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionOfferCodeCustomCodes/{id}": {
      "get": {
        "tags": [
          "SubscriptionOfferCodeCustomCodes"
        ],
        "operationId": "subscriptionOfferCodeCustomCodes_getInstance",
        "parameters": [
          {
            "name": "fields[subscriptionOfferCodeCustomCodes]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodeCustomCodes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customCode",
                  "numberOfCodes",
                  "createdDate",
                  "expirationDate",
                  "active",
                  "offerCode"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "offerCode"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionOfferCodeCustomCode",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionOfferCodeCustomCodeResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SubscriptionOfferCodeCustomCodes"
        ],
        "operationId": "subscriptionOfferCodeCustomCodes_updateInstance",
        "requestBody": {
          "description": "SubscriptionOfferCodeCustomCode representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionOfferCodeCustomCodeUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionOfferCodeCustomCode",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionOfferCodeCustomCodeResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionOfferCodeOneTimeUseCodes": {
      "post": {
        "tags": [
          "SubscriptionOfferCodeOneTimeUseCodes"
        ],
        "operationId": "subscriptionOfferCodeOneTimeUseCodes_createInstance",
        "requestBody": {
          "description": "SubscriptionOfferCodeOneTimeUseCode representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionOfferCodeOneTimeUseCodeCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single SubscriptionOfferCodeOneTimeUseCode",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionOfferCodeOneTimeUseCodeResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionOfferCodeOneTimeUseCodes/{id}": {
      "get": {
        "tags": [
          "SubscriptionOfferCodeOneTimeUseCodes"
        ],
        "operationId": "subscriptionOfferCodeOneTimeUseCodes_getInstance",
        "parameters": [
          {
            "name": "fields[subscriptionOfferCodeOneTimeUseCodes]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodeOneTimeUseCodes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "numberOfCodes",
                  "createdDate",
                  "expirationDate",
                  "active",
                  "offerCode",
                  "values"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "offerCode"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionOfferCodeOneTimeUseCode",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionOfferCodeOneTimeUseCodeResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SubscriptionOfferCodeOneTimeUseCodes"
        ],
        "operationId": "subscriptionOfferCodeOneTimeUseCodes_updateInstance",
        "requestBody": {
          "description": "SubscriptionOfferCodeOneTimeUseCode representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionOfferCodeOneTimeUseCodeUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionOfferCodeOneTimeUseCode",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionOfferCodeOneTimeUseCodeResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionOfferCodes": {
      "post": {
        "tags": [
          "SubscriptionOfferCodes"
        ],
        "operationId": "subscriptionOfferCodes_createInstance",
        "requestBody": {
          "description": "SubscriptionOfferCode representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionOfferCodeCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single SubscriptionOfferCode",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionOfferCodeResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionOfferCodes/{id}": {
      "get": {
        "tags": [
          "SubscriptionOfferCodes"
        ],
        "operationId": "subscriptionOfferCodes_getInstance",
        "parameters": [
          {
            "name": "fields[subscriptionOfferCodes]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "customerEligibilities",
                  "offerEligibility",
                  "duration",
                  "offerMode",
                  "numberOfPeriods",
                  "totalNumberOfCodes",
                  "active",
                  "subscription",
                  "oneTimeUseCodes",
                  "customCodes",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionOfferCodeOneTimeUseCodes]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodeOneTimeUseCodes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "numberOfCodes",
                  "createdDate",
                  "expirationDate",
                  "active",
                  "offerCode",
                  "values"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionOfferCodeCustomCodes]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodeCustomCodes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customCode",
                  "numberOfCodes",
                  "createdDate",
                  "expirationDate",
                  "active",
                  "offerCode"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionOfferCodePrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodePrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscription",
                  "oneTimeUseCodes",
                  "customCodes",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[customCodes]",
            "in": "query",
            "description": "maximum number of related customCodes returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[oneTimeUseCodes]",
            "in": "query",
            "description": "maximum number of related oneTimeUseCodes returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[prices]",
            "in": "query",
            "description": "maximum number of related prices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionOfferCode",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionOfferCodeResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SubscriptionOfferCodes"
        ],
        "operationId": "subscriptionOfferCodes_updateInstance",
        "requestBody": {
          "description": "SubscriptionOfferCode representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionOfferCodeUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionOfferCode",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionOfferCodeResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionPricePoints/{id}": {
      "get": {
        "tags": [
          "SubscriptionPricePoints"
        ],
        "operationId": "subscriptionPricePoints_getInstance",
        "parameters": [
          {
            "name": "fields[subscriptionPricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "proceedsYear2",
                  "territory",
                  "equalizations"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionPricePoint",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPricePointResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionPrices": {
      "post": {
        "tags": [
          "SubscriptionPrices"
        ],
        "operationId": "subscriptionPrices_createInstance",
        "requestBody": {
          "description": "SubscriptionPrice representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPriceCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single SubscriptionPrice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPriceResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionPrices/{id}": {
      "delete": {
        "tags": [
          "SubscriptionPrices"
        ],
        "operationId": "subscriptionPrices_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionPromotionalOffers": {
      "post": {
        "tags": [
          "SubscriptionPromotionalOffers"
        ],
        "operationId": "subscriptionPromotionalOffers_createInstance",
        "requestBody": {
          "description": "SubscriptionPromotionalOffer representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPromotionalOfferCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single SubscriptionPromotionalOffer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPromotionalOfferResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionPromotionalOffers/{id}": {
      "get": {
        "tags": [
          "SubscriptionPromotionalOffers"
        ],
        "operationId": "subscriptionPromotionalOffers_getInstance",
        "parameters": [
          {
            "name": "fields[subscriptionPromotionalOffers]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPromotionalOffers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "offerCode",
                  "duration",
                  "offerMode",
                  "numberOfPeriods",
                  "subscription",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionPromotionalOfferPrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPromotionalOfferPrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscription",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[prices]",
            "in": "query",
            "description": "maximum number of related prices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionPromotionalOffer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPromotionalOfferResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SubscriptionPromotionalOffers"
        ],
        "operationId": "subscriptionPromotionalOffers_updateInstance",
        "requestBody": {
          "description": "SubscriptionPromotionalOffer representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPromotionalOfferUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionPromotionalOffer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPromotionalOfferResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SubscriptionPromotionalOffers"
        ],
        "operationId": "subscriptionPromotionalOffers_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionSubmissions": {
      "post": {
        "tags": [
          "SubscriptionSubmissions"
        ],
        "operationId": "subscriptionSubmissions_createInstance",
        "requestBody": {
          "description": "SubscriptionSubmission representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionSubmissionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single SubscriptionSubmission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionSubmissionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptions": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_createInstance",
        "requestBody": {
          "description": "Subscription representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single Subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptions/{id}": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_getInstance",
        "parameters": [
          {
            "name": "fields[subscriptions]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "familySharable",
                  "state",
                  "subscriptionPeriod",
                  "reviewNote",
                  "groupLevel",
                  "subscriptionLocalizations",
                  "appStoreReviewScreenshot",
                  "group",
                  "introductoryOffers",
                  "promotionalOffers",
                  "offerCodes",
                  "prices",
                  "pricePoints",
                  "promotedPurchase",
                  "subscriptionAvailability",
                  "winBackOffers",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "locale",
                  "description",
                  "state",
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionAppStoreReviewScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionAppStoreReviewScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "assetToken",
                  "assetType",
                  "uploadOperations",
                  "assetDeliveryState",
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionIntroductoryOffers]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionIntroductoryOffers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "startDate",
                  "endDate",
                  "duration",
                  "offerMode",
                  "numberOfPeriods",
                  "subscription",
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionPromotionalOffers]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPromotionalOffers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "offerCode",
                  "duration",
                  "offerMode",
                  "numberOfPeriods",
                  "subscription",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionOfferCodes]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "customerEligibilities",
                  "offerEligibility",
                  "duration",
                  "offerMode",
                  "numberOfPeriods",
                  "totalNumberOfCodes",
                  "active",
                  "subscription",
                  "oneTimeUseCodes",
                  "customCodes",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionPrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "startDate",
                  "preserved",
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[promotedPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "visibleForAllUsers",
                  "enabled",
                  "state",
                  "inAppPurchaseV2",
                  "subscription",
                  "promotionImages"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionAvailabilities]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionAvailabilities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "availableInNewTerritories",
                  "availableTerritories"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[winBackOffers]",
            "in": "query",
            "description": "the fields to include for returned resources of type winBackOffers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "offerId",
                  "duration",
                  "offerMode",
                  "periodCount",
                  "customerEligibilityPaidSubscriptionDurationInMonths",
                  "customerEligibilityTimeSinceLastSubscribedInMonths",
                  "customerEligibilityWaitBetweenOffersInMonths",
                  "startDate",
                  "endDate",
                  "priority",
                  "promotionIntent",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[subscriptionImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "assetToken",
                  "imageAsset",
                  "uploadOperations",
                  "state",
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptionLocalizations",
                  "appStoreReviewScreenshot",
                  "group",
                  "introductoryOffers",
                  "promotionalOffers",
                  "offerCodes",
                  "prices",
                  "promotedPurchase",
                  "subscriptionAvailability",
                  "winBackOffers",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[images]",
            "in": "query",
            "description": "maximum number of related images returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[introductoryOffers]",
            "in": "query",
            "description": "maximum number of related introductoryOffers returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[offerCodes]",
            "in": "query",
            "description": "maximum number of related offerCodes returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[prices]",
            "in": "query",
            "description": "maximum number of related prices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[promotionalOffers]",
            "in": "query",
            "description": "maximum number of related promotionalOffers returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[subscriptionLocalizations]",
            "in": "query",
            "description": "maximum number of related subscriptionLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          },
          {
            "name": "limit[winBackOffers]",
            "in": "query",
            "description": "maximum number of related winBackOffers returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single Subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_updateInstance",
        "requestBody": {
          "description": "Subscription representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single Subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/territories": {
      "get": {
        "tags": [
          "Territories"
        ],
        "operationId": "territories_getCollection",
        "parameters": [
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Territories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerritoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/territoryAvailabilities/{id}": {
      "patch": {
        "tags": [
          "TerritoryAvailabilities"
        ],
        "operationId": "territoryAvailabilities_updateInstance",
        "requestBody": {
          "description": "TerritoryAvailability representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerritoryAvailabilityUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single TerritoryAvailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerritoryAvailabilityResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/userInvitations": {
      "get": {
        "tags": [
          "UserInvitations"
        ],
        "operationId": "userInvitations_getCollection",
        "parameters": [
          {
            "name": "filter[email]",
            "in": "query",
            "description": "filter by attribute 'email'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[roles]",
            "in": "query",
            "description": "filter by attribute 'roles'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ADMIN",
                  "FINANCE",
                  "ACCOUNT_HOLDER",
                  "SALES",
                  "MARKETING",
                  "APP_MANAGER",
                  "DEVELOPER",
                  "ACCESS_TO_REPORTS",
                  "CUSTOMER_SUPPORT",
                  "CREATE_APPS",
                  "CLOUD_MANAGED_DEVELOPER_ID",
                  "CLOUD_MANAGED_APP_DISTRIBUTION",
                  "GENERATE_INDIVIDUAL_KEYS"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[visibleApps]",
            "in": "query",
            "description": "filter by id(s) of related 'visibleApps'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "-email",
                  "lastName",
                  "-lastName"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[userInvitations]",
            "in": "query",
            "description": "the fields to include for returned resources of type userInvitations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "firstName",
                  "lastName",
                  "expirationDate",
                  "roles",
                  "allAppsVisible",
                  "provisioningAllowed",
                  "visibleApps"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "visibleApps"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[visibleApps]",
            "in": "query",
            "description": "maximum number of related visibleApps returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of UserInvitations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInvitationsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserInvitations"
        ],
        "operationId": "userInvitations_createInstance",
        "requestBody": {
          "description": "UserInvitation representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInvitationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single UserInvitation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInvitationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/userInvitations/{id}": {
      "get": {
        "tags": [
          "UserInvitations"
        ],
        "operationId": "userInvitations_getInstance",
        "parameters": [
          {
            "name": "fields[userInvitations]",
            "in": "query",
            "description": "the fields to include for returned resources of type userInvitations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "email",
                  "firstName",
                  "lastName",
                  "expirationDate",
                  "roles",
                  "allAppsVisible",
                  "provisioningAllowed",
                  "visibleApps"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "visibleApps"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[visibleApps]",
            "in": "query",
            "description": "maximum number of related visibleApps returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single UserInvitation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInvitationResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserInvitations"
        ],
        "operationId": "userInvitations_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "users_getCollection",
        "parameters": [
          {
            "name": "filter[username]",
            "in": "query",
            "description": "filter by attribute 'username'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[roles]",
            "in": "query",
            "description": "filter by attribute 'roles'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ADMIN",
                  "FINANCE",
                  "ACCOUNT_HOLDER",
                  "SALES",
                  "MARKETING",
                  "APP_MANAGER",
                  "DEVELOPER",
                  "ACCESS_TO_REPORTS",
                  "CUSTOMER_SUPPORT",
                  "CREATE_APPS",
                  "CLOUD_MANAGED_DEVELOPER_ID",
                  "CLOUD_MANAGED_APP_DISTRIBUTION",
                  "GENERATE_INDIVIDUAL_KEYS"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[visibleApps]",
            "in": "query",
            "description": "filter by id(s) of related 'visibleApps'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "username",
                  "-username",
                  "lastName",
                  "-lastName"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[users]",
            "in": "query",
            "description": "the fields to include for returned resources of type users",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "username",
                  "firstName",
                  "lastName",
                  "roles",
                  "allAppsVisible",
                  "provisioningAllowed",
                  "visibleApps"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "visibleApps"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[visibleApps]",
            "in": "query",
            "description": "maximum number of related visibleApps returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "users_getInstance",
        "parameters": [
          {
            "name": "fields[users]",
            "in": "query",
            "description": "the fields to include for returned resources of type users",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "username",
                  "firstName",
                  "lastName",
                  "roles",
                  "allAppsVisible",
                  "provisioningAllowed",
                  "visibleApps"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "visibleApps"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[visibleApps]",
            "in": "query",
            "description": "maximum number of related visibleApps returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "operationId": "users_updateInstance",
        "requestBody": {
          "description": "User representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "users_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/winBackOffers": {
      "post": {
        "tags": [
          "WinBackOffers"
        ],
        "operationId": "winBackOffers_createInstance",
        "requestBody": {
          "description": "WinBackOffer representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WinBackOfferCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Single WinBackOffer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WinBackOfferResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/winBackOffers/{id}": {
      "get": {
        "tags": [
          "WinBackOffers"
        ],
        "operationId": "winBackOffers_getInstance",
        "parameters": [
          {
            "name": "fields[winBackOffers]",
            "in": "query",
            "description": "the fields to include for returned resources of type winBackOffers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "offerId",
                  "duration",
                  "offerMode",
                  "periodCount",
                  "customerEligibilityPaidSubscriptionDurationInMonths",
                  "customerEligibilityTimeSinceLastSubscribedInMonths",
                  "customerEligibilityWaitBetweenOffersInMonths",
                  "startDate",
                  "endDate",
                  "priority",
                  "promotionIntent",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "fields[winBackOfferPrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type winBackOfferPrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit[prices]",
            "in": "query",
            "description": "maximum number of related prices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single WinBackOffer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WinBackOfferResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "WinBackOffers"
        ],
        "operationId": "winBackOffers_updateInstance",
        "requestBody": {
          "description": "WinBackOffer representation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WinBackOfferUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single WinBackOffer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WinBackOfferResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WinBackOffers"
        ],
        "operationId": "winBackOffers_deleteInstance",
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/alternativeDistributionPackageVersions/{id}/deltas": {
      "get": {
        "tags": [
          "AlternativeDistributionPackageVersions"
        ],
        "operationId": "alternativeDistributionPackageVersions_deltas_getToManyRelated",
        "parameters": [
          {
            "name": "fields[alternativeDistributionPackageDeltas]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackageDeltas",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "url",
                  "urlExpirationDate",
                  "alternativeDistributionKeyBlob",
                  "fileChecksum"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AlternativeDistributionPackageDeltas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeDistributionPackageDeltasResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/alternativeDistributionPackageVersions/{id}/variants": {
      "get": {
        "tags": [
          "AlternativeDistributionPackageVersions"
        ],
        "operationId": "alternativeDistributionPackageVersions_variants_getToManyRelated",
        "parameters": [
          {
            "name": "fields[alternativeDistributionPackageVariants]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackageVariants",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "url",
                  "urlExpirationDate",
                  "alternativeDistributionKeyBlob",
                  "fileChecksum"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AlternativeDistributionPackageVariants",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeDistributionPackageVariantsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/alternativeDistributionPackages/{id}/versions": {
      "get": {
        "tags": [
          "AlternativeDistributionPackages"
        ],
        "operationId": "alternativeDistributionPackages_versions_getToManyRelated",
        "parameters": [
          {
            "name": "filter[state]",
            "in": "query",
            "description": "filter by attribute 'state'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "COMPLETED",
                  "REPLACED"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[alternativeDistributionPackageVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackageVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "url",
                  "urlExpirationDate",
                  "version",
                  "fileChecksum",
                  "state",
                  "variants",
                  "deltas",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[alternativeDistributionPackageVariants]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackageVariants",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "url",
                  "urlExpirationDate",
                  "alternativeDistributionKeyBlob",
                  "fileChecksum"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[alternativeDistributionPackageDeltas]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackageDeltas",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "url",
                  "urlExpirationDate",
                  "alternativeDistributionKeyBlob",
                  "fileChecksum"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[alternativeDistributionPackages]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "versions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variants",
                  "deltas",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[variants]",
            "in": "query",
            "description": "maximum number of related variants returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[deltas]",
            "in": "query",
            "description": "maximum number of related deltas returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AlternativeDistributionPackageVersions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeDistributionPackageVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/analyticsReportInstances/{id}/segments": {
      "get": {
        "tags": [
          "AnalyticsReportInstances"
        ],
        "operationId": "analyticsReportInstances_segments_getToManyRelated",
        "parameters": [
          {
            "name": "fields[analyticsReportSegments]",
            "in": "query",
            "description": "the fields to include for returned resources of type analyticsReportSegments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "checksum",
                  "sizeInBytes",
                  "url"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AnalyticsReportSegments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsReportSegmentsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/analyticsReportRequests/{id}/reports": {
      "get": {
        "tags": [
          "AnalyticsReportRequests"
        ],
        "operationId": "analyticsReportRequests_reports_getToManyRelated",
        "parameters": [
          {
            "name": "filter[name]",
            "in": "query",
            "description": "filter by attribute 'name'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[category]",
            "in": "query",
            "description": "filter by attribute 'category'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "APP_USAGE",
                  "APP_STORE_ENGAGEMENT",
                  "COMMERCE",
                  "FRAMEWORK_USAGE",
                  "PERFORMANCE"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[analyticsReports]",
            "in": "query",
            "description": "the fields to include for returned resources of type analyticsReports",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "category",
                  "instances"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AnalyticsReports",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsReportsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/analyticsReports/{id}/instances": {
      "get": {
        "tags": [
          "AnalyticsReports"
        ],
        "operationId": "analyticsReports_instances_getToManyRelated",
        "parameters": [
          {
            "name": "filter[granularity]",
            "in": "query",
            "description": "filter by attribute 'granularity'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DAILY",
                  "WEEKLY",
                  "MONTHLY"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[processingDate]",
            "in": "query",
            "description": "filter by attribute 'processingDate'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[analyticsReportInstances]",
            "in": "query",
            "description": "the fields to include for returned resources of type analyticsReportInstances",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "granularity",
                  "processingDate",
                  "segments"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AnalyticsReportInstances",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsReportInstancesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v2/appAvailabilities/{id}/territoryAvailabilities": {
      "get": {
        "tags": [
          "AppAvailabilities"
        ],
        "operationId": "appAvailabilitiesV2_territoryAvailabilities_getToManyRelated",
        "parameters": [
          {
            "name": "fields[territoryAvailabilities]",
            "in": "query",
            "description": "the fields to include for returned resources of type territoryAvailabilities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "available",
                  "releaseDate",
                  "preOrderEnabled",
                  "preOrderPublishDate",
                  "contentStatuses",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of TerritoryAvailabilities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerritoryAvailabilitiesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appCategories/{id}/parent": {
      "get": {
        "tags": [
          "AppCategories"
        ],
        "operationId": "appCategories_parent_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appCategories]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCategories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platforms",
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppCategory with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCategoryWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appCategories/{id}/subcategories": {
      "get": {
        "tags": [
          "AppCategories"
        ],
        "operationId": "appCategories_subcategories_getToManyRelated",
        "parameters": [
          {
            "name": "fields[appCategories]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCategories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platforms",
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppCategories with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCategoriesWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appClipDefaultExperienceLocalizations/{id}/appClipHeaderImage": {
      "get": {
        "tags": [
          "AppClipDefaultExperienceLocalizations"
        ],
        "operationId": "appClipDefaultExperienceLocalizations_appClipHeaderImage_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appClipHeaderImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipHeaderImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appClipDefaultExperienceLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipDefaultExperienceLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperienceLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "subtitle",
                  "appClipDefaultExperience",
                  "appClipHeaderImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appClipDefaultExperienceLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipHeaderImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipHeaderImageResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appClipDefaultExperiences/{id}/appClipAppStoreReviewDetail": {
      "get": {
        "tags": [
          "AppClipDefaultExperiences"
        ],
        "operationId": "appClipDefaultExperiences_appClipAppStoreReviewDetail_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appClipAppStoreReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipAppStoreReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "invocationUrls",
                  "appClipDefaultExperience"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipDefaultExperiences]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperiences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action",
                  "appClip",
                  "releaseWithAppStoreVersion",
                  "appClipDefaultExperienceLocalizations",
                  "appClipAppStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appClipDefaultExperience"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipAppStoreReviewDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipAppStoreReviewDetailResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appClipDefaultExperiences/{id}/appClipDefaultExperienceLocalizations": {
      "get": {
        "tags": [
          "AppClipDefaultExperiences"
        ],
        "operationId": "appClipDefaultExperiences_appClipDefaultExperienceLocalizations_getToManyRelated",
        "parameters": [
          {
            "name": "filter[locale]",
            "in": "query",
            "description": "filter by attribute 'locale'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipDefaultExperienceLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperienceLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "subtitle",
                  "appClipDefaultExperience",
                  "appClipHeaderImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipDefaultExperiences]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperiences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action",
                  "appClip",
                  "releaseWithAppStoreVersion",
                  "appClipDefaultExperienceLocalizations",
                  "appClipAppStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipHeaderImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipHeaderImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appClipDefaultExperienceLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appClipDefaultExperience",
                  "appClipHeaderImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppClipDefaultExperienceLocalizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipDefaultExperienceLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appClipDefaultExperiences/{id}/relationships/releaseWithAppStoreVersion": {
      "get": {
        "tags": [
          "AppClipDefaultExperiences"
        ],
        "operationId": "appClipDefaultExperiences_releaseWithAppStoreVersion_getToOneRelationship",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Related linkage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipDefaultExperienceReleaseWithAppStoreVersionLinkageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppClipDefaultExperiences"
        ],
        "operationId": "appClipDefaultExperiences_releaseWithAppStoreVersion_updateToOneRelationship",
        "requestBody": {
          "description": "Related linkage",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppClipDefaultExperienceReleaseWithAppStoreVersionLinkageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appClipDefaultExperiences/{id}/releaseWithAppStoreVersion": {
      "get": {
        "tags": [
          "AppClipDefaultExperiences"
        ],
        "operationId": "appClipDefaultExperiences_releaseWithAppStoreVersion_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ageRatingDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type ageRatingDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "alcoholTobaccoOrDrugUseOrReferences",
                  "contests",
                  "gamblingAndContests",
                  "gambling",
                  "gamblingSimulated",
                  "kidsAgeBand",
                  "lootBox",
                  "medicalOrTreatmentInformation",
                  "profanityOrCrudeHumor",
                  "sexualContentGraphicAndNudity",
                  "sexualContentOrNudity",
                  "horrorOrFearThemes",
                  "matureOrSuggestiveThemes",
                  "unrestrictedWebAccess",
                  "violenceCartoonOrFantasy",
                  "violenceRealisticProlongedGraphicOrSadistic",
                  "violenceRealistic",
                  "ageRatingOverride",
                  "koreaAgeRatingOverride",
                  "seventeenPlus"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "locale",
                  "keywords",
                  "marketingUrl",
                  "promotionalText",
                  "supportUrl",
                  "whatsNew",
                  "appStoreVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionPhasedReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionPhasedReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "phasedReleaseState",
                  "startDate",
                  "totalPauseDuration",
                  "currentDayNumber"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAppVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAppVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "enabled",
                  "compatibilityVersions",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[routingAppCoverages]",
            "in": "query",
            "description": "the fields to include for returned resources of type routingAppCoverages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contactFirstName",
                  "contactLastName",
                  "contactPhone",
                  "contactEmail",
                  "demoAccountName",
                  "demoAccountPassword",
                  "demoAccountRequired",
                  "notes",
                  "appStoreVersion",
                  "appStoreReviewAttachments"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipDefaultExperiences]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperiences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action",
                  "appClip",
                  "releaseWithAppStoreVersion",
                  "appClipDefaultExperienceLocalizations",
                  "appClipAppStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperiments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperiments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "trafficProportion",
                  "state",
                  "reviewRequired",
                  "startDate",
                  "endDate",
                  "appStoreVersion",
                  "appStoreVersionExperimentTreatments",
                  "platform",
                  "app",
                  "latestControlVersion",
                  "controlVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[alternativeDistributionPackages]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "versions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appStoreVersionLocalizations]",
            "in": "query",
            "description": "maximum number of related appStoreVersionLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[appStoreVersionExperiments]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperiments returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "deprecated": true
          },
          {
            "name": "limit[appStoreVersionExperimentsV2]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperimentsV2 returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appClips/{id}/appClipAdvancedExperiences": {
      "get": {
        "tags": [
          "AppClips"
        ],
        "operationId": "appClips_appClipAdvancedExperiences_getToManyRelated",
        "parameters": [
          {
            "name": "filter[status]",
            "in": "query",
            "description": "filter by attribute 'status'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "RECEIVED",
                  "DEACTIVATED",
                  "APP_TRANSFER_IN_PROGRESS"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[placeStatus]",
            "in": "query",
            "description": "filter by attribute 'placeStatus'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "MATCHED",
                  "NO_MATCH"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[action]",
            "in": "query",
            "description": "filter by attribute 'action'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "OPEN",
                  "VIEW",
                  "PLAY"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipAdvancedExperiences]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipAdvancedExperiences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "link",
                  "version",
                  "status",
                  "action",
                  "isPoweredBy",
                  "place",
                  "placeStatus",
                  "businessCategory",
                  "defaultLanguage",
                  "appClip",
                  "headerImage",
                  "localizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClips]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClips",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bundleId",
                  "app",
                  "appClipDefaultExperiences",
                  "appClipAdvancedExperiences"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipAdvancedExperienceImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipAdvancedExperienceImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipAdvancedExperienceLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipAdvancedExperienceLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "language",
                  "title",
                  "subtitle"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appClip",
                  "headerImage",
                  "localizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppClipAdvancedExperiences",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipAdvancedExperiencesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appClips/{id}/appClipDefaultExperiences": {
      "get": {
        "tags": [
          "AppClips"
        ],
        "operationId": "appClips_appClipDefaultExperiences_getToManyRelated",
        "parameters": [
          {
            "name": "exists[releaseWithAppStoreVersion]",
            "in": "query",
            "description": "filter by existence or non-existence of related 'releaseWithAppStoreVersion'",
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipDefaultExperiences]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperiences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action",
                  "appClip",
                  "releaseWithAppStoreVersion",
                  "appClipDefaultExperienceLocalizations",
                  "appClipAppStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClips]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClips",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bundleId",
                  "app",
                  "appClipDefaultExperiences",
                  "appClipAdvancedExperiences"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipDefaultExperienceLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperienceLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "subtitle",
                  "appClipDefaultExperience",
                  "appClipHeaderImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipAppStoreReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipAppStoreReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "invocationUrls",
                  "appClipDefaultExperience"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appClip",
                  "releaseWithAppStoreVersion",
                  "appClipDefaultExperienceLocalizations",
                  "appClipAppStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appClipDefaultExperienceLocalizations]",
            "in": "query",
            "description": "maximum number of related appClipDefaultExperienceLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppClipDefaultExperiences",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipDefaultExperiencesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appCustomProductPageLocalizations/{id}/appPreviewSets": {
      "get": {
        "tags": [
          "AppCustomProductPageLocalizations"
        ],
        "operationId": "appCustomProductPageLocalizations_appPreviewSets_getToManyRelated",
        "parameters": [
          {
            "name": "filter[previewType]",
            "in": "query",
            "description": "filter by attribute 'previewType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IPHONE_67",
                  "IPHONE_61",
                  "IPHONE_65",
                  "IPHONE_58",
                  "IPHONE_55",
                  "IPHONE_47",
                  "IPHONE_40",
                  "IPHONE_35",
                  "IPAD_PRO_3GEN_129",
                  "IPAD_PRO_3GEN_11",
                  "IPAD_PRO_129",
                  "IPAD_105",
                  "IPAD_97",
                  "DESKTOP",
                  "APPLE_TV",
                  "APPLE_VISION_PRO"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[appStoreVersionLocalization]",
            "in": "query",
            "description": "filter by id(s) of related 'appStoreVersionLocalization'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[appStoreVersionExperimentTreatmentLocalization]",
            "in": "query",
            "description": "filter by id(s) of related 'appStoreVersionExperimentTreatmentLocalization'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPreviewSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviewSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "previewType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appPreviews"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "locale",
                  "keywords",
                  "marketingUrl",
                  "promotionalText",
                  "supportUrl",
                  "whatsNew",
                  "appStoreVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appCustomProductPageLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPageLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "promotionalText",
                  "appCustomProductPageVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperimentTreatmentLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "appStoreVersionExperimentTreatment",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPreviews]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviews",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "previewFrameTimeCode",
                  "mimeType",
                  "videoUrl",
                  "previewFrameImage",
                  "previewImage",
                  "uploadOperations",
                  "assetDeliveryState",
                  "videoDeliveryState",
                  "appPreviewSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appPreviews"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appPreviews]",
            "in": "query",
            "description": "maximum number of related appPreviews returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppPreviewSets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPreviewSetsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appCustomProductPageLocalizations/{id}/appScreenshotSets": {
      "get": {
        "tags": [
          "AppCustomProductPageLocalizations"
        ],
        "operationId": "appCustomProductPageLocalizations_appScreenshotSets_getToManyRelated",
        "parameters": [
          {
            "name": "filter[screenshotDisplayType]",
            "in": "query",
            "description": "filter by attribute 'screenshotDisplayType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "APP_IPHONE_67",
                  "APP_IPHONE_61",
                  "APP_IPHONE_65",
                  "APP_IPHONE_58",
                  "APP_IPHONE_55",
                  "APP_IPHONE_47",
                  "APP_IPHONE_40",
                  "APP_IPHONE_35",
                  "APP_IPAD_PRO_3GEN_129",
                  "APP_IPAD_PRO_3GEN_11",
                  "APP_IPAD_PRO_129",
                  "APP_IPAD_105",
                  "APP_IPAD_97",
                  "APP_DESKTOP",
                  "APP_WATCH_ULTRA",
                  "APP_WATCH_SERIES_10",
                  "APP_WATCH_SERIES_7",
                  "APP_WATCH_SERIES_4",
                  "APP_WATCH_SERIES_3",
                  "APP_APPLE_TV",
                  "APP_APPLE_VISION_PRO",
                  "IMESSAGE_APP_IPHONE_67",
                  "IMESSAGE_APP_IPHONE_61",
                  "IMESSAGE_APP_IPHONE_65",
                  "IMESSAGE_APP_IPHONE_58",
                  "IMESSAGE_APP_IPHONE_55",
                  "IMESSAGE_APP_IPHONE_47",
                  "IMESSAGE_APP_IPHONE_40",
                  "IMESSAGE_APP_IPAD_PRO_3GEN_129",
                  "IMESSAGE_APP_IPAD_PRO_3GEN_11",
                  "IMESSAGE_APP_IPAD_PRO_129",
                  "IMESSAGE_APP_IPAD_105",
                  "IMESSAGE_APP_IPAD_97"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[appStoreVersionLocalization]",
            "in": "query",
            "description": "filter by id(s) of related 'appStoreVersionLocalization'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[appStoreVersionExperimentTreatmentLocalization]",
            "in": "query",
            "description": "filter by id(s) of related 'appStoreVersionExperimentTreatmentLocalization'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appScreenshotSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshotSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "screenshotDisplayType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appScreenshots"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "locale",
                  "keywords",
                  "marketingUrl",
                  "promotionalText",
                  "supportUrl",
                  "whatsNew",
                  "appStoreVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appCustomProductPageLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPageLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "promotionalText",
                  "appCustomProductPageVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperimentTreatmentLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "appStoreVersionExperimentTreatment",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "assetToken",
                  "assetType",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appScreenshotSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appScreenshots"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appScreenshots]",
            "in": "query",
            "description": "maximum number of related appScreenshots returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppScreenshotSets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppScreenshotSetsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appCustomProductPageVersions/{id}/appCustomProductPageLocalizations": {
      "get": {
        "tags": [
          "AppCustomProductPageVersions"
        ],
        "operationId": "appCustomProductPageVersions_appCustomProductPageLocalizations_getToManyRelated",
        "parameters": [
          {
            "name": "filter[locale]",
            "in": "query",
            "description": "filter by attribute 'locale'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appCustomProductPageLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPageLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "promotionalText",
                  "appCustomProductPageVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appCustomProductPageVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPageVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "state",
                  "deepLink",
                  "appCustomProductPage",
                  "appCustomProductPageLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appScreenshotSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshotSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "screenshotDisplayType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appScreenshots"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPreviewSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviewSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "previewType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appPreviews"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appCustomProductPageVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appScreenshotSets]",
            "in": "query",
            "description": "maximum number of related appScreenshotSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[appPreviewSets]",
            "in": "query",
            "description": "maximum number of related appPreviewSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppCustomProductPageLocalizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCustomProductPageLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appCustomProductPages/{id}/appCustomProductPageVersions": {
      "get": {
        "tags": [
          "AppCustomProductPages"
        ],
        "operationId": "appCustomProductPages_appCustomProductPageVersions_getToManyRelated",
        "parameters": [
          {
            "name": "filter[state]",
            "in": "query",
            "description": "filter by attribute 'state'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PREPARE_FOR_SUBMISSION",
                  "READY_FOR_REVIEW",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "ACCEPTED",
                  "APPROVED",
                  "REPLACED_WITH_NEW_VERSION",
                  "REJECTED"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appCustomProductPageVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPageVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "state",
                  "deepLink",
                  "appCustomProductPage",
                  "appCustomProductPageLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appCustomProductPages]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "url",
                  "visible",
                  "app",
                  "appCustomProductPageVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appCustomProductPageLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPageLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "promotionalText",
                  "appCustomProductPageVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appCustomProductPage",
                  "appCustomProductPageLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appCustomProductPageLocalizations]",
            "in": "query",
            "description": "maximum number of related appCustomProductPageLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppCustomProductPageVersions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCustomProductPageVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appEncryptionDeclarations/{id}/app": {
      "get": {
        "tags": [
          "AppEncryptionDeclarations"
        ],
        "operationId": "appEncryptionDeclarations_app_getToOneRelated",
        "deprecated": true,
        "parameters": [
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single App with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appEncryptionDeclarations/{id}/appEncryptionDeclarationDocument": {
      "get": {
        "tags": [
          "AppEncryptionDeclarations"
        ],
        "operationId": "appEncryptionDeclarations_appEncryptionDeclarationDocument_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appEncryptionDeclarationDocuments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEncryptionDeclarationDocuments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "assetToken",
                  "downloadUrl",
                  "sourceFileChecksum",
                  "uploadOperations",
                  "assetDeliveryState"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppEncryptionDeclarationDocument",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEncryptionDeclarationDocumentResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appEncryptionDeclarations/{id}/relationships/builds": {
      "post": {
        "tags": [
          "AppEncryptionDeclarations"
        ],
        "operationId": "appEncryptionDeclarations_builds_createToManyRelationship",
        "deprecated": true,
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppEncryptionDeclarationBuildsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appEventLocalizations/{id}/appEventScreenshots": {
      "get": {
        "tags": [
          "AppEventLocalizations"
        ],
        "operationId": "appEventLocalizations_appEventScreenshots_getToManyRelated",
        "parameters": [
          {
            "name": "fields[appEventScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEventScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "imageAsset",
                  "assetToken",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appEventAssetType",
                  "appEventLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appEventLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEventLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "shortDescription",
                  "longDescription",
                  "appEvent",
                  "appEventScreenshots",
                  "appEventVideoClips"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appEventLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppEventScreenshots",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEventScreenshotsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appEventLocalizations/{id}/appEventVideoClips": {
      "get": {
        "tags": [
          "AppEventLocalizations"
        ],
        "operationId": "appEventLocalizations_appEventVideoClips_getToManyRelated",
        "parameters": [
          {
            "name": "fields[appEventVideoClips]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEventVideoClips",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "previewFrameTimeCode",
                  "videoUrl",
                  "previewFrameImage",
                  "previewImage",
                  "uploadOperations",
                  "assetDeliveryState",
                  "videoDeliveryState",
                  "appEventAssetType",
                  "appEventLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appEventLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEventLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "shortDescription",
                  "longDescription",
                  "appEvent",
                  "appEventScreenshots",
                  "appEventVideoClips"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appEventLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppEventVideoClips",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEventVideoClipsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appEvents/{id}/localizations": {
      "get": {
        "tags": [
          "AppEvents"
        ],
        "operationId": "appEvents_localizations_getToManyRelated",
        "parameters": [
          {
            "name": "fields[appEventLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEventLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "shortDescription",
                  "longDescription",
                  "appEvent",
                  "appEventScreenshots",
                  "appEventVideoClips"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appEvents]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEvents",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "badge",
                  "eventState",
                  "deepLink",
                  "purchaseRequirement",
                  "primaryLocale",
                  "priority",
                  "purpose",
                  "territorySchedules",
                  "archivedTerritorySchedules",
                  "localizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appEventScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEventScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "imageAsset",
                  "assetToken",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appEventAssetType",
                  "appEventLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appEventVideoClips]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEventVideoClips",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "previewFrameTimeCode",
                  "videoUrl",
                  "previewFrameImage",
                  "previewImage",
                  "uploadOperations",
                  "assetDeliveryState",
                  "videoDeliveryState",
                  "appEventAssetType",
                  "appEventLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appEvent",
                  "appEventScreenshots",
                  "appEventVideoClips"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appEventScreenshots]",
            "in": "query",
            "description": "maximum number of related appEventScreenshots returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[appEventVideoClips]",
            "in": "query",
            "description": "maximum number of related appEventVideoClips returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppEventLocalizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEventLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appInfos/{id}/ageRatingDeclaration": {
      "get": {
        "tags": [
          "AppInfos"
        ],
        "operationId": "appInfos_ageRatingDeclaration_getToOneRelated",
        "parameters": [
          {
            "name": "fields[ageRatingDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type ageRatingDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "alcoholTobaccoOrDrugUseOrReferences",
                  "contests",
                  "gamblingAndContests",
                  "gambling",
                  "gamblingSimulated",
                  "kidsAgeBand",
                  "lootBox",
                  "medicalOrTreatmentInformation",
                  "profanityOrCrudeHumor",
                  "sexualContentGraphicAndNudity",
                  "sexualContentOrNudity",
                  "horrorOrFearThemes",
                  "matureOrSuggestiveThemes",
                  "unrestrictedWebAccess",
                  "violenceCartoonOrFantasy",
                  "violenceRealisticProlongedGraphicOrSadistic",
                  "violenceRealistic",
                  "ageRatingOverride",
                  "koreaAgeRatingOverride",
                  "seventeenPlus"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AgeRatingDeclaration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeRatingDeclarationResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appInfos/{id}/appInfoLocalizations": {
      "get": {
        "tags": [
          "AppInfos"
        ],
        "operationId": "appInfos_appInfoLocalizations_getToManyRelated",
        "parameters": [
          {
            "name": "filter[locale]",
            "in": "query",
            "description": "filter by attribute 'locale'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appInfoLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appInfoLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "subtitle",
                  "privacyPolicyUrl",
                  "privacyChoicesUrl",
                  "privacyPolicyText",
                  "appInfo"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appInfos]",
            "in": "query",
            "description": "the fields to include for returned resources of type appInfos",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreState",
                  "state",
                  "appStoreAgeRating",
                  "australiaAgeRating",
                  "brazilAgeRating",
                  "brazilAgeRatingV2",
                  "franceAgeRating",
                  "koreaAgeRating",
                  "kidsAgeBand",
                  "app",
                  "ageRatingDeclaration",
                  "appInfoLocalizations",
                  "primaryCategory",
                  "primarySubcategoryOne",
                  "primarySubcategoryTwo",
                  "secondaryCategory",
                  "secondarySubcategoryOne",
                  "secondarySubcategoryTwo"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appInfo"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppInfoLocalizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppInfoLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appInfos/{id}/primaryCategory": {
      "get": {
        "tags": [
          "AppInfos"
        ],
        "operationId": "appInfos_primaryCategory_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appCategories]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCategories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platforms",
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[subcategories]",
            "in": "query",
            "description": "maximum number of related subcategories returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppCategory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appInfos/{id}/primarySubcategoryOne": {
      "get": {
        "tags": [
          "AppInfos"
        ],
        "operationId": "appInfos_primarySubcategoryOne_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appCategories]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCategories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platforms",
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[subcategories]",
            "in": "query",
            "description": "maximum number of related subcategories returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppCategory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appInfos/{id}/primarySubcategoryTwo": {
      "get": {
        "tags": [
          "AppInfos"
        ],
        "operationId": "appInfos_primarySubcategoryTwo_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appCategories]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCategories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platforms",
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[subcategories]",
            "in": "query",
            "description": "maximum number of related subcategories returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppCategory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appInfos/{id}/secondaryCategory": {
      "get": {
        "tags": [
          "AppInfos"
        ],
        "operationId": "appInfos_secondaryCategory_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appCategories]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCategories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platforms",
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[subcategories]",
            "in": "query",
            "description": "maximum number of related subcategories returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppCategory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appInfos/{id}/secondarySubcategoryOne": {
      "get": {
        "tags": [
          "AppInfos"
        ],
        "operationId": "appInfos_secondarySubcategoryOne_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appCategories]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCategories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platforms",
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[subcategories]",
            "in": "query",
            "description": "maximum number of related subcategories returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppCategory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appInfos/{id}/secondarySubcategoryTwo": {
      "get": {
        "tags": [
          "AppInfos"
        ],
        "operationId": "appInfos_secondarySubcategoryTwo_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appCategories]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCategories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platforms",
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[subcategories]",
            "in": "query",
            "description": "maximum number of related subcategories returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppCategory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appPreviewSets/{id}/relationships/appPreviews": {
      "get": {
        "tags": [
          "AppPreviewSets"
        ],
        "operationId": "appPreviewSets_appPreviews_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPreviewSetAppPreviewsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppPreviewSets"
        ],
        "operationId": "appPreviewSets_appPreviews_replaceToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPreviewSetAppPreviewsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appPreviewSets/{id}/appPreviews": {
      "get": {
        "tags": [
          "AppPreviewSets"
        ],
        "operationId": "appPreviewSets_appPreviews_getToManyRelated",
        "parameters": [
          {
            "name": "fields[appPreviews]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviews",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "previewFrameTimeCode",
                  "mimeType",
                  "videoUrl",
                  "previewFrameImage",
                  "previewImage",
                  "uploadOperations",
                  "assetDeliveryState",
                  "videoDeliveryState",
                  "appPreviewSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPreviewSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviewSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "previewType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appPreviews"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appPreviewSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppPreviews",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPreviewsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v3/appPricePoints/{id}/equalizations": {
      "get": {
        "tags": [
          "AppPricePoints"
        ],
        "operationId": "appPricePointsV3_equalizations_getToManyRelated",
        "parameters": [
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by id(s) of related 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "app",
                  "equalizations",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppPricePoints",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPricePointsV3Response"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/csv"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appPriceSchedules/{id}/automaticPrices": {
      "get": {
        "tags": [
          "AppPriceSchedules"
        ],
        "operationId": "appPriceSchedules_automaticPrices_getToManyRelated",
        "parameters": [
          {
            "name": "filter[startDate]",
            "in": "query",
            "description": "filter by attribute 'startDate'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[endDate]",
            "in": "query",
            "description": "filter by attribute 'endDate'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by id(s) of related 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "manual",
                  "startDate",
                  "endDate",
                  "appPricePoint",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "app",
                  "equalizations",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appPricePoint",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppPrices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPricesV2Response"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appPriceSchedules/{id}/baseTerritory": {
      "get": {
        "tags": [
          "AppPriceSchedules"
        ],
        "operationId": "appPriceSchedules_baseTerritory_getToOneRelated",
        "parameters": [
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single Territory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerritoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appPriceSchedules/{id}/manualPrices": {
      "get": {
        "tags": [
          "AppPriceSchedules"
        ],
        "operationId": "appPriceSchedules_manualPrices_getToManyRelated",
        "parameters": [
          {
            "name": "filter[startDate]",
            "in": "query",
            "description": "filter by attribute 'startDate'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[endDate]",
            "in": "query",
            "description": "filter by attribute 'endDate'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by id(s) of related 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "manual",
                  "startDate",
                  "endDate",
                  "appPricePoint",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "app",
                  "equalizations",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appPricePoint",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppPrices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPricesV2Response"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appScreenshotSets/{id}/relationships/appScreenshots": {
      "get": {
        "tags": [
          "AppScreenshotSets"
        ],
        "operationId": "appScreenshotSets_appScreenshots_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppScreenshotSetAppScreenshotsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppScreenshotSets"
        ],
        "operationId": "appScreenshotSets_appScreenshots_replaceToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppScreenshotSetAppScreenshotsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appScreenshotSets/{id}/appScreenshots": {
      "get": {
        "tags": [
          "AppScreenshotSets"
        ],
        "operationId": "appScreenshotSets_appScreenshots_getToManyRelated",
        "parameters": [
          {
            "name": "fields[appScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "assetToken",
                  "assetType",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appScreenshotSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appScreenshotSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshotSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "screenshotDisplayType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appScreenshots"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appScreenshotSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppScreenshots",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppScreenshotsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreReviewDetails/{id}/appStoreReviewAttachments": {
      "get": {
        "tags": [
          "AppStoreReviewDetails"
        ],
        "operationId": "appStoreReviewDetails_appStoreReviewAttachments_getToManyRelated",
        "parameters": [
          {
            "name": "fields[appStoreReviewAttachments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreReviewAttachments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contactFirstName",
                  "contactLastName",
                  "contactPhone",
                  "contactEmail",
                  "demoAccountName",
                  "demoAccountPassword",
                  "demoAccountRequired",
                  "notes",
                  "appStoreVersion",
                  "appStoreReviewAttachments"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppStoreReviewAttachments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreReviewAttachmentsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/appPreviewSets": {
      "get": {
        "tags": [
          "AppStoreVersionExperimentTreatmentLocalizations"
        ],
        "operationId": "appStoreVersionExperimentTreatmentLocalizations_appPreviewSets_getToManyRelated",
        "parameters": [
          {
            "name": "filter[previewType]",
            "in": "query",
            "description": "filter by attribute 'previewType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IPHONE_67",
                  "IPHONE_61",
                  "IPHONE_65",
                  "IPHONE_58",
                  "IPHONE_55",
                  "IPHONE_47",
                  "IPHONE_40",
                  "IPHONE_35",
                  "IPAD_PRO_3GEN_129",
                  "IPAD_PRO_3GEN_11",
                  "IPAD_PRO_129",
                  "IPAD_105",
                  "IPAD_97",
                  "DESKTOP",
                  "APPLE_TV",
                  "APPLE_VISION_PRO"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[appStoreVersionLocalization]",
            "in": "query",
            "description": "filter by id(s) of related 'appStoreVersionLocalization'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[appCustomProductPageLocalization]",
            "in": "query",
            "description": "filter by id(s) of related 'appCustomProductPageLocalization'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPreviewSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviewSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "previewType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appPreviews"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "locale",
                  "keywords",
                  "marketingUrl",
                  "promotionalText",
                  "supportUrl",
                  "whatsNew",
                  "appStoreVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appCustomProductPageLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPageLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "promotionalText",
                  "appCustomProductPageVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperimentTreatmentLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "appStoreVersionExperimentTreatment",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPreviews]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviews",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "previewFrameTimeCode",
                  "mimeType",
                  "videoUrl",
                  "previewFrameImage",
                  "previewImage",
                  "uploadOperations",
                  "assetDeliveryState",
                  "videoDeliveryState",
                  "appPreviewSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appPreviews"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appPreviews]",
            "in": "query",
            "description": "maximum number of related appPreviews returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppPreviewSets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPreviewSetsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/appScreenshotSets": {
      "get": {
        "tags": [
          "AppStoreVersionExperimentTreatmentLocalizations"
        ],
        "operationId": "appStoreVersionExperimentTreatmentLocalizations_appScreenshotSets_getToManyRelated",
        "parameters": [
          {
            "name": "filter[screenshotDisplayType]",
            "in": "query",
            "description": "filter by attribute 'screenshotDisplayType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "APP_IPHONE_67",
                  "APP_IPHONE_61",
                  "APP_IPHONE_65",
                  "APP_IPHONE_58",
                  "APP_IPHONE_55",
                  "APP_IPHONE_47",
                  "APP_IPHONE_40",
                  "APP_IPHONE_35",
                  "APP_IPAD_PRO_3GEN_129",
                  "APP_IPAD_PRO_3GEN_11",
                  "APP_IPAD_PRO_129",
                  "APP_IPAD_105",
                  "APP_IPAD_97",
                  "APP_DESKTOP",
                  "APP_WATCH_ULTRA",
                  "APP_WATCH_SERIES_10",
                  "APP_WATCH_SERIES_7",
                  "APP_WATCH_SERIES_4",
                  "APP_WATCH_SERIES_3",
                  "APP_APPLE_TV",
                  "APP_APPLE_VISION_PRO",
                  "IMESSAGE_APP_IPHONE_67",
                  "IMESSAGE_APP_IPHONE_61",
                  "IMESSAGE_APP_IPHONE_65",
                  "IMESSAGE_APP_IPHONE_58",
                  "IMESSAGE_APP_IPHONE_55",
                  "IMESSAGE_APP_IPHONE_47",
                  "IMESSAGE_APP_IPHONE_40",
                  "IMESSAGE_APP_IPAD_PRO_3GEN_129",
                  "IMESSAGE_APP_IPAD_PRO_3GEN_11",
                  "IMESSAGE_APP_IPAD_PRO_129",
                  "IMESSAGE_APP_IPAD_105",
                  "IMESSAGE_APP_IPAD_97"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[appStoreVersionLocalization]",
            "in": "query",
            "description": "filter by id(s) of related 'appStoreVersionLocalization'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[appCustomProductPageLocalization]",
            "in": "query",
            "description": "filter by id(s) of related 'appCustomProductPageLocalization'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appScreenshotSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshotSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "screenshotDisplayType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appScreenshots"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "locale",
                  "keywords",
                  "marketingUrl",
                  "promotionalText",
                  "supportUrl",
                  "whatsNew",
                  "appStoreVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appCustomProductPageLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPageLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "promotionalText",
                  "appCustomProductPageVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperimentTreatmentLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "appStoreVersionExperimentTreatment",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "assetToken",
                  "assetType",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appScreenshotSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appScreenshots"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appScreenshots]",
            "in": "query",
            "description": "maximum number of related appScreenshots returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppScreenshotSets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppScreenshotSetsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersionExperimentTreatments/{id}/appStoreVersionExperimentTreatmentLocalizations": {
      "get": {
        "tags": [
          "AppStoreVersionExperimentTreatments"
        ],
        "operationId": "appStoreVersionExperimentTreatments_appStoreVersionExperimentTreatmentLocalizations_getToManyRelated",
        "parameters": [
          {
            "name": "filter[locale]",
            "in": "query",
            "description": "filter by attribute 'locale'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperimentTreatmentLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "appStoreVersionExperimentTreatment",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperimentTreatments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "appIcon",
                  "appIconName",
                  "promotedDate",
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appStoreVersionExperimentTreatmentLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appScreenshotSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshotSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "screenshotDisplayType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appScreenshots"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPreviewSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviewSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "previewType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appPreviews"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersionExperimentTreatment",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appScreenshotSets]",
            "in": "query",
            "description": "maximum number of related appScreenshotSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[appPreviewSets]",
            "in": "query",
            "description": "maximum number of related appPreviewSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppStoreVersionExperimentTreatmentLocalizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v2/appStoreVersionExperiments/{id}/appStoreVersionExperimentTreatments": {
      "get": {
        "tags": [
          "AppStoreVersionExperiments"
        ],
        "operationId": "appStoreVersionExperimentsV2_appStoreVersionExperimentTreatments_getToManyRelated",
        "parameters": [
          {
            "name": "fields[appStoreVersionExperimentTreatments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "appIcon",
                  "appIconName",
                  "promotedDate",
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appStoreVersionExperimentTreatmentLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperiments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperiments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "trafficProportion",
                  "state",
                  "reviewRequired",
                  "startDate",
                  "endDate",
                  "appStoreVersion",
                  "appStoreVersionExperimentTreatments",
                  "platform",
                  "app",
                  "latestControlVersion",
                  "controlVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperimentTreatmentLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "appStoreVersionExperimentTreatment",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appStoreVersionExperimentTreatmentLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appStoreVersionExperimentTreatmentLocalizations]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperimentTreatmentLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppStoreVersionExperimentTreatments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersionExperiments/{id}/appStoreVersionExperimentTreatments": {
      "get": {
        "tags": [
          "AppStoreVersionExperiments"
        ],
        "operationId": "appStoreVersionExperiments_appStoreVersionExperimentTreatments_getToManyRelated",
        "deprecated": true,
        "parameters": [
          {
            "name": "fields[appStoreVersionExperimentTreatments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "appIcon",
                  "appIconName",
                  "promotedDate",
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appStoreVersionExperimentTreatmentLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperiments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperiments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "trafficProportion",
                  "state",
                  "reviewRequired",
                  "startDate",
                  "endDate",
                  "appStoreVersion",
                  "appStoreVersionExperimentTreatments",
                  "platform",
                  "app",
                  "latestControlVersion",
                  "controlVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperimentTreatmentLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "appStoreVersionExperimentTreatment",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appStoreVersionExperimentTreatmentLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appStoreVersionExperimentTreatmentLocalizations]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperimentTreatmentLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppStoreVersionExperimentTreatments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersionLocalizations/{id}/appPreviewSets": {
      "get": {
        "tags": [
          "AppStoreVersionLocalizations"
        ],
        "operationId": "appStoreVersionLocalizations_appPreviewSets_getToManyRelated",
        "parameters": [
          {
            "name": "filter[previewType]",
            "in": "query",
            "description": "filter by attribute 'previewType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IPHONE_67",
                  "IPHONE_61",
                  "IPHONE_65",
                  "IPHONE_58",
                  "IPHONE_55",
                  "IPHONE_47",
                  "IPHONE_40",
                  "IPHONE_35",
                  "IPAD_PRO_3GEN_129",
                  "IPAD_PRO_3GEN_11",
                  "IPAD_PRO_129",
                  "IPAD_105",
                  "IPAD_97",
                  "DESKTOP",
                  "APPLE_TV",
                  "APPLE_VISION_PRO"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[appCustomProductPageLocalization]",
            "in": "query",
            "description": "filter by id(s) of related 'appCustomProductPageLocalization'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[appStoreVersionExperimentTreatmentLocalization]",
            "in": "query",
            "description": "filter by id(s) of related 'appStoreVersionExperimentTreatmentLocalization'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPreviewSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviewSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "previewType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appPreviews"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "locale",
                  "keywords",
                  "marketingUrl",
                  "promotionalText",
                  "supportUrl",
                  "whatsNew",
                  "appStoreVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appCustomProductPageLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPageLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "promotionalText",
                  "appCustomProductPageVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperimentTreatmentLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "appStoreVersionExperimentTreatment",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPreviews]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviews",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "previewFrameTimeCode",
                  "mimeType",
                  "videoUrl",
                  "previewFrameImage",
                  "previewImage",
                  "uploadOperations",
                  "assetDeliveryState",
                  "videoDeliveryState",
                  "appPreviewSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appPreviews"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appPreviews]",
            "in": "query",
            "description": "maximum number of related appPreviews returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppPreviewSets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPreviewSetsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersionLocalizations/{id}/appScreenshotSets": {
      "get": {
        "tags": [
          "AppStoreVersionLocalizations"
        ],
        "operationId": "appStoreVersionLocalizations_appScreenshotSets_getToManyRelated",
        "parameters": [
          {
            "name": "filter[screenshotDisplayType]",
            "in": "query",
            "description": "filter by attribute 'screenshotDisplayType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "APP_IPHONE_67",
                  "APP_IPHONE_61",
                  "APP_IPHONE_65",
                  "APP_IPHONE_58",
                  "APP_IPHONE_55",
                  "APP_IPHONE_47",
                  "APP_IPHONE_40",
                  "APP_IPHONE_35",
                  "APP_IPAD_PRO_3GEN_129",
                  "APP_IPAD_PRO_3GEN_11",
                  "APP_IPAD_PRO_129",
                  "APP_IPAD_105",
                  "APP_IPAD_97",
                  "APP_DESKTOP",
                  "APP_WATCH_ULTRA",
                  "APP_WATCH_SERIES_10",
                  "APP_WATCH_SERIES_7",
                  "APP_WATCH_SERIES_4",
                  "APP_WATCH_SERIES_3",
                  "APP_APPLE_TV",
                  "APP_APPLE_VISION_PRO",
                  "IMESSAGE_APP_IPHONE_67",
                  "IMESSAGE_APP_IPHONE_61",
                  "IMESSAGE_APP_IPHONE_65",
                  "IMESSAGE_APP_IPHONE_58",
                  "IMESSAGE_APP_IPHONE_55",
                  "IMESSAGE_APP_IPHONE_47",
                  "IMESSAGE_APP_IPHONE_40",
                  "IMESSAGE_APP_IPAD_PRO_3GEN_129",
                  "IMESSAGE_APP_IPAD_PRO_3GEN_11",
                  "IMESSAGE_APP_IPAD_PRO_129",
                  "IMESSAGE_APP_IPAD_105",
                  "IMESSAGE_APP_IPAD_97"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[appCustomProductPageLocalization]",
            "in": "query",
            "description": "filter by id(s) of related 'appCustomProductPageLocalization'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[appStoreVersionExperimentTreatmentLocalization]",
            "in": "query",
            "description": "filter by id(s) of related 'appStoreVersionExperimentTreatmentLocalization'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appScreenshotSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshotSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "screenshotDisplayType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appScreenshots"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "locale",
                  "keywords",
                  "marketingUrl",
                  "promotionalText",
                  "supportUrl",
                  "whatsNew",
                  "appStoreVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appCustomProductPageLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPageLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "promotionalText",
                  "appCustomProductPageVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperimentTreatmentLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "appStoreVersionExperimentTreatment",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "assetToken",
                  "assetType",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appScreenshotSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appScreenshots"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appScreenshots]",
            "in": "query",
            "description": "maximum number of related appScreenshots returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppScreenshotSets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppScreenshotSetsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersions/{id}/ageRatingDeclaration": {
      "get": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_ageRatingDeclaration_getToOneRelated",
        "deprecated": true,
        "parameters": [
          {
            "name": "fields[ageRatingDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type ageRatingDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "alcoholTobaccoOrDrugUseOrReferences",
                  "contests",
                  "gamblingAndContests",
                  "gambling",
                  "gamblingSimulated",
                  "kidsAgeBand",
                  "lootBox",
                  "medicalOrTreatmentInformation",
                  "profanityOrCrudeHumor",
                  "sexualContentGraphicAndNudity",
                  "sexualContentOrNudity",
                  "horrorOrFearThemes",
                  "matureOrSuggestiveThemes",
                  "unrestrictedWebAccess",
                  "violenceCartoonOrFantasy",
                  "violenceRealisticProlongedGraphicOrSadistic",
                  "violenceRealistic",
                  "ageRatingOverride",
                  "koreaAgeRatingOverride",
                  "seventeenPlus"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AgeRatingDeclaration with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeRatingDeclarationWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersions/{id}/alternativeDistributionPackage": {
      "get": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_alternativeDistributionPackage_getToOneRelated",
        "parameters": [
          {
            "name": "fields[alternativeDistributionPackages]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "versions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[alternativeDistributionPackageVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackageVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "url",
                  "urlExpirationDate",
                  "version",
                  "fileChecksum",
                  "state",
                  "variants",
                  "deltas",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "versions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[versions]",
            "in": "query",
            "description": "maximum number of related versions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AlternativeDistributionPackage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeDistributionPackageResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersions/{id}/relationships/appClipDefaultExperience": {
      "get": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_appClipDefaultExperience_getToOneRelationship",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Related linkage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionAppClipDefaultExperienceLinkageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_appClipDefaultExperience_updateToOneRelationship",
        "requestBody": {
          "description": "Related linkage",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionAppClipDefaultExperienceLinkageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersions/{id}/appClipDefaultExperience": {
      "get": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_appClipDefaultExperience_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appClipDefaultExperiences]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperiences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action",
                  "appClip",
                  "releaseWithAppStoreVersion",
                  "appClipDefaultExperienceLocalizations",
                  "appClipAppStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClips]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClips",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bundleId",
                  "app",
                  "appClipDefaultExperiences",
                  "appClipAdvancedExperiences"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipDefaultExperienceLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperienceLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "subtitle",
                  "appClipDefaultExperience",
                  "appClipHeaderImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipAppStoreReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipAppStoreReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "invocationUrls",
                  "appClipDefaultExperience"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appClip",
                  "releaseWithAppStoreVersion",
                  "appClipDefaultExperienceLocalizations",
                  "appClipAppStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appClipDefaultExperienceLocalizations]",
            "in": "query",
            "description": "maximum number of related appClipDefaultExperienceLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipDefaultExperience",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipDefaultExperienceResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersions/{id}/appStoreReviewDetail": {
      "get": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_appStoreReviewDetail_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appStoreReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contactFirstName",
                  "contactLastName",
                  "contactPhone",
                  "contactEmail",
                  "demoAccountName",
                  "demoAccountPassword",
                  "demoAccountRequired",
                  "notes",
                  "appStoreVersion",
                  "appStoreReviewAttachments"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreReviewAttachments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreReviewAttachments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersion",
                  "appStoreReviewAttachments"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appStoreReviewAttachments]",
            "in": "query",
            "description": "maximum number of related appStoreReviewAttachments returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreReviewDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreReviewDetailResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersions/{id}/appStoreVersionExperiments": {
      "get": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_appStoreVersionExperiments_getToManyRelated",
        "deprecated": true,
        "parameters": [
          {
            "name": "filter[state]",
            "in": "query",
            "description": "filter by attribute 'state'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PREPARE_FOR_SUBMISSION",
                  "READY_FOR_REVIEW",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "ACCEPTED",
                  "APPROVED",
                  "REJECTED",
                  "COMPLETED",
                  "STOPPED"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperiments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperiments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "trafficProportion",
                  "state",
                  "reviewRequired",
                  "startDate",
                  "endDate",
                  "appStoreVersion",
                  "appStoreVersionExperimentTreatments"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperimentTreatments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "appIcon",
                  "appIconName",
                  "promotedDate",
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appStoreVersionExperimentTreatmentLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersion",
                  "appStoreVersionExperimentTreatments"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appStoreVersionExperimentTreatments]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperimentTreatments returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppStoreVersionExperiments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersions/{id}/appStoreVersionExperimentsV2": {
      "get": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_appStoreVersionExperimentsV2_getToManyRelated",
        "parameters": [
          {
            "name": "filter[state]",
            "in": "query",
            "description": "filter by attribute 'state'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PREPARE_FOR_SUBMISSION",
                  "READY_FOR_REVIEW",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "ACCEPTED",
                  "APPROVED",
                  "REJECTED",
                  "COMPLETED",
                  "STOPPED"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperiments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperiments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "trafficProportion",
                  "state",
                  "reviewRequired",
                  "startDate",
                  "endDate",
                  "app",
                  "latestControlVersion",
                  "controlVersions",
                  "appStoreVersionExperimentTreatments"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperimentTreatments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "appIcon",
                  "appIconName",
                  "promotedDate",
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appStoreVersionExperimentTreatmentLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "latestControlVersion",
                  "controlVersions",
                  "appStoreVersionExperimentTreatments"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[controlVersions]",
            "in": "query",
            "description": "maximum number of related controlVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[appStoreVersionExperimentTreatments]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperimentTreatments returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppStoreVersionExperiments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentsV2Response"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersions/{id}/appStoreVersionLocalizations": {
      "get": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_appStoreVersionLocalizations_getToManyRelated",
        "parameters": [
          {
            "name": "filter[locale]",
            "in": "query",
            "description": "filter by attribute 'locale'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "locale",
                  "keywords",
                  "marketingUrl",
                  "promotionalText",
                  "supportUrl",
                  "whatsNew",
                  "appStoreVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appScreenshotSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appScreenshotSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "screenshotDisplayType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appScreenshots"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPreviewSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPreviewSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "previewType",
                  "appStoreVersionLocalization",
                  "appCustomProductPageLocalization",
                  "appStoreVersionExperimentTreatmentLocalization",
                  "appPreviews"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appScreenshotSets]",
            "in": "query",
            "description": "maximum number of related appScreenshotSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[appPreviewSets]",
            "in": "query",
            "description": "maximum number of related appPreviewSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppStoreVersionLocalizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersions/{id}/appStoreVersionPhasedRelease": {
      "get": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_appStoreVersionPhasedRelease_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appStoreVersionPhasedReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionPhasedReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "phasedReleaseState",
                  "startDate",
                  "totalPauseDuration",
                  "currentDayNumber"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersionPhasedRelease with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionPhasedReleaseWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersions/{id}/appStoreVersionSubmission": {
      "get": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_appStoreVersionSubmission_getToOneRelated",
        "deprecated": true,
        "parameters": [
          {
            "name": "fields[appStoreVersionSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersionSubmission",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionSubmissionResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersions/{id}/relationships/build": {
      "get": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_build_getToOneRelationship",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Related linkage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionBuildLinkageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_build_updateToOneRelationship",
        "requestBody": {
          "description": "Related linkage",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppStoreVersionBuildLinkageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersions/{id}/build": {
      "get": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_build_getToOneRelated",
        "parameters": [
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single Build with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersions/{id}/customerReviews": {
      "get": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_customerReviews_getToManyRelated",
        "parameters": [
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by attribute 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ABW",
                  "AFG",
                  "AGO",
                  "AIA",
                  "ALB",
                  "AND",
                  "ANT",
                  "ARE",
                  "ARG",
                  "ARM",
                  "ASM",
                  "ATG",
                  "AUS",
                  "AUT",
                  "AZE",
                  "BDI",
                  "BEL",
                  "BEN",
                  "BES",
                  "BFA",
                  "BGD",
                  "BGR",
                  "BHR",
                  "BHS",
                  "BIH",
                  "BLR",
                  "BLZ",
                  "BMU",
                  "BOL",
                  "BRA",
                  "BRB",
                  "BRN",
                  "BTN",
                  "BWA",
                  "CAF",
                  "CAN",
                  "CHE",
                  "CHL",
                  "CHN",
                  "CIV",
                  "CMR",
                  "COD",
                  "COG",
                  "COK",
                  "COL",
                  "COM",
                  "CPV",
                  "CRI",
                  "CUB",
                  "CUW",
                  "CXR",
                  "CYM",
                  "CYP",
                  "CZE",
                  "DEU",
                  "DJI",
                  "DMA",
                  "DNK",
                  "DOM",
                  "DZA",
                  "ECU",
                  "EGY",
                  "ERI",
                  "ESP",
                  "EST",
                  "ETH",
                  "FIN",
                  "FJI",
                  "FLK",
                  "FRA",
                  "FRO",
                  "FSM",
                  "GAB",
                  "GBR",
                  "GEO",
                  "GGY",
                  "GHA",
                  "GIB",
                  "GIN",
                  "GLP",
                  "GMB",
                  "GNB",
                  "GNQ",
                  "GRC",
                  "GRD",
                  "GRL",
                  "GTM",
                  "GUF",
                  "GUM",
                  "GUY",
                  "HKG",
                  "HND",
                  "HRV",
                  "HTI",
                  "HUN",
                  "IDN",
                  "IMN",
                  "IND",
                  "IRL",
                  "IRQ",
                  "ISL",
                  "ISR",
                  "ITA",
                  "JAM",
                  "JEY",
                  "JOR",
                  "JPN",
                  "KAZ",
                  "KEN",
                  "KGZ",
                  "KHM",
                  "KIR",
                  "KNA",
                  "KOR",
                  "KWT",
                  "LAO",
                  "LBN",
                  "LBR",
                  "LBY",
                  "LCA",
                  "LIE",
                  "LKA",
                  "LSO",
                  "LTU",
                  "LUX",
                  "LVA",
                  "MAC",
                  "MAR",
                  "MCO",
                  "MDA",
                  "MDG",
                  "MDV",
                  "MEX",
                  "MHL",
                  "MKD",
                  "MLI",
                  "MLT",
                  "MMR",
                  "MNE",
                  "MNG",
                  "MNP",
                  "MOZ",
                  "MRT",
                  "MSR",
                  "MTQ",
                  "MUS",
                  "MWI",
                  "MYS",
                  "MYT",
                  "NAM",
                  "NCL",
                  "NER",
                  "NFK",
                  "NGA",
                  "NIC",
                  "NIU",
                  "NLD",
                  "NOR",
                  "NPL",
                  "NRU",
                  "NZL",
                  "OMN",
                  "PAK",
                  "PAN",
                  "PER",
                  "PHL",
                  "PLW",
                  "PNG",
                  "POL",
                  "PRI",
                  "PRT",
                  "PRY",
                  "PSE",
                  "PYF",
                  "QAT",
                  "REU",
                  "ROU",
                  "RUS",
                  "RWA",
                  "SAU",
                  "SEN",
                  "SGP",
                  "SHN",
                  "SLB",
                  "SLE",
                  "SLV",
                  "SMR",
                  "SOM",
                  "SPM",
                  "SRB",
                  "SSD",
                  "STP",
                  "SUR",
                  "SVK",
                  "SVN",
                  "SWE",
                  "SWZ",
                  "SXM",
                  "SYC",
                  "TCA",
                  "TCD",
                  "TGO",
                  "THA",
                  "TJK",
                  "TKM",
                  "TLS",
                  "TON",
                  "TTO",
                  "TUN",
                  "TUR",
                  "TUV",
                  "TWN",
                  "TZA",
                  "UGA",
                  "UKR",
                  "UMI",
                  "URY",
                  "USA",
                  "UZB",
                  "VAT",
                  "VCT",
                  "VEN",
                  "VGB",
                  "VIR",
                  "VNM",
                  "VUT",
                  "WLF",
                  "WSM",
                  "YEM",
                  "ZAF",
                  "ZMB",
                  "ZWE"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[rating]",
            "in": "query",
            "description": "filter by attribute 'rating'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "exists[publishedResponse]",
            "in": "query",
            "description": "filter by publishedResponse",
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "rating",
                  "-rating",
                  "createdDate",
                  "-createdDate"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[customerReviews]",
            "in": "query",
            "description": "the fields to include for returned resources of type customerReviews",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "rating",
                  "title",
                  "body",
                  "reviewerNickname",
                  "createdDate",
                  "territory",
                  "response"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[customerReviewResponses]",
            "in": "query",
            "description": "the fields to include for returned resources of type customerReviewResponses",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "responseBody",
                  "lastModifiedDate",
                  "state",
                  "review"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "response"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of CustomerReviews",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReviewsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersions/{id}/gameCenterAppVersion": {
      "get": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_gameCenterAppVersion_getToOneRelated",
        "parameters": [
          {
            "name": "fields[gameCenterAppVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAppVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "enabled",
                  "compatibilityVersions",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "compatibilityVersions",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[compatibilityVersions]",
            "in": "query",
            "description": "maximum number of related compatibilityVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterAppVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAppVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/appStoreVersions/{id}/routingAppCoverage": {
      "get": {
        "tags": [
          "AppStoreVersions"
        ],
        "operationId": "appStoreVersions_routingAppCoverage_getToOneRelated",
        "parameters": [
          {
            "name": "fields[routingAppCoverages]",
            "in": "query",
            "description": "the fields to include for returned resources of type routingAppCoverages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single RoutingAppCoverage with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingAppCoverageWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/alternativeDistributionKey": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_alternativeDistributionKey_getToOneRelated",
        "parameters": [
          {
            "name": "fields[alternativeDistributionKeys]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionKeys",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "publicKey"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AlternativeDistributionKey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeDistributionKeyResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/analyticsReportRequests": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_analyticsReportRequests_getToManyRelated",
        "parameters": [
          {
            "name": "filter[accessType]",
            "in": "query",
            "description": "filter by attribute 'accessType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ONE_TIME_SNAPSHOT",
                  "ONGOING"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[analyticsReportRequests]",
            "in": "query",
            "description": "the fields to include for returned resources of type analyticsReportRequests",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "accessType",
                  "stoppedDueToInactivity",
                  "reports"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[analyticsReports]",
            "in": "query",
            "description": "the fields to include for returned resources of type analyticsReports",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "category",
                  "instances"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "reports"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[reports]",
            "in": "query",
            "description": "maximum number of related reports returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AnalyticsReportRequests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsReportRequestsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/appAvailabilityV2": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_appAvailabilityV2_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appAvailabilities]",
            "in": "query",
            "description": "the fields to include for returned resources of type appAvailabilities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "availableInNewTerritories",
                  "territoryAvailabilities"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territoryAvailabilities]",
            "in": "query",
            "description": "the fields to include for returned resources of type territoryAvailabilities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "available",
                  "releaseDate",
                  "preOrderEnabled",
                  "preOrderPublishDate",
                  "contentStatuses",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territoryAvailabilities"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[territoryAvailabilities]",
            "in": "query",
            "description": "maximum number of related territoryAvailabilities returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppAvailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAvailabilityV2Response"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/appClips": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_appClips_getToManyRelated",
        "parameters": [
          {
            "name": "filter[bundleId]",
            "in": "query",
            "description": "filter by attribute 'bundleId'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClips]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClips",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bundleId",
                  "app",
                  "appClipDefaultExperiences",
                  "appClipAdvancedExperiences"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipDefaultExperiences]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperiences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action",
                  "appClip",
                  "releaseWithAppStoreVersion",
                  "appClipDefaultExperienceLocalizations",
                  "appClipAppStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "appClipDefaultExperiences"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appClipDefaultExperiences]",
            "in": "query",
            "description": "maximum number of related appClipDefaultExperiences returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppClips",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/appCustomProductPages": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_appCustomProductPages_getToManyRelated",
        "parameters": [
          {
            "name": "filter[visible]",
            "in": "query",
            "description": "filter by attribute 'visible'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appCustomProductPages]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "url",
                  "visible",
                  "app",
                  "appCustomProductPageVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appCustomProductPageVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPageVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "state",
                  "deepLink",
                  "appCustomProductPage",
                  "appCustomProductPageLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "appCustomProductPageVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appCustomProductPageVersions]",
            "in": "query",
            "description": "maximum number of related appCustomProductPageVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppCustomProductPages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCustomProductPagesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/appEncryptionDeclarations": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_appEncryptionDeclarations_getToManyRelated",
        "parameters": [
          {
            "name": "filter[platform]",
            "in": "query",
            "description": "filter by attribute 'platform'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS",
                  "MAC_OS",
                  "TV_OS",
                  "VISION_OS"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[builds]",
            "in": "query",
            "description": "filter by id(s) of related 'builds'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appEncryptionDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEncryptionDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appDescription",
                  "createdDate",
                  "usesEncryption",
                  "exempt",
                  "containsProprietaryCryptography",
                  "containsThirdPartyCryptography",
                  "availableOnFrenchStore",
                  "platform",
                  "uploadedDate",
                  "documentUrl",
                  "documentName",
                  "documentType",
                  "appEncryptionDeclarationState",
                  "codeValue",
                  "app",
                  "builds",
                  "appEncryptionDeclarationDocument"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appEncryptionDeclarationDocuments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEncryptionDeclarationDocuments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "assetToken",
                  "downloadUrl",
                  "sourceFileChecksum",
                  "uploadOperations",
                  "assetDeliveryState"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "builds",
                  "appEncryptionDeclarationDocument"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[builds]",
            "in": "query",
            "description": "maximum number of related builds returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppEncryptionDeclarations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEncryptionDeclarationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/appEvents": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_appEvents_getToManyRelated",
        "parameters": [
          {
            "name": "filter[eventState]",
            "in": "query",
            "description": "filter by attribute 'eventState'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DRAFT",
                  "READY_FOR_REVIEW",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "REJECTED",
                  "ACCEPTED",
                  "APPROVED",
                  "PUBLISHED",
                  "PAST",
                  "ARCHIVED"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appEvents]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEvents",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "badge",
                  "eventState",
                  "deepLink",
                  "purchaseRequirement",
                  "primaryLocale",
                  "priority",
                  "purpose",
                  "territorySchedules",
                  "archivedTerritorySchedules",
                  "localizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appEventLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEventLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "shortDescription",
                  "longDescription",
                  "appEvent",
                  "appEventScreenshots",
                  "appEventVideoClips"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "localizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppEvents",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEventsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/appInfos": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_appInfos_getToManyRelated",
        "parameters": [
          {
            "name": "fields[appInfos]",
            "in": "query",
            "description": "the fields to include for returned resources of type appInfos",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreState",
                  "state",
                  "appStoreAgeRating",
                  "australiaAgeRating",
                  "brazilAgeRating",
                  "brazilAgeRatingV2",
                  "franceAgeRating",
                  "koreaAgeRating",
                  "kidsAgeBand",
                  "app",
                  "ageRatingDeclaration",
                  "appInfoLocalizations",
                  "primaryCategory",
                  "primarySubcategoryOne",
                  "primarySubcategoryTwo",
                  "secondaryCategory",
                  "secondarySubcategoryOne",
                  "secondarySubcategoryTwo"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ageRatingDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type ageRatingDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "alcoholTobaccoOrDrugUseOrReferences",
                  "contests",
                  "gamblingAndContests",
                  "gambling",
                  "gamblingSimulated",
                  "kidsAgeBand",
                  "lootBox",
                  "medicalOrTreatmentInformation",
                  "profanityOrCrudeHumor",
                  "sexualContentGraphicAndNudity",
                  "sexualContentOrNudity",
                  "horrorOrFearThemes",
                  "matureOrSuggestiveThemes",
                  "unrestrictedWebAccess",
                  "violenceCartoonOrFantasy",
                  "violenceRealisticProlongedGraphicOrSadistic",
                  "violenceRealistic",
                  "ageRatingOverride",
                  "koreaAgeRatingOverride",
                  "seventeenPlus"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appInfoLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appInfoLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "subtitle",
                  "privacyPolicyUrl",
                  "privacyChoicesUrl",
                  "privacyPolicyText",
                  "appInfo"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appCategories]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCategories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platforms",
                  "subcategories",
                  "parent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "ageRatingDeclaration",
                  "appInfoLocalizations",
                  "primaryCategory",
                  "primarySubcategoryOne",
                  "primarySubcategoryTwo",
                  "secondaryCategory",
                  "secondarySubcategoryOne",
                  "secondarySubcategoryTwo"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appInfoLocalizations]",
            "in": "query",
            "description": "maximum number of related appInfoLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppInfos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppInfosResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/appPricePoints": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_appPricePoints_getToManyRelated",
        "parameters": [
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by id(s) of related 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "app",
                  "equalizations",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppPricePoints",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPricePointsV3Response"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/csv"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/appPriceSchedule": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_appPriceSchedule_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appPriceSchedules]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPriceSchedules",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "baseTerritory",
                  "manualPrices",
                  "automaticPrices"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appPrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type appPrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "manual",
                  "startDate",
                  "endDate",
                  "appPricePoint",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "baseTerritory",
                  "manualPrices",
                  "automaticPrices"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[manualPrices]",
            "in": "query",
            "description": "maximum number of related manualPrices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[automaticPrices]",
            "in": "query",
            "description": "maximum number of related automaticPrices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppPriceSchedule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPriceScheduleResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/appStoreVersionExperimentsV2": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_appStoreVersionExperimentsV2_getToManyRelated",
        "parameters": [
          {
            "name": "filter[state]",
            "in": "query",
            "description": "filter by attribute 'state'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PREPARE_FOR_SUBMISSION",
                  "READY_FOR_REVIEW",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "ACCEPTED",
                  "APPROVED",
                  "REJECTED",
                  "COMPLETED",
                  "STOPPED"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperiments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperiments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "trafficProportion",
                  "state",
                  "reviewRequired",
                  "startDate",
                  "endDate",
                  "app",
                  "latestControlVersion",
                  "controlVersions",
                  "appStoreVersionExperimentTreatments"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperimentTreatments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperimentTreatments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "appIcon",
                  "appIconName",
                  "promotedDate",
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appStoreVersionExperimentTreatmentLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "latestControlVersion",
                  "controlVersions",
                  "appStoreVersionExperimentTreatments"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[controlVersions]",
            "in": "query",
            "description": "maximum number of related controlVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[appStoreVersionExperimentTreatments]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperimentTreatments returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppStoreVersionExperiments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentsV2Response"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/appStoreVersions": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_appStoreVersions_getToManyRelated",
        "parameters": [
          {
            "name": "filter[platform]",
            "in": "query",
            "description": "filter by attribute 'platform'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS",
                  "MAC_OS",
                  "TV_OS",
                  "VISION_OS"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[versionString]",
            "in": "query",
            "description": "filter by attribute 'versionString'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[appStoreState]",
            "in": "query",
            "description": "filter by attribute 'appStoreState'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACCEPTED",
                  "DEVELOPER_REMOVED_FROM_SALE",
                  "DEVELOPER_REJECTED",
                  "IN_REVIEW",
                  "INVALID_BINARY",
                  "METADATA_REJECTED",
                  "PENDING_APPLE_RELEASE",
                  "PENDING_CONTRACT",
                  "PENDING_DEVELOPER_RELEASE",
                  "PREPARE_FOR_SUBMISSION",
                  "PREORDER_READY_FOR_SALE",
                  "PROCESSING_FOR_APP_STORE",
                  "READY_FOR_REVIEW",
                  "READY_FOR_SALE",
                  "REJECTED",
                  "REMOVED_FROM_SALE",
                  "WAITING_FOR_EXPORT_COMPLIANCE",
                  "WAITING_FOR_REVIEW",
                  "REPLACED_WITH_NEW_VERSION",
                  "NOT_APPLICABLE"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[appVersionState]",
            "in": "query",
            "description": "filter by attribute 'appVersionState'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACCEPTED",
                  "DEVELOPER_REJECTED",
                  "IN_REVIEW",
                  "INVALID_BINARY",
                  "METADATA_REJECTED",
                  "PENDING_APPLE_RELEASE",
                  "PENDING_DEVELOPER_RELEASE",
                  "PREPARE_FOR_SUBMISSION",
                  "PROCESSING_FOR_DISTRIBUTION",
                  "READY_FOR_DISTRIBUTION",
                  "READY_FOR_REVIEW",
                  "REJECTED",
                  "REPLACED_WITH_NEW_VERSION",
                  "WAITING_FOR_EXPORT_COMPLIANCE",
                  "WAITING_FOR_REVIEW"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ageRatingDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type ageRatingDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "alcoholTobaccoOrDrugUseOrReferences",
                  "contests",
                  "gamblingAndContests",
                  "gambling",
                  "gamblingSimulated",
                  "kidsAgeBand",
                  "lootBox",
                  "medicalOrTreatmentInformation",
                  "profanityOrCrudeHumor",
                  "sexualContentGraphicAndNudity",
                  "sexualContentOrNudity",
                  "horrorOrFearThemes",
                  "matureOrSuggestiveThemes",
                  "unrestrictedWebAccess",
                  "violenceCartoonOrFantasy",
                  "violenceRealisticProlongedGraphicOrSadistic",
                  "violenceRealistic",
                  "ageRatingOverride",
                  "koreaAgeRatingOverride",
                  "seventeenPlus"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "locale",
                  "keywords",
                  "marketingUrl",
                  "promotionalText",
                  "supportUrl",
                  "whatsNew",
                  "appStoreVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionPhasedReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionPhasedReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "phasedReleaseState",
                  "startDate",
                  "totalPauseDuration",
                  "currentDayNumber"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAppVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAppVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "enabled",
                  "compatibilityVersions",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[routingAppCoverages]",
            "in": "query",
            "description": "the fields to include for returned resources of type routingAppCoverages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contactFirstName",
                  "contactLastName",
                  "contactPhone",
                  "contactEmail",
                  "demoAccountName",
                  "demoAccountPassword",
                  "demoAccountRequired",
                  "notes",
                  "appStoreVersion",
                  "appStoreReviewAttachments"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipDefaultExperiences]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperiences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action",
                  "appClip",
                  "releaseWithAppStoreVersion",
                  "appClipDefaultExperienceLocalizations",
                  "appClipAppStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperiments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperiments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "trafficProportion",
                  "state",
                  "reviewRequired",
                  "startDate",
                  "endDate",
                  "appStoreVersion",
                  "appStoreVersionExperimentTreatments",
                  "platform",
                  "app",
                  "latestControlVersion",
                  "controlVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[alternativeDistributionPackages]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "versions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appStoreVersionLocalizations]",
            "in": "query",
            "description": "maximum number of related appStoreVersionLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[appStoreVersionExperiments]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperiments returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "deprecated": true
          },
          {
            "name": "limit[appStoreVersionExperimentsV2]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperimentsV2 returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of AppStoreVersions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/betaAppLocalizations": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_betaAppLocalizations_getToManyRelated",
        "parameters": [
          {
            "name": "fields[betaAppLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "feedbackEmail",
                  "marketingUrl",
                  "privacyPolicyUrl",
                  "tvOsPrivacyPolicy",
                  "description",
                  "locale",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BetaAppLocalizations with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppLocalizationsWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/betaAppReviewDetail": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_betaAppReviewDetail_getToOneRelated",
        "parameters": [
          {
            "name": "fields[betaAppReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contactFirstName",
                  "contactLastName",
                  "contactPhone",
                  "contactEmail",
                  "demoAccountName",
                  "demoAccountPassword",
                  "demoAccountRequired",
                  "notes",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaAppReviewDetail with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppReviewDetailWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/betaGroups": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_betaGroups_getToManyRelated",
        "parameters": [
          {
            "name": "fields[betaGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "isInternalGroup",
                  "hasAccessToAllBuilds",
                  "publicLinkEnabled",
                  "publicLinkId",
                  "publicLinkLimitEnabled",
                  "publicLinkLimit",
                  "publicLink",
                  "feedbackEnabled",
                  "iosBuildsAvailableForAppleSiliconMac",
                  "app",
                  "builds",
                  "betaTesters"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BetaGroups with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaGroupsWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/betaLicenseAgreement": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_betaLicenseAgreement_getToOneRelated",
        "parameters": [
          {
            "name": "fields[betaLicenseAgreements]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaLicenseAgreements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "agreementText",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaLicenseAgreement with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaLicenseAgreementWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/relationships/betaTesters": {
      "delete": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_betaTesters_deleteToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppBetaTestersLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for future completion"
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/builds": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_builds_getToManyRelated",
        "parameters": [
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Builds with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildsWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/ciProduct": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_ciProduct_getToOneRelated",
        "parameters": [
          {
            "name": "fields[ciProducts]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciProducts",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "productType",
                  "app",
                  "bundleId",
                  "workflows",
                  "primaryRepositories",
                  "additionalRepositories",
                  "buildRuns"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[bundleIds]",
            "in": "query",
            "description": "the fields to include for returned resources of type bundleIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "identifier",
                  "seedId",
                  "profiles",
                  "bundleIdCapabilities",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmRepositories]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmRepositories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lastAccessedDate",
                  "httpCloneUrl",
                  "sshCloneUrl",
                  "ownerName",
                  "repositoryName",
                  "scmProvider",
                  "defaultBranch",
                  "gitReferences",
                  "pullRequests"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "bundleId",
                  "primaryRepositories"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[primaryRepositories]",
            "in": "query",
            "description": "maximum number of related primaryRepositories returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single CiProduct",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiProductResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/customerReviews": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_customerReviews_getToManyRelated",
        "parameters": [
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by attribute 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ABW",
                  "AFG",
                  "AGO",
                  "AIA",
                  "ALB",
                  "AND",
                  "ANT",
                  "ARE",
                  "ARG",
                  "ARM",
                  "ASM",
                  "ATG",
                  "AUS",
                  "AUT",
                  "AZE",
                  "BDI",
                  "BEL",
                  "BEN",
                  "BES",
                  "BFA",
                  "BGD",
                  "BGR",
                  "BHR",
                  "BHS",
                  "BIH",
                  "BLR",
                  "BLZ",
                  "BMU",
                  "BOL",
                  "BRA",
                  "BRB",
                  "BRN",
                  "BTN",
                  "BWA",
                  "CAF",
                  "CAN",
                  "CHE",
                  "CHL",
                  "CHN",
                  "CIV",
                  "CMR",
                  "COD",
                  "COG",
                  "COK",
                  "COL",
                  "COM",
                  "CPV",
                  "CRI",
                  "CUB",
                  "CUW",
                  "CXR",
                  "CYM",
                  "CYP",
                  "CZE",
                  "DEU",
                  "DJI",
                  "DMA",
                  "DNK",
                  "DOM",
                  "DZA",
                  "ECU",
                  "EGY",
                  "ERI",
                  "ESP",
                  "EST",
                  "ETH",
                  "FIN",
                  "FJI",
                  "FLK",
                  "FRA",
                  "FRO",
                  "FSM",
                  "GAB",
                  "GBR",
                  "GEO",
                  "GGY",
                  "GHA",
                  "GIB",
                  "GIN",
                  "GLP",
                  "GMB",
                  "GNB",
                  "GNQ",
                  "GRC",
                  "GRD",
                  "GRL",
                  "GTM",
                  "GUF",
                  "GUM",
                  "GUY",
                  "HKG",
                  "HND",
                  "HRV",
                  "HTI",
                  "HUN",
                  "IDN",
                  "IMN",
                  "IND",
                  "IRL",
                  "IRQ",
                  "ISL",
                  "ISR",
                  "ITA",
                  "JAM",
                  "JEY",
                  "JOR",
                  "JPN",
                  "KAZ",
                  "KEN",
                  "KGZ",
                  "KHM",
                  "KIR",
                  "KNA",
                  "KOR",
                  "KWT",
                  "LAO",
                  "LBN",
                  "LBR",
                  "LBY",
                  "LCA",
                  "LIE",
                  "LKA",
                  "LSO",
                  "LTU",
                  "LUX",
                  "LVA",
                  "MAC",
                  "MAR",
                  "MCO",
                  "MDA",
                  "MDG",
                  "MDV",
                  "MEX",
                  "MHL",
                  "MKD",
                  "MLI",
                  "MLT",
                  "MMR",
                  "MNE",
                  "MNG",
                  "MNP",
                  "MOZ",
                  "MRT",
                  "MSR",
                  "MTQ",
                  "MUS",
                  "MWI",
                  "MYS",
                  "MYT",
                  "NAM",
                  "NCL",
                  "NER",
                  "NFK",
                  "NGA",
                  "NIC",
                  "NIU",
                  "NLD",
                  "NOR",
                  "NPL",
                  "NRU",
                  "NZL",
                  "OMN",
                  "PAK",
                  "PAN",
                  "PER",
                  "PHL",
                  "PLW",
                  "PNG",
                  "POL",
                  "PRI",
                  "PRT",
                  "PRY",
                  "PSE",
                  "PYF",
                  "QAT",
                  "REU",
                  "ROU",
                  "RUS",
                  "RWA",
                  "SAU",
                  "SEN",
                  "SGP",
                  "SHN",
                  "SLB",
                  "SLE",
                  "SLV",
                  "SMR",
                  "SOM",
                  "SPM",
                  "SRB",
                  "SSD",
                  "STP",
                  "SUR",
                  "SVK",
                  "SVN",
                  "SWE",
                  "SWZ",
                  "SXM",
                  "SYC",
                  "TCA",
                  "TCD",
                  "TGO",
                  "THA",
                  "TJK",
                  "TKM",
                  "TLS",
                  "TON",
                  "TTO",
                  "TUN",
                  "TUR",
                  "TUV",
                  "TWN",
                  "TZA",
                  "UGA",
                  "UKR",
                  "UMI",
                  "URY",
                  "USA",
                  "UZB",
                  "VAT",
                  "VCT",
                  "VEN",
                  "VGB",
                  "VIR",
                  "VNM",
                  "VUT",
                  "WLF",
                  "WSM",
                  "YEM",
                  "ZAF",
                  "ZMB",
                  "ZWE"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[rating]",
            "in": "query",
            "description": "filter by attribute 'rating'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "exists[publishedResponse]",
            "in": "query",
            "description": "filter by publishedResponse",
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "rating",
                  "-rating",
                  "createdDate",
                  "-createdDate"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[customerReviews]",
            "in": "query",
            "description": "the fields to include for returned resources of type customerReviews",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "rating",
                  "title",
                  "body",
                  "reviewerNickname",
                  "createdDate",
                  "territory",
                  "response"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[customerReviewResponses]",
            "in": "query",
            "description": "the fields to include for returned resources of type customerReviewResponses",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "responseBody",
                  "lastModifiedDate",
                  "state",
                  "review"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "response"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of CustomerReviews",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReviewsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/endUserLicenseAgreement": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_endUserLicenseAgreement_getToOneRelated",
        "parameters": [
          {
            "name": "fields[endUserLicenseAgreements]",
            "in": "query",
            "description": "the fields to include for returned resources of type endUserLicenseAgreements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "agreementText",
                  "app",
                  "territories"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single EndUserLicenseAgreement with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndUserLicenseAgreementWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/gameCenterDetail": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_gameCenterDetail_getToOneRelated",
        "parameters": [
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAppVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAppVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "enabled",
                  "compatibilityVersions",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievements]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "points",
                  "showBeforeEarned",
                  "repeatable",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievementReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterAchievement"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[gameCenterAppVersions]",
            "in": "query",
            "description": "maximum number of related gameCenterAppVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[gameCenterLeaderboards]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboards returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboardSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[gameCenterAchievements]",
            "in": "query",
            "description": "maximum number of related gameCenterAchievements returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[achievementReleases]",
            "in": "query",
            "description": "maximum number of related achievementReleases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[leaderboardReleases]",
            "in": "query",
            "description": "maximum number of related leaderboardReleases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[leaderboardSetReleases]",
            "in": "query",
            "description": "maximum number of related leaderboardSetReleases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterDetailResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/gameCenterEnabledVersions": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_gameCenterEnabledVersions_getToManyRelated",
        "deprecated": true,
        "parameters": [
          {
            "name": "filter[platform]",
            "in": "query",
            "description": "filter by attribute 'platform'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS",
                  "MAC_OS",
                  "TV_OS",
                  "VISION_OS"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[versionString]",
            "in": "query",
            "description": "filter by attribute 'versionString'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "versionString",
                  "-versionString"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterEnabledVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterEnabledVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "iconAsset",
                  "compatibleVersions",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "compatibleVersions",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[compatibleVersions]",
            "in": "query",
            "description": "maximum number of related compatibleVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "deprecated": true
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterEnabledVersions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterEnabledVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/inAppPurchases": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_inAppPurchases_getToManyRelated",
        "deprecated": true,
        "parameters": [
          {
            "name": "filter[inAppPurchaseType]",
            "in": "query",
            "description": "filter by attribute 'inAppPurchaseType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "AUTOMATICALLY_RENEWABLE_SUBSCRIPTION",
                  "NON_CONSUMABLE",
                  "CONSUMABLE",
                  "NON_RENEWING_SUBSCRIPTION",
                  "FREE_SUBSCRIPTION"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[canBeSubmitted]",
            "in": "query",
            "description": "filter by canBeSubmitted",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "-referenceName",
                  "productId",
                  "-productId",
                  "inAppPurchaseType",
                  "-inAppPurchaseType"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "productId",
                  "inAppPurchaseType",
                  "state",
                  "apps"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "apps"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[apps]",
            "in": "query",
            "description": "maximum number of related apps returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of InAppPurchases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchasesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/inAppPurchasesV2": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_inAppPurchasesV2_getToManyRelated",
        "parameters": [
          {
            "name": "filter[productId]",
            "in": "query",
            "description": "filter by attribute 'productId'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[name]",
            "in": "query",
            "description": "filter by attribute 'name'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[state]",
            "in": "query",
            "description": "filter by attribute 'state'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "MISSING_METADATA",
                  "WAITING_FOR_UPLOAD",
                  "PROCESSING_CONTENT",
                  "READY_TO_SUBMIT",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "DEVELOPER_ACTION_NEEDED",
                  "PENDING_BINARY_APPROVAL",
                  "APPROVED",
                  "DEVELOPER_REMOVED_FROM_SALE",
                  "REMOVED_FROM_SALE",
                  "REJECTED"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[inAppPurchaseType]",
            "in": "query",
            "description": "filter by attribute 'inAppPurchaseType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "CONSUMABLE",
                  "NON_CONSUMABLE",
                  "NON_RENEWING_SUBSCRIPTION"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "-name",
                  "inAppPurchaseType",
                  "-inAppPurchaseType"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "inAppPurchaseType",
                  "state",
                  "reviewNote",
                  "familySharable",
                  "contentHosting",
                  "inAppPurchaseLocalizations",
                  "pricePoints",
                  "content",
                  "appStoreReviewScreenshot",
                  "promotedPurchase",
                  "iapPriceSchedule",
                  "inAppPurchaseAvailability",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchaseLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "locale",
                  "description",
                  "state",
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchaseContents]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseContents",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileName",
                  "fileSize",
                  "url",
                  "lastModifiedDate",
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchaseAppStoreReviewScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseAppStoreReviewScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "assetToken",
                  "assetType",
                  "uploadOperations",
                  "assetDeliveryState",
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[promotedPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "visibleForAllUsers",
                  "enabled",
                  "state",
                  "inAppPurchaseV2",
                  "subscription",
                  "promotionImages"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchasePriceSchedules]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchasePriceSchedules",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "baseTerritory",
                  "manualPrices",
                  "automaticPrices"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchaseAvailabilities]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseAvailabilities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "availableInNewTerritories",
                  "availableTerritories"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchaseImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "assetToken",
                  "imageAsset",
                  "uploadOperations",
                  "state",
                  "inAppPurchase"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inAppPurchaseLocalizations",
                  "content",
                  "appStoreReviewScreenshot",
                  "promotedPurchase",
                  "iapPriceSchedule",
                  "inAppPurchaseAvailability",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[inAppPurchaseLocalizations]",
            "in": "query",
            "description": "maximum number of related inAppPurchaseLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[images]",
            "in": "query",
            "description": "maximum number of related images returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of InAppPurchases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchasesV2Response"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/marketplaceSearchDetail": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_marketplaceSearchDetail_getToOneRelated",
        "parameters": [
          {
            "name": "fields[marketplaceSearchDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type marketplaceSearchDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "catalogUrl"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single MarketplaceSearchDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceSearchDetailResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/perfPowerMetrics": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_perfPowerMetrics_getToManyRelated",
        "parameters": [
          {
            "name": "filter[platform]",
            "in": "query",
            "description": "filter by attribute 'platform'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[metricType]",
            "in": "query",
            "description": "filter by attribute 'metricType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DISK",
                  "HANG",
                  "BATTERY",
                  "LAUNCH",
                  "MEMORY",
                  "ANIMATION",
                  "TERMINATION"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[deviceType]",
            "in": "query",
            "description": "filter by attribute 'deviceType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of PerfPowerMetrics",
            "content": {
              "application/vnd.apple.xcode-metrics+json": {
                "schema": {
                  "$ref": "#/components/schemas/xcodeMetrics"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/preReleaseVersions": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_preReleaseVersions_getToManyRelated",
        "parameters": [
          {
            "name": "fields[preReleaseVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type preReleaseVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "platform",
                  "builds",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of PreReleaseVersions with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreReleaseVersionsWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/relationships/promotedPurchases": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_promotedPurchases_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPromotedPurchasesLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_promotedPurchases_replaceToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPromotedPurchasesLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/promotedPurchases": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_promotedPurchases_getToManyRelated",
        "parameters": [
          {
            "name": "fields[promotedPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "visibleForAllUsers",
                  "enabled",
                  "state",
                  "inAppPurchaseV2",
                  "subscription",
                  "promotionImages"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "inAppPurchaseType",
                  "state",
                  "reviewNote",
                  "familySharable",
                  "contentHosting",
                  "inAppPurchaseLocalizations",
                  "pricePoints",
                  "content",
                  "appStoreReviewScreenshot",
                  "promotedPurchase",
                  "iapPriceSchedule",
                  "inAppPurchaseAvailability",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptions]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "familySharable",
                  "state",
                  "subscriptionPeriod",
                  "reviewNote",
                  "groupLevel",
                  "subscriptionLocalizations",
                  "appStoreReviewScreenshot",
                  "group",
                  "introductoryOffers",
                  "promotionalOffers",
                  "offerCodes",
                  "prices",
                  "pricePoints",
                  "promotedPurchase",
                  "subscriptionAvailability",
                  "winBackOffers",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[promotedPurchaseImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchaseImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "assetToken",
                  "imageAsset",
                  "assetType",
                  "uploadOperations",
                  "state",
                  "promotedPurchase"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inAppPurchaseV2",
                  "subscription",
                  "promotionImages"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[promotionImages]",
            "in": "query",
            "description": "maximum number of related promotionImages returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "deprecated": true
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of PromotedPurchases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotedPurchasesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/reviewSubmissions": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_reviewSubmissions_getToManyRelated",
        "parameters": [
          {
            "name": "filter[platform]",
            "in": "query",
            "description": "filter by attribute 'platform'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS",
                  "MAC_OS",
                  "TV_OS",
                  "VISION_OS"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[state]",
            "in": "query",
            "description": "filter by attribute 'state'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "READY_FOR_REVIEW",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "UNRESOLVED_ISSUES",
                  "CANCELING",
                  "COMPLETING",
                  "COMPLETE"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[reviewSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type reviewSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "submittedDate",
                  "state",
                  "app",
                  "items",
                  "appStoreVersionForReview",
                  "submittedByActor",
                  "lastUpdatedByActor"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[reviewSubmissionItems]",
            "in": "query",
            "description": "the fields to include for returned resources of type reviewSubmissionItems",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "state",
                  "appStoreVersion",
                  "appCustomProductPageVersion",
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appEvent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[actors]",
            "in": "query",
            "description": "the fields to include for returned resources of type actors",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "actorType",
                  "userFirstName",
                  "userLastName",
                  "userEmail",
                  "apiKeyId"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "items",
                  "appStoreVersionForReview",
                  "submittedByActor",
                  "lastUpdatedByActor"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[items]",
            "in": "query",
            "description": "maximum number of related items returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of ReviewSubmissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewSubmissionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/subscriptionGracePeriod": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_subscriptionGracePeriod_getToOneRelated",
        "parameters": [
          {
            "name": "fields[subscriptionGracePeriods]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionGracePeriods",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "optIn",
                  "sandboxOptIn",
                  "duration",
                  "renewalType"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionGracePeriod",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionGracePeriodResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/subscriptionGroups": {
      "get": {
        "tags": [
          "Apps"
        ],
        "operationId": "apps_subscriptionGroups_getToManyRelated",
        "parameters": [
          {
            "name": "filter[referenceName]",
            "in": "query",
            "description": "filter by attribute 'referenceName'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[subscriptions.state]",
            "in": "query",
            "description": "filter by attribute 'subscriptions.state'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "MISSING_METADATA",
                  "READY_TO_SUBMIT",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "DEVELOPER_ACTION_NEEDED",
                  "PENDING_BINARY_APPROVAL",
                  "APPROVED",
                  "DEVELOPER_REMOVED_FROM_SALE",
                  "REMOVED_FROM_SALE",
                  "REJECTED"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "-referenceName"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "subscriptions",
                  "subscriptionGroupLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptions]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "familySharable",
                  "state",
                  "subscriptionPeriod",
                  "reviewNote",
                  "groupLevel",
                  "subscriptionLocalizations",
                  "appStoreReviewScreenshot",
                  "group",
                  "introductoryOffers",
                  "promotionalOffers",
                  "offerCodes",
                  "prices",
                  "pricePoints",
                  "promotedPurchase",
                  "subscriptionAvailability",
                  "winBackOffers",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionGroupLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionGroupLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "customAppName",
                  "locale",
                  "state",
                  "subscriptionGroup"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptions",
                  "subscriptionGroupLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[subscriptions]",
            "in": "query",
            "description": "maximum number of related subscriptions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[subscriptionGroupLocalizations]",
            "in": "query",
            "description": "maximum number of related subscriptionGroupLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of SubscriptionGroups",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionGroupsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaAppLocalizations/{id}/app": {
      "get": {
        "tags": [
          "BetaAppLocalizations"
        ],
        "operationId": "betaAppLocalizations_app_getToOneRelated",
        "parameters": [
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single App with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaAppReviewDetails/{id}/app": {
      "get": {
        "tags": [
          "BetaAppReviewDetails"
        ],
        "operationId": "betaAppReviewDetails_app_getToOneRelated",
        "parameters": [
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single App with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaAppReviewSubmissions/{id}/build": {
      "get": {
        "tags": [
          "BetaAppReviewSubmissions"
        ],
        "operationId": "betaAppReviewSubmissions_build_getToOneRelated",
        "parameters": [
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single Build with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaBuildLocalizations/{id}/build": {
      "get": {
        "tags": [
          "BetaBuildLocalizations"
        ],
        "operationId": "betaBuildLocalizations_build_getToOneRelated",
        "parameters": [
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single Build with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaGroups/{id}/app": {
      "get": {
        "tags": [
          "BetaGroups"
        ],
        "operationId": "betaGroups_app_getToOneRelated",
        "parameters": [
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single App with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaGroups/{id}/relationships/betaTesters": {
      "get": {
        "tags": [
          "BetaGroups"
        ],
        "operationId": "betaGroups_betaTesters_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaGroupBetaTestersLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BetaGroups"
        ],
        "operationId": "betaGroups_betaTesters_createToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaGroupBetaTestersLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "delete": {
        "tags": [
          "BetaGroups"
        ],
        "operationId": "betaGroups_betaTesters_deleteToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaGroupBetaTestersLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaGroups/{id}/betaTesters": {
      "get": {
        "tags": [
          "BetaGroups"
        ],
        "operationId": "betaGroups_betaTesters_getToManyRelated",
        "parameters": [
          {
            "name": "fields[betaTesters]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaTesters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "firstName",
                  "lastName",
                  "email",
                  "inviteType",
                  "state",
                  "apps",
                  "betaGroups",
                  "builds"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BetaTesters with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaTestersWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaGroups/{id}/relationships/builds": {
      "get": {
        "tags": [
          "BetaGroups"
        ],
        "operationId": "betaGroups_builds_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaGroupBuildsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BetaGroups"
        ],
        "operationId": "betaGroups_builds_createToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaGroupBuildsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "delete": {
        "tags": [
          "BetaGroups"
        ],
        "operationId": "betaGroups_builds_deleteToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaGroupBuildsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaGroups/{id}/builds": {
      "get": {
        "tags": [
          "BetaGroups"
        ],
        "operationId": "betaGroups_builds_getToManyRelated",
        "parameters": [
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Builds with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildsWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaLicenseAgreements/{id}/app": {
      "get": {
        "tags": [
          "BetaLicenseAgreements"
        ],
        "operationId": "betaLicenseAgreements_app_getToOneRelated",
        "parameters": [
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single App with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaTesters/{id}/relationships/apps": {
      "get": {
        "tags": [
          "BetaTesters"
        ],
        "operationId": "betaTesters_apps_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaTesterAppsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BetaTesters"
        ],
        "operationId": "betaTesters_apps_deleteToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaTesterAppsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted for future completion"
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaTesters/{id}/apps": {
      "get": {
        "tags": [
          "BetaTesters"
        ],
        "operationId": "betaTesters_apps_getToManyRelated",
        "parameters": [
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Apps with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppsWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaTesters/{id}/relationships/betaGroups": {
      "get": {
        "tags": [
          "BetaTesters"
        ],
        "operationId": "betaTesters_betaGroups_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaTesterBetaGroupsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BetaTesters"
        ],
        "operationId": "betaTesters_betaGroups_createToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaTesterBetaGroupsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "delete": {
        "tags": [
          "BetaTesters"
        ],
        "operationId": "betaTesters_betaGroups_deleteToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaTesterBetaGroupsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaTesters/{id}/betaGroups": {
      "get": {
        "tags": [
          "BetaTesters"
        ],
        "operationId": "betaTesters_betaGroups_getToManyRelated",
        "parameters": [
          {
            "name": "fields[betaGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "isInternalGroup",
                  "hasAccessToAllBuilds",
                  "publicLinkEnabled",
                  "publicLinkId",
                  "publicLinkLimitEnabled",
                  "publicLinkLimit",
                  "publicLink",
                  "feedbackEnabled",
                  "iosBuildsAvailableForAppleSiliconMac",
                  "app",
                  "builds",
                  "betaTesters"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BetaGroups with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaGroupsWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaTesters/{id}/relationships/builds": {
      "get": {
        "tags": [
          "BetaTesters"
        ],
        "operationId": "betaTesters_builds_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaTesterBuildsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BetaTesters"
        ],
        "operationId": "betaTesters_builds_createToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaTesterBuildsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "delete": {
        "tags": [
          "BetaTesters"
        ],
        "operationId": "betaTesters_builds_deleteToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BetaTesterBuildsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaTesters/{id}/builds": {
      "get": {
        "tags": [
          "BetaTesters"
        ],
        "operationId": "betaTesters_builds_getToManyRelated",
        "parameters": [
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Builds with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildsWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/buildBetaDetails/{id}/build": {
      "get": {
        "tags": [
          "BuildBetaDetails"
        ],
        "operationId": "buildBetaDetails_build_getToOneRelated",
        "parameters": [
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single Build with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/buildBundles/{id}/appClipDomainCacheStatus": {
      "get": {
        "tags": [
          "BuildBundles"
        ],
        "operationId": "buildBundles_appClipDomainCacheStatus_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appClipDomainStatuses]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDomainStatuses",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "domains",
                  "lastUpdatedDate"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipDomainStatus",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipDomainStatusResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/buildBundles/{id}/appClipDomainDebugStatus": {
      "get": {
        "tags": [
          "BuildBundles"
        ],
        "operationId": "buildBundles_appClipDomainDebugStatus_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appClipDomainStatuses]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDomainStatuses",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "domains",
                  "lastUpdatedDate"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppClipDomainStatus",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppClipDomainStatusResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/buildBundles/{id}/betaAppClipInvocations": {
      "get": {
        "tags": [
          "BuildBundles"
        ],
        "operationId": "buildBundles_betaAppClipInvocations_getToManyRelated",
        "parameters": [
          {
            "name": "fields[betaAppClipInvocations]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppClipInvocations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "url",
                  "betaAppClipInvocationLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[betaAppClipInvocationLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppClipInvocationLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "locale"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "betaAppClipInvocationLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[betaAppClipInvocationLocalizations]",
            "in": "query",
            "description": "maximum number of related betaAppClipInvocationLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BetaAppClipInvocations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppClipInvocationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/buildBundles/{id}/buildBundleFileSizes": {
      "get": {
        "tags": [
          "BuildBundles"
        ],
        "operationId": "buildBundles_buildBundleFileSizes_getToManyRelated",
        "parameters": [
          {
            "name": "fields[buildBundleFileSizes]",
            "in": "query",
            "description": "the fields to include for returned resources of type buildBundleFileSizes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "deviceModel",
                  "osVersion",
                  "downloadBytes",
                  "installBytes"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BuildBundleFileSizes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildBundleFileSizesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/builds/{id}/app": {
      "get": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_app_getToOneRelated",
        "parameters": [
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single App with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/builds/{id}/relationships/appEncryptionDeclaration": {
      "get": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_appEncryptionDeclaration_getToOneRelationship",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Related linkage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildAppEncryptionDeclarationLinkageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_appEncryptionDeclaration_updateToOneRelationship",
        "requestBody": {
          "description": "Related linkage",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildAppEncryptionDeclarationLinkageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/builds/{id}/appEncryptionDeclaration": {
      "get": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_appEncryptionDeclaration_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appEncryptionDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEncryptionDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appDescription",
                  "createdDate",
                  "usesEncryption",
                  "exempt",
                  "containsProprietaryCryptography",
                  "containsThirdPartyCryptography",
                  "availableOnFrenchStore",
                  "platform",
                  "uploadedDate",
                  "documentUrl",
                  "documentName",
                  "documentType",
                  "appEncryptionDeclarationState",
                  "codeValue",
                  "app",
                  "builds",
                  "appEncryptionDeclarationDocument"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppEncryptionDeclaration with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppEncryptionDeclarationWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/builds/{id}/appStoreVersion": {
      "get": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_appStoreVersion_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ageRatingDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type ageRatingDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "alcoholTobaccoOrDrugUseOrReferences",
                  "contests",
                  "gamblingAndContests",
                  "gambling",
                  "gamblingSimulated",
                  "kidsAgeBand",
                  "lootBox",
                  "medicalOrTreatmentInformation",
                  "profanityOrCrudeHumor",
                  "sexualContentGraphicAndNudity",
                  "sexualContentOrNudity",
                  "horrorOrFearThemes",
                  "matureOrSuggestiveThemes",
                  "unrestrictedWebAccess",
                  "violenceCartoonOrFantasy",
                  "violenceRealisticProlongedGraphicOrSadistic",
                  "violenceRealistic",
                  "ageRatingOverride",
                  "koreaAgeRatingOverride",
                  "seventeenPlus"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "locale",
                  "keywords",
                  "marketingUrl",
                  "promotionalText",
                  "supportUrl",
                  "whatsNew",
                  "appStoreVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionPhasedReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionPhasedReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "phasedReleaseState",
                  "startDate",
                  "totalPauseDuration",
                  "currentDayNumber"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAppVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAppVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "enabled",
                  "compatibilityVersions",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[routingAppCoverages]",
            "in": "query",
            "description": "the fields to include for returned resources of type routingAppCoverages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contactFirstName",
                  "contactLastName",
                  "contactPhone",
                  "contactEmail",
                  "demoAccountName",
                  "demoAccountPassword",
                  "demoAccountRequired",
                  "notes",
                  "appStoreVersion",
                  "appStoreReviewAttachments"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipDefaultExperiences]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperiences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action",
                  "appClip",
                  "releaseWithAppStoreVersion",
                  "appClipDefaultExperienceLocalizations",
                  "appClipAppStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperiments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperiments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "trafficProportion",
                  "state",
                  "reviewRequired",
                  "startDate",
                  "endDate",
                  "appStoreVersion",
                  "appStoreVersionExperimentTreatments",
                  "platform",
                  "app",
                  "latestControlVersion",
                  "controlVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[alternativeDistributionPackages]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "versions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appStoreVersionLocalizations]",
            "in": "query",
            "description": "maximum number of related appStoreVersionLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[appStoreVersionExperiments]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperiments returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "deprecated": true
          },
          {
            "name": "limit[appStoreVersionExperimentsV2]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperimentsV2 returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/builds/{id}/betaAppReviewSubmission": {
      "get": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_betaAppReviewSubmission_getToOneRelated",
        "parameters": [
          {
            "name": "fields[betaAppReviewSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppReviewSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "betaReviewState",
                  "submittedDate",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BetaAppReviewSubmission with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaAppReviewSubmissionWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/builds/{id}/betaBuildLocalizations": {
      "get": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_betaBuildLocalizations_getToManyRelated",
        "parameters": [
          {
            "name": "fields[betaBuildLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaBuildLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "whatsNew",
                  "locale",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BetaBuildLocalizations with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaBuildLocalizationsWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/builds/{id}/relationships/betaGroups": {
      "post": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_betaGroups_createToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildBetaGroupsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "delete": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_betaGroups_deleteToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildBetaGroupsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/builds/{id}/buildBetaDetail": {
      "get": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_buildBetaDetail_getToOneRelated",
        "parameters": [
          {
            "name": "fields[buildBetaDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type buildBetaDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "autoNotifyEnabled",
                  "internalBuildState",
                  "externalBuildState",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BuildBetaDetail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildBetaDetailResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/builds/{id}/diagnosticSignatures": {
      "get": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_diagnosticSignatures_getToManyRelated",
        "parameters": [
          {
            "name": "filter[diagnosticType]",
            "in": "query",
            "description": "filter by attribute 'diagnosticType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DISK_WRITES",
                  "HANGS",
                  "LAUNCHES"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[diagnosticSignatures]",
            "in": "query",
            "description": "the fields to include for returned resources of type diagnosticSignatures",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "diagnosticType",
                  "signature",
                  "weight",
                  "insight",
                  "logs"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of DiagnosticSignatures",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiagnosticSignaturesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/builds/{id}/icons": {
      "get": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_icons_getToManyRelated",
        "parameters": [
          {
            "name": "fields[buildIcons]",
            "in": "query",
            "description": "the fields to include for returned resources of type buildIcons",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "iconAsset",
                  "iconType"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BuildIcons with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildIconsWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/builds/{id}/relationships/individualTesters": {
      "get": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_individualTesters_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildIndividualTestersLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_individualTesters_createToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildIndividualTestersLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "delete": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_individualTesters_deleteToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildIndividualTestersLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/builds/{id}/individualTesters": {
      "get": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_individualTesters_getToManyRelated",
        "parameters": [
          {
            "name": "fields[betaTesters]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaTesters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "firstName",
                  "lastName",
                  "email",
                  "inviteType",
                  "state",
                  "apps",
                  "betaGroups",
                  "builds"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BetaTesters with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaTestersWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/builds/{id}/perfPowerMetrics": {
      "get": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_perfPowerMetrics_getToManyRelated",
        "parameters": [
          {
            "name": "filter[platform]",
            "in": "query",
            "description": "filter by attribute 'platform'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[metricType]",
            "in": "query",
            "description": "filter by attribute 'metricType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DISK",
                  "HANG",
                  "BATTERY",
                  "LAUNCH",
                  "MEMORY",
                  "ANIMATION",
                  "TERMINATION"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[deviceType]",
            "in": "query",
            "description": "filter by attribute 'deviceType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of PerfPowerMetrics",
            "content": {
              "application/vnd.apple.xcode-metrics+json": {
                "schema": {
                  "$ref": "#/components/schemas/xcodeMetrics"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/builds/{id}/preReleaseVersion": {
      "get": {
        "tags": [
          "Builds"
        ],
        "operationId": "builds_preReleaseVersion_getToOneRelated",
        "parameters": [
          {
            "name": "fields[preReleaseVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type preReleaseVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "platform",
                  "builds",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single PrereleaseVersion with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrereleaseVersionWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/bundleIds/{id}/app": {
      "get": {
        "tags": [
          "BundleIds"
        ],
        "operationId": "bundleIds_app_getToOneRelated",
        "parameters": [
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single App with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/bundleIds/{id}/bundleIdCapabilities": {
      "get": {
        "tags": [
          "BundleIds"
        ],
        "operationId": "bundleIds_bundleIdCapabilities_getToManyRelated",
        "parameters": [
          {
            "name": "fields[bundleIdCapabilities]",
            "in": "query",
            "description": "the fields to include for returned resources of type bundleIdCapabilities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "capabilityType",
                  "settings"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of BundleIdCapabilities with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleIdCapabilitiesWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/bundleIds/{id}/profiles": {
      "get": {
        "tags": [
          "BundleIds"
        ],
        "operationId": "bundleIds_profiles_getToManyRelated",
        "parameters": [
          {
            "name": "fields[profiles]",
            "in": "query",
            "description": "the fields to include for returned resources of type profiles",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "profileType",
                  "profileState",
                  "profileContent",
                  "uuid",
                  "createdDate",
                  "expirationDate",
                  "bundleId",
                  "devices",
                  "certificates"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Profiles with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilesWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciBuildActions/{id}/artifacts": {
      "get": {
        "tags": [
          "CiBuildActions"
        ],
        "operationId": "ciBuildActions_artifacts_getToManyRelated",
        "parameters": [
          {
            "name": "fields[ciArtifacts]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciArtifacts",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileType",
                  "fileName",
                  "fileSize",
                  "downloadUrl"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of CiArtifacts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiArtifactsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciBuildActions/{id}/buildRun": {
      "get": {
        "tags": [
          "CiBuildActions"
        ],
        "operationId": "ciBuildActions_buildRun_getToOneRelated",
        "parameters": [
          {
            "name": "fields[ciBuildRuns]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciBuildRuns",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "number",
                  "createdDate",
                  "startedDate",
                  "finishedDate",
                  "sourceCommit",
                  "destinationCommit",
                  "isPullRequestBuild",
                  "issueCounts",
                  "executionProgress",
                  "completionStatus",
                  "startReason",
                  "cancelReason",
                  "builds",
                  "workflow",
                  "product",
                  "sourceBranchOrTag",
                  "destinationBranch",
                  "actions",
                  "pullRequest"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ciWorkflows]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciWorkflows",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "branchStartCondition",
                  "tagStartCondition",
                  "pullRequestStartCondition",
                  "scheduledStartCondition",
                  "manualBranchStartCondition",
                  "manualTagStartCondition",
                  "manualPullRequestStartCondition",
                  "actions",
                  "isEnabled",
                  "isLockedForEditing",
                  "clean",
                  "containerFilePath",
                  "lastModifiedDate",
                  "product",
                  "repository",
                  "xcodeVersion",
                  "macOsVersion",
                  "buildRuns"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ciProducts]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciProducts",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "productType",
                  "app",
                  "bundleId",
                  "workflows",
                  "primaryRepositories",
                  "additionalRepositories",
                  "buildRuns"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmGitReferences]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmGitReferences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "canonicalName",
                  "isDeleted",
                  "kind",
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmPullRequests]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmPullRequests",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "number",
                  "webUrl",
                  "sourceRepositoryOwner",
                  "sourceRepositoryName",
                  "sourceBranchName",
                  "destinationRepositoryOwner",
                  "destinationRepositoryName",
                  "destinationBranchName",
                  "isClosed",
                  "isCrossRepository",
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "builds",
                  "workflow",
                  "product",
                  "sourceBranchOrTag",
                  "destinationBranch",
                  "pullRequest"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[builds]",
            "in": "query",
            "description": "maximum number of related builds returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single CiBuildRun",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiBuildRunResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciBuildActions/{id}/issues": {
      "get": {
        "tags": [
          "CiBuildActions"
        ],
        "operationId": "ciBuildActions_issues_getToManyRelated",
        "parameters": [
          {
            "name": "fields[ciIssues]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciIssues",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "issueType",
                  "message",
                  "fileSource",
                  "category"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of CiIssues",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiIssuesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciBuildActions/{id}/testResults": {
      "get": {
        "tags": [
          "CiBuildActions"
        ],
        "operationId": "ciBuildActions_testResults_getToManyRelated",
        "parameters": [
          {
            "name": "fields[ciTestResults]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciTestResults",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "className",
                  "name",
                  "status",
                  "fileSource",
                  "message",
                  "destinationTestResults"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of CiTestResults",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiTestResultsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciBuildRuns/{id}/actions": {
      "get": {
        "tags": [
          "CiBuildRuns"
        ],
        "operationId": "ciBuildRuns_actions_getToManyRelated",
        "parameters": [
          {
            "name": "fields[ciBuildActions]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciBuildActions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "actionType",
                  "startedDate",
                  "finishedDate",
                  "issueCounts",
                  "executionProgress",
                  "completionStatus",
                  "isRequiredToPass",
                  "buildRun",
                  "artifacts",
                  "issues",
                  "testResults"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ciBuildRuns]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciBuildRuns",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "number",
                  "createdDate",
                  "startedDate",
                  "finishedDate",
                  "sourceCommit",
                  "destinationCommit",
                  "isPullRequestBuild",
                  "issueCounts",
                  "executionProgress",
                  "completionStatus",
                  "startReason",
                  "cancelReason",
                  "builds",
                  "workflow",
                  "product",
                  "sourceBranchOrTag",
                  "destinationBranch",
                  "actions",
                  "pullRequest"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "buildRun"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of CiBuildActions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiBuildActionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciBuildRuns/{id}/builds": {
      "get": {
        "tags": [
          "CiBuildRuns"
        ],
        "operationId": "ciBuildRuns_builds_getToManyRelated",
        "parameters": [
          {
            "name": "filter[version]",
            "in": "query",
            "description": "filter by attribute 'version'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[expired]",
            "in": "query",
            "description": "filter by attribute 'expired'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[processingState]",
            "in": "query",
            "description": "filter by attribute 'processingState'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PROCESSING",
                  "FAILED",
                  "INVALID",
                  "VALID"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[betaAppReviewSubmission.betaReviewState]",
            "in": "query",
            "description": "filter by attribute 'betaAppReviewSubmission.betaReviewState'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "REJECTED",
                  "APPROVED"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[usesNonExemptEncryption]",
            "in": "query",
            "description": "filter by attribute 'usesNonExemptEncryption'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[preReleaseVersion.version]",
            "in": "query",
            "description": "filter by attribute 'preReleaseVersion.version'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[preReleaseVersion.platform]",
            "in": "query",
            "description": "filter by attribute 'preReleaseVersion.platform'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS",
                  "MAC_OS",
                  "TV_OS",
                  "VISION_OS"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[buildAudienceType]",
            "in": "query",
            "description": "filter by attribute 'buildAudienceType'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INTERNAL_ONLY",
                  "APP_STORE_ELIGIBLE"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[preReleaseVersion]",
            "in": "query",
            "description": "filter by id(s) of related 'preReleaseVersion'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[app]",
            "in": "query",
            "description": "filter by id(s) of related 'app'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[betaGroups]",
            "in": "query",
            "description": "filter by id(s) of related 'betaGroups'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[appStoreVersion]",
            "in": "query",
            "description": "filter by id(s) of related 'appStoreVersion'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "-version",
                  "uploadedDate",
                  "-uploadedDate",
                  "preReleaseVersion",
                  "-preReleaseVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[preReleaseVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type preReleaseVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "platform",
                  "builds",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[betaTesters]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaTesters",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "firstName",
                  "lastName",
                  "email",
                  "inviteType",
                  "state",
                  "apps",
                  "betaGroups",
                  "builds"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[betaGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "isInternalGroup",
                  "hasAccessToAllBuilds",
                  "publicLinkEnabled",
                  "publicLinkId",
                  "publicLinkLimitEnabled",
                  "publicLinkLimit",
                  "publicLink",
                  "feedbackEnabled",
                  "iosBuildsAvailableForAppleSiliconMac",
                  "app",
                  "builds",
                  "betaTesters"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[betaBuildLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaBuildLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "whatsNew",
                  "locale",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appEncryptionDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEncryptionDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appDescription",
                  "createdDate",
                  "usesEncryption",
                  "exempt",
                  "containsProprietaryCryptography",
                  "containsThirdPartyCryptography",
                  "availableOnFrenchStore",
                  "platform",
                  "uploadedDate",
                  "documentUrl",
                  "documentName",
                  "documentType",
                  "appEncryptionDeclarationState",
                  "codeValue",
                  "app",
                  "builds",
                  "appEncryptionDeclarationDocument"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[betaAppReviewSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppReviewSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "betaReviewState",
                  "submittedDate",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[buildBetaDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type buildBetaDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "autoNotifyEnabled",
                  "internalBuildState",
                  "externalBuildState",
                  "build"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[buildIcons]",
            "in": "query",
            "description": "the fields to include for returned resources of type buildIcons",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "iconAsset",
                  "iconType"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[buildBundles]",
            "in": "query",
            "description": "the fields to include for returned resources of type buildBundles",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bundleId",
                  "bundleType",
                  "sdkBuild",
                  "platformBuild",
                  "fileName",
                  "hasSirikit",
                  "hasOnDemandResources",
                  "hasPrerenderedIcon",
                  "usesLocationServices",
                  "isIosBuildMacAppStoreCompatible",
                  "includesSymbols",
                  "dSYMUrl",
                  "supportedArchitectures",
                  "requiredCapabilities",
                  "deviceProtocols",
                  "locales",
                  "entitlements",
                  "appClipDomainCacheStatus",
                  "appClipDomainDebugStatus",
                  "betaAppClipInvocations",
                  "buildBundleFileSizes"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[individualTesters]",
            "in": "query",
            "description": "maximum number of related individualTesters returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[betaGroups]",
            "in": "query",
            "description": "maximum number of related betaGroups returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[betaBuildLocalizations]",
            "in": "query",
            "description": "maximum number of related betaBuildLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[icons]",
            "in": "query",
            "description": "maximum number of related icons returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[buildBundles]",
            "in": "query",
            "description": "maximum number of related buildBundles returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Builds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciMacOsVersions/{id}/xcodeVersions": {
      "get": {
        "tags": [
          "CiMacOsVersions"
        ],
        "operationId": "ciMacOsVersions_xcodeVersions_getToManyRelated",
        "parameters": [
          {
            "name": "fields[ciXcodeVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciXcodeVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "name",
                  "testDestinations",
                  "macOsVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ciMacOsVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciMacOsVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "name",
                  "xcodeVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "macOsVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[macOsVersions]",
            "in": "query",
            "description": "maximum number of related macOsVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of CiXcodeVersions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiXcodeVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciProducts/{id}/additionalRepositories": {
      "get": {
        "tags": [
          "CiProducts"
        ],
        "operationId": "ciProducts_additionalRepositories_getToManyRelated",
        "parameters": [
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmRepositories]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmRepositories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lastAccessedDate",
                  "httpCloneUrl",
                  "sshCloneUrl",
                  "ownerName",
                  "repositoryName",
                  "scmProvider",
                  "defaultBranch",
                  "gitReferences",
                  "pullRequests"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmProviders]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmProviders",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "scmProviderType",
                  "url",
                  "repositories"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmGitReferences]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmGitReferences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "canonicalName",
                  "isDeleted",
                  "kind",
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "scmProvider",
                  "defaultBranch"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of ScmRepositories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScmRepositoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciProducts/{id}/app": {
      "get": {
        "tags": [
          "CiProducts"
        ],
        "operationId": "ciProducts_app_getToOneRelated",
        "parameters": [
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appEncryptionDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEncryptionDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appDescription",
                  "createdDate",
                  "usesEncryption",
                  "exempt",
                  "containsProprietaryCryptography",
                  "containsThirdPartyCryptography",
                  "availableOnFrenchStore",
                  "platform",
                  "uploadedDate",
                  "documentUrl",
                  "documentName",
                  "documentType",
                  "appEncryptionDeclarationState",
                  "codeValue",
                  "app",
                  "builds",
                  "appEncryptionDeclarationDocument"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ciProducts]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciProducts",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "productType",
                  "app",
                  "bundleId",
                  "workflows",
                  "primaryRepositories",
                  "additionalRepositories",
                  "buildRuns"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[betaGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "isInternalGroup",
                  "hasAccessToAllBuilds",
                  "publicLinkEnabled",
                  "publicLinkId",
                  "publicLinkLimitEnabled",
                  "publicLinkLimit",
                  "publicLink",
                  "feedbackEnabled",
                  "iosBuildsAvailableForAppleSiliconMac",
                  "app",
                  "builds",
                  "betaTesters"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[preReleaseVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type preReleaseVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "platform",
                  "builds",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[betaAppLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "feedbackEmail",
                  "marketingUrl",
                  "privacyPolicyUrl",
                  "tvOsPrivacyPolicy",
                  "description",
                  "locale",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[betaLicenseAgreements]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaLicenseAgreements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "agreementText",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[betaAppReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type betaAppReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contactFirstName",
                  "contactLastName",
                  "contactPhone",
                  "contactEmail",
                  "demoAccountName",
                  "demoAccountPassword",
                  "demoAccountRequired",
                  "notes",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appInfos]",
            "in": "query",
            "description": "the fields to include for returned resources of type appInfos",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreState",
                  "state",
                  "appStoreAgeRating",
                  "australiaAgeRating",
                  "brazilAgeRating",
                  "brazilAgeRatingV2",
                  "franceAgeRating",
                  "koreaAgeRating",
                  "kidsAgeBand",
                  "app",
                  "ageRatingDeclaration",
                  "appInfoLocalizations",
                  "primaryCategory",
                  "primarySubcategoryOne",
                  "primarySubcategoryTwo",
                  "secondaryCategory",
                  "secondarySubcategoryOne",
                  "secondarySubcategoryTwo"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClips]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClips",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "bundleId",
                  "app",
                  "appClipDefaultExperiences",
                  "appClipAdvancedExperiences"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[endUserLicenseAgreements]",
            "in": "query",
            "description": "the fields to include for returned resources of type endUserLicenseAgreements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "agreementText",
                  "app",
                  "territories"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "productId",
                  "inAppPurchaseType",
                  "state",
                  "apps",
                  "name",
                  "reviewNote",
                  "familySharable",
                  "contentHosting",
                  "inAppPurchaseLocalizations",
                  "pricePoints",
                  "content",
                  "appStoreReviewScreenshot",
                  "promotedPurchase",
                  "iapPriceSchedule",
                  "inAppPurchaseAvailability",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "subscriptions",
                  "subscriptionGroupLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterEnabledVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterEnabledVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "iconAsset",
                  "compatibleVersions",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appCustomProductPages]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "url",
                  "visible",
                  "app",
                  "appCustomProductPageVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[promotedPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "visibleForAllUsers",
                  "enabled",
                  "state",
                  "inAppPurchaseV2",
                  "subscription",
                  "promotionImages"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appEvents]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEvents",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "badge",
                  "eventState",
                  "deepLink",
                  "purchaseRequirement",
                  "primaryLocale",
                  "priority",
                  "purpose",
                  "territorySchedules",
                  "archivedTerritorySchedules",
                  "localizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[reviewSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type reviewSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "submittedDate",
                  "state",
                  "app",
                  "items",
                  "appStoreVersionForReview",
                  "submittedByActor",
                  "lastUpdatedByActor"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionGracePeriods]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionGracePeriods",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "optIn",
                  "sandboxOptIn",
                  "duration",
                  "renewalType"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperiments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperiments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "trafficProportion",
                  "state",
                  "reviewRequired",
                  "startDate",
                  "endDate",
                  "app",
                  "latestControlVersion",
                  "controlVersions",
                  "appStoreVersionExperimentTreatments"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "endUserLicenseAgreement",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appEncryptionDeclarations]",
            "in": "query",
            "description": "maximum number of related appEncryptionDeclarations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[betaGroups]",
            "in": "query",
            "description": "maximum number of related betaGroups returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[appStoreVersions]",
            "in": "query",
            "description": "maximum number of related appStoreVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[preReleaseVersions]",
            "in": "query",
            "description": "maximum number of related preReleaseVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[betaAppLocalizations]",
            "in": "query",
            "description": "maximum number of related betaAppLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[builds]",
            "in": "query",
            "description": "maximum number of related builds returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[appInfos]",
            "in": "query",
            "description": "maximum number of related appInfos returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[appClips]",
            "in": "query",
            "description": "maximum number of related appClips returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[inAppPurchases]",
            "in": "query",
            "description": "maximum number of related inAppPurchases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "deprecated": true
          },
          {
            "name": "limit[subscriptionGroups]",
            "in": "query",
            "description": "maximum number of related subscriptionGroups returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[gameCenterEnabledVersions]",
            "in": "query",
            "description": "maximum number of related gameCenterEnabledVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "deprecated": true
          },
          {
            "name": "limit[appCustomProductPages]",
            "in": "query",
            "description": "maximum number of related appCustomProductPages returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[inAppPurchasesV2]",
            "in": "query",
            "description": "maximum number of related inAppPurchasesV2 returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[promotedPurchases]",
            "in": "query",
            "description": "maximum number of related promotedPurchases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[appEvents]",
            "in": "query",
            "description": "maximum number of related appEvents returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[reviewSubmissions]",
            "in": "query",
            "description": "maximum number of related reviewSubmissions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[appStoreVersionExperimentsV2]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperimentsV2 returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single App",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciProducts/{id}/buildRuns": {
      "get": {
        "tags": [
          "CiProducts"
        ],
        "operationId": "ciProducts_buildRuns_getToManyRelated",
        "parameters": [
          {
            "name": "filter[builds]",
            "in": "query",
            "description": "filter by id(s) of related 'builds'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "number",
                  "-number"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ciBuildRuns]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciBuildRuns",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "number",
                  "createdDate",
                  "startedDate",
                  "finishedDate",
                  "sourceCommit",
                  "destinationCommit",
                  "isPullRequestBuild",
                  "issueCounts",
                  "executionProgress",
                  "completionStatus",
                  "startReason",
                  "cancelReason",
                  "builds",
                  "workflow",
                  "product",
                  "sourceBranchOrTag",
                  "destinationBranch",
                  "actions",
                  "pullRequest"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ciWorkflows]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciWorkflows",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "branchStartCondition",
                  "tagStartCondition",
                  "pullRequestStartCondition",
                  "scheduledStartCondition",
                  "manualBranchStartCondition",
                  "manualTagStartCondition",
                  "manualPullRequestStartCondition",
                  "actions",
                  "isEnabled",
                  "isLockedForEditing",
                  "clean",
                  "containerFilePath",
                  "lastModifiedDate",
                  "product",
                  "repository",
                  "xcodeVersion",
                  "macOsVersion",
                  "buildRuns"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ciProducts]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciProducts",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "productType",
                  "app",
                  "bundleId",
                  "workflows",
                  "primaryRepositories",
                  "additionalRepositories",
                  "buildRuns"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmGitReferences]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmGitReferences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "canonicalName",
                  "isDeleted",
                  "kind",
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmPullRequests]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmPullRequests",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "number",
                  "webUrl",
                  "sourceRepositoryOwner",
                  "sourceRepositoryName",
                  "sourceBranchName",
                  "destinationRepositoryOwner",
                  "destinationRepositoryName",
                  "destinationBranchName",
                  "isClosed",
                  "isCrossRepository",
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "builds",
                  "workflow",
                  "product",
                  "sourceBranchOrTag",
                  "destinationBranch",
                  "pullRequest"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[builds]",
            "in": "query",
            "description": "maximum number of related builds returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of CiBuildRuns",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiBuildRunsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciProducts/{id}/primaryRepositories": {
      "get": {
        "tags": [
          "CiProducts"
        ],
        "operationId": "ciProducts_primaryRepositories_getToManyRelated",
        "parameters": [
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmRepositories]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmRepositories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lastAccessedDate",
                  "httpCloneUrl",
                  "sshCloneUrl",
                  "ownerName",
                  "repositoryName",
                  "scmProvider",
                  "defaultBranch",
                  "gitReferences",
                  "pullRequests"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmProviders]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmProviders",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "scmProviderType",
                  "url",
                  "repositories"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmGitReferences]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmGitReferences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "canonicalName",
                  "isDeleted",
                  "kind",
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "scmProvider",
                  "defaultBranch"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of ScmRepositories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScmRepositoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciProducts/{id}/workflows": {
      "get": {
        "tags": [
          "CiProducts"
        ],
        "operationId": "ciProducts_workflows_getToManyRelated",
        "parameters": [
          {
            "name": "fields[ciWorkflows]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciWorkflows",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "branchStartCondition",
                  "tagStartCondition",
                  "pullRequestStartCondition",
                  "scheduledStartCondition",
                  "manualBranchStartCondition",
                  "manualTagStartCondition",
                  "manualPullRequestStartCondition",
                  "actions",
                  "isEnabled",
                  "isLockedForEditing",
                  "clean",
                  "containerFilePath",
                  "lastModifiedDate",
                  "product",
                  "repository",
                  "xcodeVersion",
                  "macOsVersion",
                  "buildRuns"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ciProducts]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciProducts",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "productType",
                  "app",
                  "bundleId",
                  "workflows",
                  "primaryRepositories",
                  "additionalRepositories",
                  "buildRuns"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmRepositories]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmRepositories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lastAccessedDate",
                  "httpCloneUrl",
                  "sshCloneUrl",
                  "ownerName",
                  "repositoryName",
                  "scmProvider",
                  "defaultBranch",
                  "gitReferences",
                  "pullRequests"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ciXcodeVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciXcodeVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "name",
                  "testDestinations",
                  "macOsVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ciMacOsVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciMacOsVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "name",
                  "xcodeVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "product",
                  "repository",
                  "xcodeVersion",
                  "macOsVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of CiWorkflows",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiWorkflowsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciWorkflows/{id}/buildRuns": {
      "get": {
        "tags": [
          "CiWorkflows"
        ],
        "operationId": "ciWorkflows_buildRuns_getToManyRelated",
        "parameters": [
          {
            "name": "filter[builds]",
            "in": "query",
            "description": "filter by id(s) of related 'builds'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "number",
                  "-number"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ciBuildRuns]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciBuildRuns",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "number",
                  "createdDate",
                  "startedDate",
                  "finishedDate",
                  "sourceCommit",
                  "destinationCommit",
                  "isPullRequestBuild",
                  "issueCounts",
                  "executionProgress",
                  "completionStatus",
                  "startReason",
                  "cancelReason",
                  "builds",
                  "workflow",
                  "product",
                  "sourceBranchOrTag",
                  "destinationBranch",
                  "actions",
                  "pullRequest"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ciWorkflows]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciWorkflows",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "description",
                  "branchStartCondition",
                  "tagStartCondition",
                  "pullRequestStartCondition",
                  "scheduledStartCondition",
                  "manualBranchStartCondition",
                  "manualTagStartCondition",
                  "manualPullRequestStartCondition",
                  "actions",
                  "isEnabled",
                  "isLockedForEditing",
                  "clean",
                  "containerFilePath",
                  "lastModifiedDate",
                  "product",
                  "repository",
                  "xcodeVersion",
                  "macOsVersion",
                  "buildRuns"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ciProducts]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciProducts",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "createdDate",
                  "productType",
                  "app",
                  "bundleId",
                  "workflows",
                  "primaryRepositories",
                  "additionalRepositories",
                  "buildRuns"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmGitReferences]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmGitReferences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "canonicalName",
                  "isDeleted",
                  "kind",
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmPullRequests]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmPullRequests",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "number",
                  "webUrl",
                  "sourceRepositoryOwner",
                  "sourceRepositoryName",
                  "sourceBranchName",
                  "destinationRepositoryOwner",
                  "destinationRepositoryName",
                  "destinationBranchName",
                  "isClosed",
                  "isCrossRepository",
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "builds",
                  "workflow",
                  "product",
                  "sourceBranchOrTag",
                  "destinationBranch",
                  "pullRequest"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[builds]",
            "in": "query",
            "description": "maximum number of related builds returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of CiBuildRuns",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiBuildRunsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciWorkflows/{id}/repository": {
      "get": {
        "tags": [
          "CiWorkflows"
        ],
        "operationId": "ciWorkflows_repository_getToOneRelated",
        "parameters": [
          {
            "name": "fields[scmRepositories]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmRepositories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lastAccessedDate",
                  "httpCloneUrl",
                  "sshCloneUrl",
                  "ownerName",
                  "repositoryName",
                  "scmProvider",
                  "defaultBranch",
                  "gitReferences",
                  "pullRequests"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmProviders]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmProviders",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "scmProviderType",
                  "url",
                  "repositories"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmGitReferences]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmGitReferences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "canonicalName",
                  "isDeleted",
                  "kind",
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "scmProvider",
                  "defaultBranch"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single ScmRepository",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScmRepositoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/ciXcodeVersions/{id}/macOsVersions": {
      "get": {
        "tags": [
          "CiXcodeVersions"
        ],
        "operationId": "ciXcodeVersions_macOsVersions_getToManyRelated",
        "parameters": [
          {
            "name": "fields[ciMacOsVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciMacOsVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "name",
                  "xcodeVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ciXcodeVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type ciXcodeVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "name",
                  "testDestinations",
                  "macOsVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "xcodeVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[xcodeVersions]",
            "in": "query",
            "description": "maximum number of related xcodeVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of CiMacOsVersions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CiMacOsVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/customerReviews/{id}/response": {
      "get": {
        "tags": [
          "CustomerReviews"
        ],
        "operationId": "customerReviews_response_getToOneRelated",
        "parameters": [
          {
            "name": "fields[customerReviewResponses]",
            "in": "query",
            "description": "the fields to include for returned resources of type customerReviewResponses",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "responseBody",
                  "lastModifiedDate",
                  "state",
                  "review"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[customerReviews]",
            "in": "query",
            "description": "the fields to include for returned resources of type customerReviews",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "rating",
                  "title",
                  "body",
                  "reviewerNickname",
                  "createdDate",
                  "territory",
                  "response"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "review"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single CustomerReviewResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReviewResponseV1Response"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/diagnosticSignatures/{id}/logs": {
      "get": {
        "tags": [
          "DiagnosticSignatures"
        ],
        "operationId": "diagnosticSignatures_logs_getToManyRelated",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of DiagnosticLogs",
            "content": {
              "application/vnd.apple.diagnostic-logs+json": {
                "schema": {
                  "$ref": "#/components/schemas/diagnosticLogs"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/endUserLicenseAgreements/{id}/territories": {
      "get": {
        "tags": [
          "EndUserLicenseAgreements"
        ],
        "operationId": "endUserLicenseAgreements_territories_getToManyRelated",
        "parameters": [
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Territories with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerritoriesWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterAchievementLocalizations/{id}/gameCenterAchievement": {
      "get": {
        "tags": [
          "GameCenterAchievementLocalizations"
        ],
        "operationId": "gameCenterAchievementLocalizations_gameCenterAchievement_getToOneRelated",
        "parameters": [
          {
            "name": "fields[gameCenterAchievements]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "points",
                  "showBeforeEarned",
                  "repeatable",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievementLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "beforeEarnedDescription",
                  "afterEarnedDescription",
                  "gameCenterAchievement",
                  "gameCenterAchievementImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievementReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterAchievement"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[releases]",
            "in": "query",
            "description": "maximum number of related releases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterAchievement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterAchievementLocalizations/{id}/gameCenterAchievementImage": {
      "get": {
        "tags": [
          "GameCenterAchievementLocalizations"
        ],
        "operationId": "gameCenterAchievementLocalizations_gameCenterAchievementImage_getToOneRelated",
        "parameters": [
          {
            "name": "fields[gameCenterAchievementImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState",
                  "gameCenterAchievementLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievementLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "beforeEarnedDescription",
                  "afterEarnedDescription",
                  "gameCenterAchievement",
                  "gameCenterAchievementImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterAchievementLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterAchievementImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementImageResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterAchievements/{id}/relationships/groupAchievement": {
      "get": {
        "tags": [
          "GameCenterAchievements"
        ],
        "operationId": "gameCenterAchievements_groupAchievement_getToOneRelationship",
        "deprecated": true,
        "parameters": [],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Related linkage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementGroupAchievementLinkageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterAchievements"
        ],
        "operationId": "gameCenterAchievements_groupAchievement_updateToOneRelationship",
        "deprecated": true,
        "requestBody": {
          "description": "Related linkage",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterAchievementGroupAchievementLinkageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterAchievements/{id}/groupAchievement": {
      "get": {
        "tags": [
          "GameCenterAchievements"
        ],
        "operationId": "gameCenterAchievements_groupAchievement_getToOneRelated",
        "deprecated": true,
        "parameters": [
          {
            "name": "fields[gameCenterAchievements]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "points",
                  "showBeforeEarned",
                  "repeatable",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievementLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "beforeEarnedDescription",
                  "afterEarnedDescription",
                  "gameCenterAchievement",
                  "gameCenterAchievementImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievementReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterAchievement"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[releases]",
            "in": "query",
            "description": "maximum number of related releases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterAchievement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterAchievements/{id}/localizations": {
      "get": {
        "tags": [
          "GameCenterAchievements"
        ],
        "operationId": "gameCenterAchievements_localizations_getToManyRelated",
        "parameters": [
          {
            "name": "fields[gameCenterAchievementLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "beforeEarnedDescription",
                  "afterEarnedDescription",
                  "gameCenterAchievement",
                  "gameCenterAchievementImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievements]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "points",
                  "showBeforeEarned",
                  "repeatable",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievementImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState",
                  "gameCenterAchievementLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterAchievement",
                  "gameCenterAchievementImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterAchievementLocalizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterAchievements/{id}/releases": {
      "get": {
        "tags": [
          "GameCenterAchievements"
        ],
        "operationId": "gameCenterAchievements_releases_getToManyRelated",
        "parameters": [
          {
            "name": "filter[live]",
            "in": "query",
            "description": "filter by attribute 'live'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[gameCenterDetail]",
            "in": "query",
            "description": "filter by id(s) of related 'gameCenterDetail'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievementReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterAchievement"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievements]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "points",
                  "showBeforeEarned",
                  "repeatable",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterAchievement"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterAchievementReleases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementReleasesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterAppVersions/{id}/appStoreVersion": {
      "get": {
        "tags": [
          "GameCenterAppVersions"
        ],
        "operationId": "gameCenterAppVersions_appStoreVersion_getToOneRelated",
        "parameters": [
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[ageRatingDeclarations]",
            "in": "query",
            "description": "the fields to include for returned resources of type ageRatingDeclarations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "alcoholTobaccoOrDrugUseOrReferences",
                  "contests",
                  "gamblingAndContests",
                  "gambling",
                  "gamblingSimulated",
                  "kidsAgeBand",
                  "lootBox",
                  "medicalOrTreatmentInformation",
                  "profanityOrCrudeHumor",
                  "sexualContentGraphicAndNudity",
                  "sexualContentOrNudity",
                  "horrorOrFearThemes",
                  "matureOrSuggestiveThemes",
                  "unrestrictedWebAccess",
                  "violenceCartoonOrFantasy",
                  "violenceRealisticProlongedGraphicOrSadistic",
                  "violenceRealistic",
                  "ageRatingOverride",
                  "koreaAgeRatingOverride",
                  "seventeenPlus"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "description",
                  "locale",
                  "keywords",
                  "marketingUrl",
                  "promotionalText",
                  "supportUrl",
                  "whatsNew",
                  "appStoreVersion",
                  "appScreenshotSets",
                  "appPreviewSets"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionPhasedReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionPhasedReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "phasedReleaseState",
                  "startDate",
                  "totalPauseDuration",
                  "currentDayNumber"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAppVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAppVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "enabled",
                  "compatibilityVersions",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[routingAppCoverages]",
            "in": "query",
            "description": "the fields to include for returned resources of type routingAppCoverages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "uploadOperations",
                  "assetDeliveryState",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreReviewDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreReviewDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "contactFirstName",
                  "contactLastName",
                  "contactPhone",
                  "contactEmail",
                  "demoAccountName",
                  "demoAccountPassword",
                  "demoAccountRequired",
                  "notes",
                  "appStoreVersion",
                  "appStoreReviewAttachments"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionSubmissions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionSubmissions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appClipDefaultExperiences]",
            "in": "query",
            "description": "the fields to include for returned resources of type appClipDefaultExperiences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "action",
                  "appClip",
                  "releaseWithAppStoreVersion",
                  "appClipDefaultExperienceLocalizations",
                  "appClipAppStoreReviewDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperiments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperiments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "trafficProportion",
                  "state",
                  "reviewRequired",
                  "startDate",
                  "endDate",
                  "appStoreVersion",
                  "appStoreVersionExperimentTreatments",
                  "platform",
                  "app",
                  "latestControlVersion",
                  "controlVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[alternativeDistributionPackages]",
            "in": "query",
            "description": "the fields to include for returned resources of type alternativeDistributionPackages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "versions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[appStoreVersionLocalizations]",
            "in": "query",
            "description": "maximum number of related appStoreVersionLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[appStoreVersionExperiments]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperiments returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "deprecated": true
          },
          {
            "name": "limit[appStoreVersionExperimentsV2]",
            "in": "query",
            "description": "maximum number of related appStoreVersionExperimentsV2 returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single AppStoreVersion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppStoreVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterAppVersions/{id}/relationships/compatibilityVersions": {
      "get": {
        "tags": [
          "GameCenterAppVersions"
        ],
        "operationId": "gameCenterAppVersions_compatibilityVersions_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAppVersionCompatibilityVersionsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "GameCenterAppVersions"
        ],
        "operationId": "gameCenterAppVersions_compatibilityVersions_createToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterAppVersionCompatibilityVersionsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterAppVersions"
        ],
        "operationId": "gameCenterAppVersions_compatibilityVersions_deleteToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterAppVersionCompatibilityVersionsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterAppVersions/{id}/compatibilityVersions": {
      "get": {
        "tags": [
          "GameCenterAppVersions"
        ],
        "operationId": "gameCenterAppVersions_compatibilityVersions_getToManyRelated",
        "parameters": [
          {
            "name": "filter[enabled]",
            "in": "query",
            "description": "filter by attribute 'enabled'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAppVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAppVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "enabled",
                  "compatibilityVersions",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "compatibilityVersions",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[compatibilityVersions]",
            "in": "query",
            "description": "maximum number of related compatibilityVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterAppVersions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAppVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterDetails/{id}/achievementReleases": {
      "get": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_achievementReleases_getToManyRelated",
        "parameters": [
          {
            "name": "filter[live]",
            "in": "query",
            "description": "filter by attribute 'live'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[gameCenterAchievement]",
            "in": "query",
            "description": "filter by id(s) of related 'gameCenterAchievement'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievementReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterAchievement"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievements]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "points",
                  "showBeforeEarned",
                  "repeatable",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterAchievement"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterAchievementReleases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementReleasesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterDetails/{id}/relationships/gameCenterAchievements": {
      "get": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_gameCenterAchievements_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterDetailGameCenterAchievementsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_gameCenterAchievements_replaceToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterDetailGameCenterAchievementsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterDetails/{id}/gameCenterAchievements": {
      "get": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_gameCenterAchievements_getToManyRelated",
        "parameters": [
          {
            "name": "filter[referenceName]",
            "in": "query",
            "description": "filter by attribute 'referenceName'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[archived]",
            "in": "query",
            "description": "filter by attribute 'archived'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievements]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "points",
                  "showBeforeEarned",
                  "repeatable",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievementLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "beforeEarnedDescription",
                  "afterEarnedDescription",
                  "gameCenterAchievement",
                  "gameCenterAchievementImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievementReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterAchievement"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[releases]",
            "in": "query",
            "description": "maximum number of related releases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterAchievements",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterDetails/{id}/gameCenterAppVersions": {
      "get": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_gameCenterAppVersions_getToManyRelated",
        "parameters": [
          {
            "name": "filter[enabled]",
            "in": "query",
            "description": "filter by attribute 'enabled'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAppVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAppVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "enabled",
                  "compatibilityVersions",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "compatibilityVersions",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[compatibilityVersions]",
            "in": "query",
            "description": "maximum number of related compatibilityVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterAppVersions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAppVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterDetails/{id}/gameCenterGroup": {
      "get": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_gameCenterGroup_getToOneRelated",
        "parameters": [
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievements]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "points",
                  "showBeforeEarned",
                  "repeatable",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[gameCenterDetails]",
            "in": "query",
            "description": "maximum number of related gameCenterDetails returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[gameCenterLeaderboards]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboards returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboardSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[gameCenterAchievements]",
            "in": "query",
            "description": "maximum number of related gameCenterAchievements returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterGroup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterGroupResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterDetails/{id}/relationships/gameCenterLeaderboardSets": {
      "get": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_gameCenterLeaderboardSets_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterDetailGameCenterLeaderboardSetsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_gameCenterLeaderboardSets_replaceToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterDetailGameCenterLeaderboardSetsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterDetails/{id}/gameCenterLeaderboardSets": {
      "get": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_gameCenterLeaderboardSets_getToManyRelated",
        "parameters": [
          {
            "name": "filter[referenceName]",
            "in": "query",
            "description": "filter by attribute 'referenceName'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "gameCenterLeaderboardSet",
                  "gameCenterLeaderboardSetImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[gameCenterLeaderboards]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboards returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[releases]",
            "in": "query",
            "description": "maximum number of related releases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterLeaderboardSets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterDetails/{id}/relationships/gameCenterLeaderboards": {
      "get": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_gameCenterLeaderboards_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterDetailGameCenterLeaderboardsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_gameCenterLeaderboards_replaceToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterDetailGameCenterLeaderboardsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterDetails/{id}/gameCenterLeaderboards": {
      "get": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_gameCenterLeaderboards_getToManyRelated",
        "parameters": [
          {
            "name": "filter[referenceName]",
            "in": "query",
            "description": "filter by attribute 'referenceName'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[archived]",
            "in": "query",
            "description": "filter by attribute 'archived'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "formatterOverride",
                  "formatterSuffix",
                  "formatterSuffixSingular",
                  "gameCenterLeaderboard",
                  "gameCenterLeaderboardImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboardSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[releases]",
            "in": "query",
            "description": "maximum number of related releases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterLeaderboards",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterDetails/{id}/leaderboardReleases": {
      "get": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_leaderboardReleases_getToManyRelated",
        "parameters": [
          {
            "name": "filter[live]",
            "in": "query",
            "description": "filter by attribute 'live'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[gameCenterLeaderboard]",
            "in": "query",
            "description": "filter by id(s) of related 'gameCenterLeaderboard'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterLeaderboardReleases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardReleasesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterDetails/{id}/leaderboardSetReleases": {
      "get": {
        "tags": [
          "GameCenterDetails"
        ],
        "operationId": "gameCenterDetails_leaderboardSetReleases_getToManyRelated",
        "parameters": [
          {
            "name": "filter[live]",
            "in": "query",
            "description": "filter by attribute 'live'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[gameCenterLeaderboardSet]",
            "in": "query",
            "description": "filter by id(s) of related 'gameCenterLeaderboardSet'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterLeaderboardSetReleases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetReleasesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions": {
      "get": {
        "tags": [
          "GameCenterEnabledVersions"
        ],
        "operationId": "gameCenterEnabledVersions_compatibleVersions_getToManyRelationship",
        "deprecated": true,
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "GameCenterEnabledVersions"
        ],
        "operationId": "gameCenterEnabledVersions_compatibleVersions_createToManyRelationship",
        "deprecated": true,
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterEnabledVersions"
        ],
        "operationId": "gameCenterEnabledVersions_compatibleVersions_replaceToManyRelationship",
        "deprecated": true,
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterEnabledVersions"
        ],
        "operationId": "gameCenterEnabledVersions_compatibleVersions_deleteToManyRelationship",
        "deprecated": true,
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterEnabledVersions/{id}/compatibleVersions": {
      "get": {
        "tags": [
          "GameCenterEnabledVersions"
        ],
        "operationId": "gameCenterEnabledVersions_compatibleVersions_getToManyRelated",
        "deprecated": true,
        "parameters": [
          {
            "name": "filter[platform]",
            "in": "query",
            "description": "filter by attribute 'platform'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IOS",
                  "MAC_OS",
                  "TV_OS",
                  "VISION_OS"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[versionString]",
            "in": "query",
            "description": "filter by attribute 'versionString'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[app]",
            "in": "query",
            "description": "filter by id(s) of related 'app'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "versionString",
                  "-versionString"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterEnabledVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterEnabledVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "iconAsset",
                  "compatibleVersions",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "compatibleVersions",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[compatibleVersions]",
            "in": "query",
            "description": "maximum number of related compatibleVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "deprecated": true
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterEnabledVersions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterEnabledVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterGroups/{id}/relationships/gameCenterAchievements": {
      "get": {
        "tags": [
          "GameCenterGroups"
        ],
        "operationId": "gameCenterGroups_gameCenterAchievements_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterGroupGameCenterAchievementsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterGroups"
        ],
        "operationId": "gameCenterGroups_gameCenterAchievements_replaceToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterGroupGameCenterAchievementsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterGroups/{id}/gameCenterAchievements": {
      "get": {
        "tags": [
          "GameCenterGroups"
        ],
        "operationId": "gameCenterGroups_gameCenterAchievements_getToManyRelated",
        "parameters": [
          {
            "name": "filter[referenceName]",
            "in": "query",
            "description": "filter by attribute 'referenceName'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[archived]",
            "in": "query",
            "description": "filter by attribute 'archived'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievements]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "points",
                  "showBeforeEarned",
                  "repeatable",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievementLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "beforeEarnedDescription",
                  "afterEarnedDescription",
                  "gameCenterAchievement",
                  "gameCenterAchievementImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievementReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterAchievement"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[releases]",
            "in": "query",
            "description": "maximum number of related releases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterAchievements",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterAchievementsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterGroups/{id}/gameCenterDetails": {
      "get": {
        "tags": [
          "GameCenterGroups"
        ],
        "operationId": "gameCenterGroups_gameCenterDetails_getToManyRelated",
        "parameters": [
          {
            "name": "filter[gameCenterAppVersions.enabled]",
            "in": "query",
            "description": "filter by attribute 'gameCenterAppVersions.enabled'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAppVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAppVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "enabled",
                  "compatibilityVersions",
                  "appStoreVersion"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievements]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievements",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "points",
                  "showBeforeEarned",
                  "repeatable",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupAchievement",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterAchievementReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterAchievementReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterAchievement"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[gameCenterAppVersions]",
            "in": "query",
            "description": "maximum number of related gameCenterAppVersions returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[gameCenterLeaderboards]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboards returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboardSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[gameCenterAchievements]",
            "in": "query",
            "description": "maximum number of related gameCenterAchievements returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[achievementReleases]",
            "in": "query",
            "description": "maximum number of related achievementReleases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[leaderboardReleases]",
            "in": "query",
            "description": "maximum number of related leaderboardReleases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[leaderboardSetReleases]",
            "in": "query",
            "description": "maximum number of related leaderboardSetReleases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterDetails",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterDetailsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterGroups/{id}/relationships/gameCenterLeaderboardSets": {
      "get": {
        "tags": [
          "GameCenterGroups"
        ],
        "operationId": "gameCenterGroups_gameCenterLeaderboardSets_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterGroupGameCenterLeaderboardSetsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterGroups"
        ],
        "operationId": "gameCenterGroups_gameCenterLeaderboardSets_replaceToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterGroupGameCenterLeaderboardSetsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterGroups/{id}/gameCenterLeaderboardSets": {
      "get": {
        "tags": [
          "GameCenterGroups"
        ],
        "operationId": "gameCenterGroups_gameCenterLeaderboardSets_getToManyRelated",
        "parameters": [
          {
            "name": "filter[referenceName]",
            "in": "query",
            "description": "filter by attribute 'referenceName'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "gameCenterLeaderboardSet",
                  "gameCenterLeaderboardSetImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[gameCenterLeaderboards]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboards returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[releases]",
            "in": "query",
            "description": "maximum number of related releases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterLeaderboardSets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterGroups/{id}/relationships/gameCenterLeaderboards": {
      "get": {
        "tags": [
          "GameCenterGroups"
        ],
        "operationId": "gameCenterGroups_gameCenterLeaderboards_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterGroupGameCenterLeaderboardsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterGroups"
        ],
        "operationId": "gameCenterGroups_gameCenterLeaderboards_replaceToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterGroupGameCenterLeaderboardsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterGroups/{id}/gameCenterLeaderboards": {
      "get": {
        "tags": [
          "GameCenterGroups"
        ],
        "operationId": "gameCenterGroups_gameCenterLeaderboards_getToManyRelated",
        "parameters": [
          {
            "name": "filter[referenceName]",
            "in": "query",
            "description": "filter by attribute 'referenceName'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[archived]",
            "in": "query",
            "description": "filter by attribute 'archived'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "formatterOverride",
                  "formatterSuffix",
                  "formatterSuffixSingular",
                  "gameCenterLeaderboard",
                  "gameCenterLeaderboardImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboardSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[releases]",
            "in": "query",
            "description": "maximum number of related releases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterLeaderboards",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardLocalizations/{id}/gameCenterLeaderboardImage": {
      "get": {
        "tags": [
          "GameCenterLeaderboardLocalizations"
        ],
        "operationId": "gameCenterLeaderboardLocalizations_gameCenterLeaderboardImage_getToOneRelated",
        "parameters": [
          {
            "name": "fields[gameCenterLeaderboardImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState",
                  "gameCenterLeaderboardLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "formatterOverride",
                  "formatterSuffix",
                  "formatterSuffixSingular",
                  "gameCenterLeaderboard",
                  "gameCenterLeaderboardImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardImageResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardSetLocalizations/{id}/gameCenterLeaderboardSetImage": {
      "get": {
        "tags": [
          "GameCenterLeaderboardSetLocalizations"
        ],
        "operationId": "gameCenterLeaderboardSetLocalizations_gameCenterLeaderboardSetImage_getToOneRelated",
        "parameters": [
          {
            "name": "fields[gameCenterLeaderboardSetImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState",
                  "gameCenterLeaderboardSetLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "gameCenterLeaderboardSet",
                  "gameCenterLeaderboardSetImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardSetLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardSetImage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetImageResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardSetMemberLocalizations/{id}/gameCenterLeaderboard": {
      "get": {
        "tags": [
          "GameCenterLeaderboardSetMemberLocalizations"
        ],
        "operationId": "gameCenterLeaderboardSetMemberLocalizations_gameCenterLeaderboard_getToOneRelated",
        "parameters": [
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "formatterOverride",
                  "formatterSuffix",
                  "formatterSuffixSingular",
                  "gameCenterLeaderboard",
                  "gameCenterLeaderboardImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboardSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[releases]",
            "in": "query",
            "description": "maximum number of related releases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboard",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardSetMemberLocalizations/{id}/gameCenterLeaderboardSet": {
      "get": {
        "tags": [
          "GameCenterLeaderboardSetMemberLocalizations"
        ],
        "operationId": "gameCenterLeaderboardSetMemberLocalizations_gameCenterLeaderboardSet_getToOneRelated",
        "parameters": [
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "gameCenterLeaderboardSet",
                  "gameCenterLeaderboardSetImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[gameCenterLeaderboards]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboards returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[releases]",
            "in": "query",
            "description": "maximum number of related releases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardSet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardSets/{id}/relationships/gameCenterLeaderboards": {
      "get": {
        "tags": [
          "GameCenterLeaderboardSets"
        ],
        "operationId": "gameCenterLeaderboardSets_gameCenterLeaderboards_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetGameCenterLeaderboardsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "GameCenterLeaderboardSets"
        ],
        "operationId": "gameCenterLeaderboardSets_gameCenterLeaderboards_createToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardSetGameCenterLeaderboardsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterLeaderboardSets"
        ],
        "operationId": "gameCenterLeaderboardSets_gameCenterLeaderboards_replaceToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardSetGameCenterLeaderboardsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "delete": {
        "tags": [
          "GameCenterLeaderboardSets"
        ],
        "operationId": "gameCenterLeaderboardSets_gameCenterLeaderboards_deleteToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardSetGameCenterLeaderboardsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardSets/{id}/gameCenterLeaderboards": {
      "get": {
        "tags": [
          "GameCenterLeaderboardSets"
        ],
        "operationId": "gameCenterLeaderboardSets_gameCenterLeaderboards_getToManyRelated",
        "parameters": [
          {
            "name": "filter[referenceName]",
            "in": "query",
            "description": "filter by attribute 'referenceName'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[archived]",
            "in": "query",
            "description": "filter by attribute 'archived'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "formatterOverride",
                  "formatterSuffix",
                  "formatterSuffixSingular",
                  "gameCenterLeaderboard",
                  "gameCenterLeaderboardImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboardSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[releases]",
            "in": "query",
            "description": "maximum number of related releases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterLeaderboards",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardSets/{id}/relationships/groupLeaderboardSet": {
      "get": {
        "tags": [
          "GameCenterLeaderboardSets"
        ],
        "operationId": "gameCenterLeaderboardSets_groupLeaderboardSet_getToOneRelationship",
        "deprecated": true,
        "parameters": [],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Related linkage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetGroupLeaderboardSetLinkageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterLeaderboardSets"
        ],
        "operationId": "gameCenterLeaderboardSets_groupLeaderboardSet_updateToOneRelationship",
        "deprecated": true,
        "requestBody": {
          "description": "Related linkage",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardSetGroupLeaderboardSetLinkageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardSets/{id}/groupLeaderboardSet": {
      "get": {
        "tags": [
          "GameCenterLeaderboardSets"
        ],
        "operationId": "gameCenterLeaderboardSets_groupLeaderboardSet_getToOneRelated",
        "deprecated": true,
        "parameters": [
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "gameCenterLeaderboardSet",
                  "gameCenterLeaderboardSetImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[gameCenterLeaderboards]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboards returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[releases]",
            "in": "query",
            "description": "maximum number of related releases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboardSet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardSets/{id}/localizations": {
      "get": {
        "tags": [
          "GameCenterLeaderboardSets"
        ],
        "operationId": "gameCenterLeaderboardSets_localizations_getToManyRelated",
        "parameters": [
          {
            "name": "fields[gameCenterLeaderboardSetLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "gameCenterLeaderboardSet",
                  "gameCenterLeaderboardSetImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState",
                  "gameCenterLeaderboardSetLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardSet",
                  "gameCenterLeaderboardSetImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterLeaderboardSetLocalizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboardSets/{id}/releases": {
      "get": {
        "tags": [
          "GameCenterLeaderboardSets"
        ],
        "operationId": "gameCenterLeaderboardSets_releases_getToManyRelated",
        "parameters": [
          {
            "name": "filter[live]",
            "in": "query",
            "description": "filter by attribute 'live'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[gameCenterDetail]",
            "in": "query",
            "description": "filter by id(s) of related 'gameCenterDetail'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSetReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSetReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterLeaderboardSetReleases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetReleasesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboards/{id}/relationships/groupLeaderboard": {
      "get": {
        "tags": [
          "GameCenterLeaderboards"
        ],
        "operationId": "gameCenterLeaderboards_groupLeaderboard_getToOneRelationship",
        "deprecated": true,
        "parameters": [],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Related linkage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardGroupLeaderboardLinkageResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GameCenterLeaderboards"
        ],
        "operationId": "gameCenterLeaderboards_groupLeaderboard_updateToOneRelationship",
        "deprecated": true,
        "requestBody": {
          "description": "Related linkage",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameCenterLeaderboardGroupLeaderboardLinkageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboards/{id}/groupLeaderboard": {
      "get": {
        "tags": [
          "GameCenterLeaderboards"
        ],
        "operationId": "gameCenterLeaderboards_groupLeaderboard_getToOneRelated",
        "deprecated": true,
        "parameters": [
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "gameCenterDetails",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "vendorIdentifier",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboardSet",
                  "localizations",
                  "gameCenterLeaderboards",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "formatterOverride",
                  "formatterSuffix",
                  "formatterSuffixSingular",
                  "gameCenterLeaderboard",
                  "gameCenterLeaderboardImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[gameCenterLeaderboardSets]",
            "in": "query",
            "description": "maximum number of related gameCenterLeaderboardSets returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[localizations]",
            "in": "query",
            "description": "maximum number of related localizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[releases]",
            "in": "query",
            "description": "maximum number of related releases returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single GameCenterLeaderboard",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboards/{id}/localizations": {
      "get": {
        "tags": [
          "GameCenterLeaderboards"
        ],
        "operationId": "gameCenterLeaderboards_localizations_getToManyRelated",
        "parameters": [
          {
            "name": "fields[gameCenterLeaderboardLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "locale",
                  "name",
                  "formatterOverride",
                  "formatterSuffix",
                  "formatterSuffixSingular",
                  "gameCenterLeaderboard",
                  "gameCenterLeaderboardImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "imageAsset",
                  "uploadOperations",
                  "assetDeliveryState",
                  "gameCenterLeaderboardLocalization"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboard",
                  "gameCenterLeaderboardImage"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterLeaderboardLocalizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterLeaderboards/{id}/releases": {
      "get": {
        "tags": [
          "GameCenterLeaderboards"
        ],
        "operationId": "gameCenterLeaderboards_releases_getToManyRelated",
        "parameters": [
          {
            "name": "filter[live]",
            "in": "query",
            "description": "filter by attribute 'live'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[gameCenterDetail]",
            "in": "query",
            "description": "filter by id(s) of related 'gameCenterDetail'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboardReleases]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboardReleases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "live",
                  "gameCenterDetail",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterDetails]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterDetails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "arcadeEnabled",
                  "challengeEnabled",
                  "app",
                  "gameCenterAppVersions",
                  "gameCenterGroup",
                  "gameCenterLeaderboards",
                  "gameCenterLeaderboardSets",
                  "gameCenterAchievements",
                  "defaultLeaderboard",
                  "defaultGroupLeaderboard",
                  "achievementReleases",
                  "leaderboardReleases",
                  "leaderboardSetReleases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterLeaderboards]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterLeaderboards",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "defaultFormatter",
                  "referenceName",
                  "vendorIdentifier",
                  "submissionType",
                  "scoreSortType",
                  "scoreRangeStart",
                  "scoreRangeEnd",
                  "recurrenceStartDate",
                  "recurrenceDuration",
                  "recurrenceRule",
                  "archived",
                  "gameCenterDetail",
                  "gameCenterGroup",
                  "groupLeaderboard",
                  "gameCenterLeaderboardSets",
                  "localizations",
                  "releases"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterDetail",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterLeaderboardReleases",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterLeaderboardReleasesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterMatchmakingRuleSets/{id}/matchmakingQueues": {
      "get": {
        "tags": [
          "GameCenterMatchmakingRuleSets"
        ],
        "operationId": "gameCenterMatchmakingRuleSets_matchmakingQueues_getToManyRelated",
        "parameters": [
          {
            "name": "fields[gameCenterMatchmakingQueues]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterMatchmakingQueues",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "classicMatchmakingBundleIds",
                  "ruleSet",
                  "experimentRuleSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[gameCenterMatchmakingRuleSets]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterMatchmakingRuleSets",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "ruleLanguageVersion",
                  "minPlayers",
                  "maxPlayers",
                  "teams",
                  "rules",
                  "matchmakingQueues"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ruleSet",
                  "experimentRuleSet"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterMatchmakingQueues",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingQueuesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterMatchmakingRuleSets/{id}/rules": {
      "get": {
        "tags": [
          "GameCenterMatchmakingRuleSets"
        ],
        "operationId": "gameCenterMatchmakingRuleSets_rules_getToManyRelated",
        "parameters": [
          {
            "name": "fields[gameCenterMatchmakingRules]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterMatchmakingRules",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "description",
                  "type",
                  "expression",
                  "weight"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterMatchmakingRules",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingRulesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterMatchmakingRuleSets/{id}/teams": {
      "get": {
        "tags": [
          "GameCenterMatchmakingRuleSets"
        ],
        "operationId": "gameCenterMatchmakingRuleSets_teams_getToManyRelated",
        "parameters": [
          {
            "name": "fields[gameCenterMatchmakingTeams]",
            "in": "query",
            "description": "the fields to include for returned resources of type gameCenterMatchmakingTeams",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "minPlayers",
                  "maxPlayers"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of GameCenterMatchmakingTeams",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingTeamsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/inAppPurchaseAvailabilities/{id}/availableTerritories": {
      "get": {
        "tags": [
          "InAppPurchaseAvailabilities"
        ],
        "operationId": "inAppPurchaseAvailabilities_availableTerritories_getToManyRelated",
        "parameters": [
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Territories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerritoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/inAppPurchasePricePoints/{id}/equalizations": {
      "get": {
        "tags": [
          "InAppPurchasePricePoints"
        ],
        "operationId": "inAppPurchasePricePoints_equalizations_getToManyRelated",
        "parameters": [
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by id(s) of related 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[inAppPurchaseV2]",
            "in": "query",
            "description": "filter by id(s) of related 'inAppPurchaseV2'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchasePricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchasePricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "territory",
                  "equalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 8000
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of InAppPurchasePricePoints",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchasePricePointsResponse"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/csv"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/inAppPurchasePriceSchedules/{id}/automaticPrices": {
      "get": {
        "tags": [
          "InAppPurchasePriceSchedules"
        ],
        "operationId": "inAppPurchasePriceSchedules_automaticPrices_getToManyRelated",
        "parameters": [
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by id(s) of related 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchasePrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchasePrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "startDate",
                  "endDate",
                  "manual",
                  "inAppPurchasePricePoint",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchasePricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchasePricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "territory",
                  "equalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inAppPurchasePricePoint",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of InAppPurchasePrices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchasePricesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/inAppPurchasePriceSchedules/{id}/baseTerritory": {
      "get": {
        "tags": [
          "InAppPurchasePriceSchedules"
        ],
        "operationId": "inAppPurchasePriceSchedules_baseTerritory_getToOneRelated",
        "parameters": [
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single Territory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerritoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/inAppPurchasePriceSchedules/{id}/manualPrices": {
      "get": {
        "tags": [
          "InAppPurchasePriceSchedules"
        ],
        "operationId": "inAppPurchasePriceSchedules_manualPrices_getToManyRelated",
        "parameters": [
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by id(s) of related 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchasePrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchasePrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "startDate",
                  "endDate",
                  "manual",
                  "inAppPurchasePricePoint",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchasePricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchasePricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "territory",
                  "equalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inAppPurchasePricePoint",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of InAppPurchasePrices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchasePricesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v2/inAppPurchases/{id}/appStoreReviewScreenshot": {
      "get": {
        "tags": [
          "InAppPurchases"
        ],
        "operationId": "inAppPurchasesV2_appStoreReviewScreenshot_getToOneRelated",
        "parameters": [
          {
            "name": "fields[inAppPurchaseAppStoreReviewScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseAppStoreReviewScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "assetToken",
                  "assetType",
                  "uploadOperations",
                  "assetDeliveryState",
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "inAppPurchaseType",
                  "state",
                  "reviewNote",
                  "familySharable",
                  "contentHosting",
                  "inAppPurchaseLocalizations",
                  "pricePoints",
                  "content",
                  "appStoreReviewScreenshot",
                  "promotedPurchase",
                  "iapPriceSchedule",
                  "inAppPurchaseAvailability",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single InAppPurchaseAppStoreReviewScreenshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseAppStoreReviewScreenshotResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v2/inAppPurchases/{id}/content": {
      "get": {
        "tags": [
          "InAppPurchases"
        ],
        "operationId": "inAppPurchasesV2_content_getToOneRelated",
        "parameters": [
          {
            "name": "fields[inAppPurchaseContents]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseContents",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileName",
                  "fileSize",
                  "url",
                  "lastModifiedDate",
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "inAppPurchaseType",
                  "state",
                  "reviewNote",
                  "familySharable",
                  "contentHosting",
                  "inAppPurchaseLocalizations",
                  "pricePoints",
                  "content",
                  "appStoreReviewScreenshot",
                  "promotedPurchase",
                  "iapPriceSchedule",
                  "inAppPurchaseAvailability",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single InAppPurchaseContent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseContentResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v2/inAppPurchases/{id}/iapPriceSchedule": {
      "get": {
        "tags": [
          "InAppPurchases"
        ],
        "operationId": "inAppPurchasesV2_iapPriceSchedule_getToOneRelated",
        "parameters": [
          {
            "name": "fields[inAppPurchasePriceSchedules]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchasePriceSchedules",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "baseTerritory",
                  "manualPrices",
                  "automaticPrices"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchasePrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchasePrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "startDate",
                  "endDate",
                  "manual",
                  "inAppPurchasePricePoint",
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "baseTerritory",
                  "manualPrices",
                  "automaticPrices"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[manualPrices]",
            "in": "query",
            "description": "maximum number of related manualPrices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[automaticPrices]",
            "in": "query",
            "description": "maximum number of related automaticPrices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single InAppPurchasePriceSchedule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchasePriceScheduleResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v2/inAppPurchases/{id}/images": {
      "get": {
        "tags": [
          "InAppPurchases"
        ],
        "operationId": "inAppPurchasesV2_images_getToManyRelated",
        "parameters": [
          {
            "name": "fields[inAppPurchaseImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "assetToken",
                  "imageAsset",
                  "uploadOperations",
                  "state",
                  "inAppPurchase"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "inAppPurchaseType",
                  "state",
                  "reviewNote",
                  "familySharable",
                  "contentHosting",
                  "inAppPurchaseLocalizations",
                  "pricePoints",
                  "content",
                  "appStoreReviewScreenshot",
                  "promotedPurchase",
                  "iapPriceSchedule",
                  "inAppPurchaseAvailability",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inAppPurchase"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of InAppPurchaseImages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseImagesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v2/inAppPurchases/{id}/inAppPurchaseAvailability": {
      "get": {
        "tags": [
          "InAppPurchases"
        ],
        "operationId": "inAppPurchasesV2_inAppPurchaseAvailability_getToOneRelated",
        "parameters": [
          {
            "name": "fields[inAppPurchaseAvailabilities]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseAvailabilities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "availableInNewTerritories",
                  "availableTerritories"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "availableTerritories"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[availableTerritories]",
            "in": "query",
            "description": "maximum number of related availableTerritories returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single InAppPurchaseAvailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseAvailabilityResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v2/inAppPurchases/{id}/inAppPurchaseLocalizations": {
      "get": {
        "tags": [
          "InAppPurchases"
        ],
        "operationId": "inAppPurchasesV2_inAppPurchaseLocalizations_getToManyRelated",
        "parameters": [
          {
            "name": "fields[inAppPurchaseLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchaseLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "locale",
                  "description",
                  "state",
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "inAppPurchaseType",
                  "state",
                  "reviewNote",
                  "familySharable",
                  "contentHosting",
                  "inAppPurchaseLocalizations",
                  "pricePoints",
                  "content",
                  "appStoreReviewScreenshot",
                  "promotedPurchase",
                  "iapPriceSchedule",
                  "inAppPurchaseAvailability",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inAppPurchaseV2"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of InAppPurchaseLocalizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchaseLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v2/inAppPurchases/{id}/pricePoints": {
      "get": {
        "tags": [
          "InAppPurchases"
        ],
        "operationId": "inAppPurchasesV2_pricePoints_getToManyRelated",
        "parameters": [
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by id(s) of related 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchasePricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchasePricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "territory",
                  "equalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 8000
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of InAppPurchasePricePoints",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InAppPurchasePricePointsResponse"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/csv"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v2/inAppPurchases/{id}/promotedPurchase": {
      "get": {
        "tags": [
          "InAppPurchases"
        ],
        "operationId": "inAppPurchasesV2_promotedPurchase_getToOneRelated",
        "parameters": [
          {
            "name": "fields[promotedPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "visibleForAllUsers",
                  "enabled",
                  "state",
                  "inAppPurchaseV2",
                  "subscription",
                  "promotionImages"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "inAppPurchaseType",
                  "state",
                  "reviewNote",
                  "familySharable",
                  "contentHosting",
                  "inAppPurchaseLocalizations",
                  "pricePoints",
                  "content",
                  "appStoreReviewScreenshot",
                  "promotedPurchase",
                  "iapPriceSchedule",
                  "inAppPurchaseAvailability",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptions]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "familySharable",
                  "state",
                  "subscriptionPeriod",
                  "reviewNote",
                  "groupLevel",
                  "subscriptionLocalizations",
                  "appStoreReviewScreenshot",
                  "group",
                  "introductoryOffers",
                  "promotionalOffers",
                  "offerCodes",
                  "prices",
                  "pricePoints",
                  "promotedPurchase",
                  "subscriptionAvailability",
                  "winBackOffers",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[promotedPurchaseImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchaseImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "assetToken",
                  "imageAsset",
                  "assetType",
                  "uploadOperations",
                  "state",
                  "promotedPurchase"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inAppPurchaseV2",
                  "subscription",
                  "promotionImages"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[promotionImages]",
            "in": "query",
            "description": "maximum number of related promotionImages returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "deprecated": true
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single PromotedPurchase",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotedPurchaseResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/preReleaseVersions/{id}/app": {
      "get": {
        "tags": [
          "PreReleaseVersions"
        ],
        "operationId": "preReleaseVersions_app_getToOneRelated",
        "parameters": [
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single App with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/preReleaseVersions/{id}/builds": {
      "get": {
        "tags": [
          "PreReleaseVersions"
        ],
        "operationId": "preReleaseVersions_builds_getToManyRelated",
        "parameters": [
          {
            "name": "fields[builds]",
            "in": "query",
            "description": "the fields to include for returned resources of type builds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "uploadedDate",
                  "expirationDate",
                  "expired",
                  "minOsVersion",
                  "lsMinimumSystemVersion",
                  "computedMinMacOsVersion",
                  "iconAssetToken",
                  "processingState",
                  "buildAudienceType",
                  "usesNonExemptEncryption",
                  "preReleaseVersion",
                  "individualTesters",
                  "betaGroups",
                  "betaBuildLocalizations",
                  "appEncryptionDeclaration",
                  "betaAppReviewSubmission",
                  "app",
                  "buildBetaDetail",
                  "appStoreVersion",
                  "icons",
                  "buildBundles",
                  "perfPowerMetrics",
                  "diagnosticSignatures"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Builds with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildsWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/profiles/{id}/bundleId": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "operationId": "profiles_bundleId_getToOneRelated",
        "parameters": [
          {
            "name": "fields[bundleIds]",
            "in": "query",
            "description": "the fields to include for returned resources of type bundleIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "identifier",
                  "seedId",
                  "profiles",
                  "bundleIdCapabilities",
                  "app"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single BundleId with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleIdWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/profiles/{id}/certificates": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "operationId": "profiles_certificates_getToManyRelated",
        "parameters": [
          {
            "name": "fields[certificates]",
            "in": "query",
            "description": "the fields to include for returned resources of type certificates",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "certificateType",
                  "displayName",
                  "serialNumber",
                  "platform",
                  "expirationDate",
                  "certificateContent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Certificates with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificatesWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/profiles/{id}/devices": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "operationId": "profiles_devices_getToManyRelated",
        "parameters": [
          {
            "name": "fields[devices]",
            "in": "query",
            "description": "the fields to include for returned resources of type devices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "platform",
                  "udid",
                  "deviceClass",
                  "status",
                  "model",
                  "addedDate"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Devices with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicesWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/promotedPurchases/{id}/promotionImages": {
      "get": {
        "tags": [
          "PromotedPurchases"
        ],
        "operationId": "promotedPurchases_promotionImages_getToManyRelated",
        "deprecated": true,
        "parameters": [
          {
            "name": "fields[promotedPurchaseImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchaseImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "assetToken",
                  "imageAsset",
                  "assetType",
                  "uploadOperations",
                  "state",
                  "promotedPurchase"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[promotedPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "visibleForAllUsers",
                  "enabled",
                  "state",
                  "inAppPurchaseV2",
                  "subscription",
                  "promotionImages"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "promotedPurchase"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of PromotedPurchaseImages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotedPurchaseImagesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/reviewSubmissions/{id}/items": {
      "get": {
        "tags": [
          "ReviewSubmissions"
        ],
        "operationId": "reviewSubmissions_items_getToManyRelated",
        "parameters": [
          {
            "name": "fields[reviewSubmissionItems]",
            "in": "query",
            "description": "the fields to include for returned resources of type reviewSubmissionItems",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "state",
                  "appStoreVersion",
                  "appCustomProductPageVersion",
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appEvent"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "platform",
                  "versionString",
                  "appStoreState",
                  "appVersionState",
                  "copyright",
                  "reviewType",
                  "releaseType",
                  "earliestReleaseDate",
                  "downloadable",
                  "createdDate",
                  "app",
                  "ageRatingDeclaration",
                  "appStoreVersionLocalizations",
                  "build",
                  "appStoreVersionPhasedRelease",
                  "gameCenterAppVersion",
                  "routingAppCoverage",
                  "appStoreReviewDetail",
                  "appStoreVersionSubmission",
                  "appClipDefaultExperience",
                  "appStoreVersionExperiments",
                  "appStoreVersionExperimentsV2",
                  "customerReviews",
                  "alternativeDistributionPackage"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appCustomProductPageVersions]",
            "in": "query",
            "description": "the fields to include for returned resources of type appCustomProductPageVersions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "version",
                  "state",
                  "deepLink",
                  "appCustomProductPage",
                  "appCustomProductPageLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appStoreVersionExperiments]",
            "in": "query",
            "description": "the fields to include for returned resources of type appStoreVersionExperiments",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "trafficProportion",
                  "state",
                  "reviewRequired",
                  "startDate",
                  "endDate",
                  "appStoreVersion",
                  "appStoreVersionExperimentTreatments",
                  "platform",
                  "app",
                  "latestControlVersion",
                  "controlVersions"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[appEvents]",
            "in": "query",
            "description": "the fields to include for returned resources of type appEvents",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "badge",
                  "eventState",
                  "deepLink",
                  "purchaseRequirement",
                  "primaryLocale",
                  "priority",
                  "purpose",
                  "territorySchedules",
                  "archivedTerritorySchedules",
                  "localizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "appStoreVersion",
                  "appCustomProductPageVersion",
                  "appStoreVersionExperiment",
                  "appStoreVersionExperimentV2",
                  "appEvent"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of ReviewSubmissionItems",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewSubmissionItemsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/scmProviders/{id}/repositories": {
      "get": {
        "tags": [
          "ScmProviders"
        ],
        "operationId": "scmProviders_repositories_getToManyRelated",
        "parameters": [
          {
            "name": "filter[id]",
            "in": "query",
            "description": "filter by id(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmRepositories]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmRepositories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lastAccessedDate",
                  "httpCloneUrl",
                  "sshCloneUrl",
                  "ownerName",
                  "repositoryName",
                  "scmProvider",
                  "defaultBranch",
                  "gitReferences",
                  "pullRequests"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmProviders]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmProviders",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "scmProviderType",
                  "url",
                  "repositories"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmGitReferences]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmGitReferences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "canonicalName",
                  "isDeleted",
                  "kind",
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "scmProvider",
                  "defaultBranch"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of ScmRepositories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScmRepositoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/scmRepositories/{id}/gitReferences": {
      "get": {
        "tags": [
          "ScmRepositories"
        ],
        "operationId": "scmRepositories_gitReferences_getToManyRelated",
        "parameters": [
          {
            "name": "fields[scmGitReferences]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmGitReferences",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "canonicalName",
                  "isDeleted",
                  "kind",
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmRepositories]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmRepositories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lastAccessedDate",
                  "httpCloneUrl",
                  "sshCloneUrl",
                  "ownerName",
                  "repositoryName",
                  "scmProvider",
                  "defaultBranch",
                  "gitReferences",
                  "pullRequests"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of ScmGitReferences",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScmGitReferencesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/scmRepositories/{id}/pullRequests": {
      "get": {
        "tags": [
          "ScmRepositories"
        ],
        "operationId": "scmRepositories_pullRequests_getToManyRelated",
        "parameters": [
          {
            "name": "fields[scmPullRequests]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmPullRequests",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "title",
                  "number",
                  "webUrl",
                  "sourceRepositoryOwner",
                  "sourceRepositoryName",
                  "sourceBranchName",
                  "destinationRepositoryOwner",
                  "destinationRepositoryName",
                  "destinationBranchName",
                  "isClosed",
                  "isCrossRepository",
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[scmRepositories]",
            "in": "query",
            "description": "the fields to include for returned resources of type scmRepositories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "lastAccessedDate",
                  "httpCloneUrl",
                  "sshCloneUrl",
                  "ownerName",
                  "repositoryName",
                  "scmProvider",
                  "defaultBranch",
                  "gitReferences",
                  "pullRequests"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "repository"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of ScmPullRequests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScmPullRequestsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionAvailabilities/{id}/availableTerritories": {
      "get": {
        "tags": [
          "SubscriptionAvailabilities"
        ],
        "operationId": "subscriptionAvailabilities_availableTerritories_getToManyRelated",
        "parameters": [
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Territories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerritoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionGroups/{id}/subscriptionGroupLocalizations": {
      "get": {
        "tags": [
          "SubscriptionGroups"
        ],
        "operationId": "subscriptionGroups_subscriptionGroupLocalizations_getToManyRelated",
        "parameters": [
          {
            "name": "fields[subscriptionGroupLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionGroupLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "customAppName",
                  "locale",
                  "state",
                  "subscriptionGroup"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "subscriptions",
                  "subscriptionGroupLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptionGroup"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of SubscriptionGroupLocalizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionGroupLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionGroups/{id}/subscriptions": {
      "get": {
        "tags": [
          "SubscriptionGroups"
        ],
        "operationId": "subscriptionGroups_subscriptions_getToManyRelated",
        "parameters": [
          {
            "name": "filter[productId]",
            "in": "query",
            "description": "filter by attribute 'productId'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[name]",
            "in": "query",
            "description": "filter by attribute 'name'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[state]",
            "in": "query",
            "description": "filter by attribute 'state'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "MISSING_METADATA",
                  "READY_TO_SUBMIT",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "DEVELOPER_ACTION_NEEDED",
                  "PENDING_BINARY_APPROVAL",
                  "APPROVED",
                  "DEVELOPER_REMOVED_FROM_SALE",
                  "REMOVED_FROM_SALE",
                  "REJECTED"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; resources will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "-name"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptions]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "familySharable",
                  "state",
                  "subscriptionPeriod",
                  "reviewNote",
                  "groupLevel",
                  "subscriptionLocalizations",
                  "appStoreReviewScreenshot",
                  "group",
                  "introductoryOffers",
                  "promotionalOffers",
                  "offerCodes",
                  "prices",
                  "pricePoints",
                  "promotedPurchase",
                  "subscriptionAvailability",
                  "winBackOffers",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "locale",
                  "description",
                  "state",
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionAppStoreReviewScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionAppStoreReviewScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "assetToken",
                  "assetType",
                  "uploadOperations",
                  "assetDeliveryState",
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionGroups]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionGroups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "subscriptions",
                  "subscriptionGroupLocalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionIntroductoryOffers]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionIntroductoryOffers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "startDate",
                  "endDate",
                  "duration",
                  "offerMode",
                  "numberOfPeriods",
                  "subscription",
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionPromotionalOffers]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPromotionalOffers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "offerCode",
                  "duration",
                  "offerMode",
                  "numberOfPeriods",
                  "subscription",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionOfferCodes]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "customerEligibilities",
                  "offerEligibility",
                  "duration",
                  "offerMode",
                  "numberOfPeriods",
                  "totalNumberOfCodes",
                  "active",
                  "subscription",
                  "oneTimeUseCodes",
                  "customCodes",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionPrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "startDate",
                  "preserved",
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[promotedPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "visibleForAllUsers",
                  "enabled",
                  "state",
                  "inAppPurchaseV2",
                  "subscription",
                  "promotionImages"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionAvailabilities]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionAvailabilities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "availableInNewTerritories",
                  "availableTerritories"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[winBackOffers]",
            "in": "query",
            "description": "the fields to include for returned resources of type winBackOffers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "offerId",
                  "duration",
                  "offerMode",
                  "periodCount",
                  "customerEligibilityPaidSubscriptionDurationInMonths",
                  "customerEligibilityTimeSinceLastSubscribedInMonths",
                  "customerEligibilityWaitBetweenOffersInMonths",
                  "startDate",
                  "endDate",
                  "priority",
                  "promotionIntent",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "assetToken",
                  "imageAsset",
                  "uploadOperations",
                  "state",
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscriptionLocalizations",
                  "appStoreReviewScreenshot",
                  "group",
                  "introductoryOffers",
                  "promotionalOffers",
                  "offerCodes",
                  "prices",
                  "promotedPurchase",
                  "subscriptionAvailability",
                  "winBackOffers",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[subscriptionLocalizations]",
            "in": "query",
            "description": "maximum number of related subscriptionLocalizations returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[introductoryOffers]",
            "in": "query",
            "description": "maximum number of related introductoryOffers returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[promotionalOffers]",
            "in": "query",
            "description": "maximum number of related promotionalOffers returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[offerCodes]",
            "in": "query",
            "description": "maximum number of related offerCodes returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[prices]",
            "in": "query",
            "description": "maximum number of related prices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[winBackOffers]",
            "in": "query",
            "description": "maximum number of related winBackOffers returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[images]",
            "in": "query",
            "description": "maximum number of related images returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Subscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionOfferCodeOneTimeUseCodes/{id}/values": {
      "get": {
        "tags": [
          "SubscriptionOfferCodeOneTimeUseCodes"
        ],
        "operationId": "subscriptionOfferCodeOneTimeUseCodes_values_getToOneRelated",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionOfferCodeOneTimeUseCodeValue",
            "content": {
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/csv"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionOfferCodes/{id}/customCodes": {
      "get": {
        "tags": [
          "SubscriptionOfferCodes"
        ],
        "operationId": "subscriptionOfferCodes_customCodes_getToManyRelated",
        "parameters": [
          {
            "name": "fields[subscriptionOfferCodeCustomCodes]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodeCustomCodes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customCode",
                  "numberOfCodes",
                  "createdDate",
                  "expirationDate",
                  "active",
                  "offerCode"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionOfferCodes]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "customerEligibilities",
                  "offerEligibility",
                  "duration",
                  "offerMode",
                  "numberOfPeriods",
                  "totalNumberOfCodes",
                  "active",
                  "subscription",
                  "oneTimeUseCodes",
                  "customCodes",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "offerCode"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of SubscriptionOfferCodeCustomCodes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionOfferCodeCustomCodesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionOfferCodes/{id}/oneTimeUseCodes": {
      "get": {
        "tags": [
          "SubscriptionOfferCodes"
        ],
        "operationId": "subscriptionOfferCodes_oneTimeUseCodes_getToManyRelated",
        "parameters": [
          {
            "name": "fields[subscriptionOfferCodeOneTimeUseCodes]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodeOneTimeUseCodes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "numberOfCodes",
                  "createdDate",
                  "expirationDate",
                  "active",
                  "offerCode",
                  "values"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionOfferCodes]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "customerEligibilities",
                  "offerEligibility",
                  "duration",
                  "offerMode",
                  "numberOfPeriods",
                  "totalNumberOfCodes",
                  "active",
                  "subscription",
                  "oneTimeUseCodes",
                  "customCodes",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "offerCode"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of SubscriptionOfferCodeOneTimeUseCodes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionOfferCodeOneTimeUseCodesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionOfferCodes/{id}/prices": {
      "get": {
        "tags": [
          "SubscriptionOfferCodes"
        ],
        "operationId": "subscriptionOfferCodes_prices_getToManyRelated",
        "parameters": [
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by id(s) of related 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionOfferCodePrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodePrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionPricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "proceedsYear2",
                  "territory",
                  "equalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of SubscriptionOfferCodePrices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionOfferCodePricesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionPricePoints/{id}/equalizations": {
      "get": {
        "tags": [
          "SubscriptionPricePoints"
        ],
        "operationId": "subscriptionPricePoints_equalizations_getToManyRelated",
        "parameters": [
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by id(s) of related 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[subscription]",
            "in": "query",
            "description": "filter by id(s) of related 'subscription'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionPricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "proceedsYear2",
                  "territory",
                  "equalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 8000
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of SubscriptionPricePoints",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPricePointsResponse"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/csv"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptionPromotionalOffers/{id}/prices": {
      "get": {
        "tags": [
          "SubscriptionPromotionalOffers"
        ],
        "operationId": "subscriptionPromotionalOffers_prices_getToManyRelated",
        "parameters": [
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by id(s) of related 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionPromotionalOfferPrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPromotionalOfferPrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionPricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "proceedsYear2",
                  "territory",
                  "equalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of SubscriptionPromotionalOfferPrices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPromotionalOfferPricesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptions/{id}/appStoreReviewScreenshot": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_appStoreReviewScreenshot_getToOneRelated",
        "parameters": [
          {
            "name": "fields[subscriptionAppStoreReviewScreenshots]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionAppStoreReviewScreenshots",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "imageAsset",
                  "assetToken",
                  "assetType",
                  "uploadOperations",
                  "assetDeliveryState",
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptions]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "familySharable",
                  "state",
                  "subscriptionPeriod",
                  "reviewNote",
                  "groupLevel",
                  "subscriptionLocalizations",
                  "appStoreReviewScreenshot",
                  "group",
                  "introductoryOffers",
                  "promotionalOffers",
                  "offerCodes",
                  "prices",
                  "pricePoints",
                  "promotedPurchase",
                  "subscriptionAvailability",
                  "winBackOffers",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionAppStoreReviewScreenshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionAppStoreReviewScreenshotResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptions/{id}/images": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_images_getToManyRelated",
        "parameters": [
          {
            "name": "fields[subscriptionImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "assetToken",
                  "imageAsset",
                  "uploadOperations",
                  "state",
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptions]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "familySharable",
                  "state",
                  "subscriptionPeriod",
                  "reviewNote",
                  "groupLevel",
                  "subscriptionLocalizations",
                  "appStoreReviewScreenshot",
                  "group",
                  "introductoryOffers",
                  "promotionalOffers",
                  "offerCodes",
                  "prices",
                  "pricePoints",
                  "promotedPurchase",
                  "subscriptionAvailability",
                  "winBackOffers",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of SubscriptionImages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionImagesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptions/{id}/relationships/introductoryOffers": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_introductoryOffers_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionIntroductoryOffersLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_introductoryOffers_deleteToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionIntroductoryOffersLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptions/{id}/introductoryOffers": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_introductoryOffers_getToManyRelated",
        "parameters": [
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by id(s) of related 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionIntroductoryOffers]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionIntroductoryOffers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "startDate",
                  "endDate",
                  "duration",
                  "offerMode",
                  "numberOfPeriods",
                  "subscription",
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptions]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "familySharable",
                  "state",
                  "subscriptionPeriod",
                  "reviewNote",
                  "groupLevel",
                  "subscriptionLocalizations",
                  "appStoreReviewScreenshot",
                  "group",
                  "introductoryOffers",
                  "promotionalOffers",
                  "offerCodes",
                  "prices",
                  "pricePoints",
                  "promotedPurchase",
                  "subscriptionAvailability",
                  "winBackOffers",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionPricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "proceedsYear2",
                  "territory",
                  "equalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscription",
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of SubscriptionIntroductoryOffers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionIntroductoryOffersResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptions/{id}/offerCodes": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_offerCodes_getToManyRelated",
        "parameters": [
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by territory",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionOfferCodes]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "customerEligibilities",
                  "offerEligibility",
                  "duration",
                  "offerMode",
                  "numberOfPeriods",
                  "totalNumberOfCodes",
                  "active",
                  "subscription",
                  "oneTimeUseCodes",
                  "customCodes",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptions]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "familySharable",
                  "state",
                  "subscriptionPeriod",
                  "reviewNote",
                  "groupLevel",
                  "subscriptionLocalizations",
                  "appStoreReviewScreenshot",
                  "group",
                  "introductoryOffers",
                  "promotionalOffers",
                  "offerCodes",
                  "prices",
                  "pricePoints",
                  "promotedPurchase",
                  "subscriptionAvailability",
                  "winBackOffers",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionOfferCodeOneTimeUseCodes]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodeOneTimeUseCodes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "numberOfCodes",
                  "createdDate",
                  "expirationDate",
                  "active",
                  "offerCode",
                  "values"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionOfferCodeCustomCodes]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodeCustomCodes",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customCode",
                  "numberOfCodes",
                  "createdDate",
                  "expirationDate",
                  "active",
                  "offerCode"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionOfferCodePrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionOfferCodePrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscription",
                  "oneTimeUseCodes",
                  "customCodes",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[oneTimeUseCodes]",
            "in": "query",
            "description": "maximum number of related oneTimeUseCodes returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[customCodes]",
            "in": "query",
            "description": "maximum number of related customCodes returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          },
          {
            "name": "limit[prices]",
            "in": "query",
            "description": "maximum number of related prices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of SubscriptionOfferCodes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionOfferCodesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptions/{id}/pricePoints": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_pricePoints_getToManyRelated",
        "parameters": [
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by id(s) of related 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionPricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "proceedsYear2",
                  "territory",
                  "equalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 8000
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of SubscriptionPricePoints",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPricePointsResponse"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/csv"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptions/{id}/relationships/prices": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_prices_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPricesLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_prices_deleteToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPricesLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptions/{id}/prices": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_prices_getToManyRelated",
        "parameters": [
          {
            "name": "filter[subscriptionPricePoint]",
            "in": "query",
            "description": "filter by id(s) of related 'subscriptionPricePoint'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by id(s) of related 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionPrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "startDate",
                  "preserved",
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionPricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "proceedsYear2",
                  "territory",
                  "equalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of SubscriptionPrices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPricesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptions/{id}/promotedPurchase": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_promotedPurchase_getToOneRelated",
        "parameters": [
          {
            "name": "fields[promotedPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "visibleForAllUsers",
                  "enabled",
                  "state",
                  "inAppPurchaseV2",
                  "subscription",
                  "promotionImages"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[inAppPurchases]",
            "in": "query",
            "description": "the fields to include for returned resources of type inAppPurchases",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "inAppPurchaseType",
                  "state",
                  "reviewNote",
                  "familySharable",
                  "contentHosting",
                  "inAppPurchaseLocalizations",
                  "pricePoints",
                  "content",
                  "appStoreReviewScreenshot",
                  "promotedPurchase",
                  "iapPriceSchedule",
                  "inAppPurchaseAvailability",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptions]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "familySharable",
                  "state",
                  "subscriptionPeriod",
                  "reviewNote",
                  "groupLevel",
                  "subscriptionLocalizations",
                  "appStoreReviewScreenshot",
                  "group",
                  "introductoryOffers",
                  "promotionalOffers",
                  "offerCodes",
                  "prices",
                  "pricePoints",
                  "promotedPurchase",
                  "subscriptionAvailability",
                  "winBackOffers",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[promotedPurchaseImages]",
            "in": "query",
            "description": "the fields to include for returned resources of type promotedPurchaseImages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "fileSize",
                  "fileName",
                  "sourceFileChecksum",
                  "assetToken",
                  "imageAsset",
                  "assetType",
                  "uploadOperations",
                  "state",
                  "promotedPurchase"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "inAppPurchaseV2",
                  "subscription",
                  "promotionImages"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[promotionImages]",
            "in": "query",
            "description": "maximum number of related promotionImages returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form",
            "deprecated": true
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single PromotedPurchase",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotedPurchaseResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptions/{id}/promotionalOffers": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_promotionalOffers_getToManyRelated",
        "parameters": [
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by territory",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionPromotionalOffers]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPromotionalOffers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "offerCode",
                  "duration",
                  "offerMode",
                  "numberOfPeriods",
                  "subscription",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptions]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "familySharable",
                  "state",
                  "subscriptionPeriod",
                  "reviewNote",
                  "groupLevel",
                  "subscriptionLocalizations",
                  "appStoreReviewScreenshot",
                  "group",
                  "introductoryOffers",
                  "promotionalOffers",
                  "offerCodes",
                  "prices",
                  "pricePoints",
                  "promotedPurchase",
                  "subscriptionAvailability",
                  "winBackOffers",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionPromotionalOfferPrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPromotionalOfferPrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscription",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[prices]",
            "in": "query",
            "description": "maximum number of related prices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of SubscriptionPromotionalOffers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPromotionalOffersResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptions/{id}/subscriptionAvailability": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_subscriptionAvailability_getToOneRelated",
        "parameters": [
          {
            "name": "fields[subscriptionAvailabilities]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionAvailabilities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "availableInNewTerritories",
                  "availableTerritories"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "availableTerritories"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[availableTerritories]",
            "in": "query",
            "description": "maximum number of related availableTerritories returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Single SubscriptionAvailability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionAvailabilityResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptions/{id}/subscriptionLocalizations": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_subscriptionLocalizations_getToManyRelated",
        "parameters": [
          {
            "name": "fields[subscriptionLocalizations]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionLocalizations",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "locale",
                  "description",
                  "state",
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptions]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptions",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "productId",
                  "familySharable",
                  "state",
                  "subscriptionPeriod",
                  "reviewNote",
                  "groupLevel",
                  "subscriptionLocalizations",
                  "appStoreReviewScreenshot",
                  "group",
                  "introductoryOffers",
                  "promotionalOffers",
                  "offerCodes",
                  "prices",
                  "pricePoints",
                  "promotedPurchase",
                  "subscriptionAvailability",
                  "winBackOffers",
                  "images"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "subscription"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of SubscriptionLocalizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/subscriptions/{id}/winBackOffers": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "subscriptions_winBackOffers_getToManyRelated",
        "parameters": [
          {
            "name": "fields[winBackOffers]",
            "in": "query",
            "description": "the fields to include for returned resources of type winBackOffers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "referenceName",
                  "offerId",
                  "duration",
                  "offerMode",
                  "periodCount",
                  "customerEligibilityPaidSubscriptionDurationInMonths",
                  "customerEligibilityTimeSinceLastSubscribedInMonths",
                  "customerEligibilityWaitBetweenOffersInMonths",
                  "startDate",
                  "endDate",
                  "priority",
                  "promotionIntent",
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[winBackOfferPrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type winBackOfferPrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "prices"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit[prices]",
            "in": "query",
            "description": "maximum number of related prices returned (when they are included)",
            "schema": {
              "type": "integer",
              "maximum": 50
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of WinBackOffers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WinBackOffersResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/userInvitations/{id}/visibleApps": {
      "get": {
        "tags": [
          "UserInvitations"
        ],
        "operationId": "userInvitations_visibleApps_getToManyRelated",
        "parameters": [
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Apps with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppsWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/users/{id}/relationships/visibleApps": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "users_visibleApps_getToManyRelationship",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of related linkages",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVisibleAppsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "users_visibleApps_createToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserVisibleAppsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "operationId": "users_visibleApps_replaceToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserVisibleAppsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "users_visibleApps_deleteToManyRelationship",
        "requestBody": {
          "description": "List of related linkages",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserVisibleAppsLinkagesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Request entity error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success (no content)"
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/users/{id}/visibleApps": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "users_visibleApps_getToManyRelated",
        "parameters": [
          {
            "name": "fields[apps]",
            "in": "query",
            "description": "the fields to include for returned resources of type apps",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "bundleId",
                  "sku",
                  "primaryLocale",
                  "isOrEverWasMadeForKids",
                  "subscriptionStatusUrl",
                  "subscriptionStatusUrlVersion",
                  "subscriptionStatusUrlForSandbox",
                  "subscriptionStatusUrlVersionForSandbox",
                  "contentRightsDeclaration",
                  "streamlinedPurchasingEnabled",
                  "appEncryptionDeclarations",
                  "ciProduct",
                  "betaTesters",
                  "betaGroups",
                  "appStoreVersions",
                  "preReleaseVersions",
                  "betaAppLocalizations",
                  "builds",
                  "betaLicenseAgreement",
                  "betaAppReviewDetail",
                  "appInfos",
                  "appClips",
                  "appPricePoints",
                  "endUserLicenseAgreement",
                  "appPriceSchedule",
                  "appAvailabilityV2",
                  "inAppPurchases",
                  "subscriptionGroups",
                  "gameCenterEnabledVersions",
                  "perfPowerMetrics",
                  "appCustomProductPages",
                  "inAppPurchasesV2",
                  "promotedPurchases",
                  "appEvents",
                  "reviewSubmissions",
                  "subscriptionGracePeriod",
                  "customerReviews",
                  "gameCenterDetail",
                  "appStoreVersionExperimentsV2",
                  "alternativeDistributionKey",
                  "analyticsReportRequests",
                  "marketplaceSearchDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of Apps with get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppsWithoutIncludesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/winBackOffers/{id}/prices": {
      "get": {
        "tags": [
          "WinBackOffers"
        ],
        "operationId": "winBackOffers_prices_getToManyRelated",
        "parameters": [
          {
            "name": "filter[territory]",
            "in": "query",
            "description": "filter by id(s) of related 'territory'",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[winBackOfferPrices]",
            "in": "query",
            "description": "the fields to include for returned resources of type winBackOfferPrices",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[territories]",
            "in": "query",
            "description": "the fields to include for returned resources of type territories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "currency"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "fields[subscriptionPricePoints]",
            "in": "query",
            "description": "the fields to include for returned resources of type subscriptionPricePoints",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "customerPrice",
                  "proceeds",
                  "proceedsYear2",
                  "territory",
                  "equalizations"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum resources per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          },
          {
            "name": "include",
            "in": "query",
            "description": "comma-separated list of relationships to include",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "territory",
                  "subscriptionPricePoint"
                ]
              }
            },
            "style": "form",
            "explode": false
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "List of WinBackOfferPrices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WinBackOfferPricesResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/apps/{id}/metrics/betaTesterUsages": {
      "get": {
        "tags": [
          "Apps",
          "Metrics"
        ],
        "operationId": "apps_betaTesterUsages_getMetrics",
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "the duration of the reporting period",
            "schema": {
              "type": "string",
              "enum": [
                "P7D",
                "P30D",
                "P90D",
                "P365D"
              ]
            },
            "style": "form",
            "explode": false,
            "examples": {
              "PnD": {
                "value": "P7D"
              },
              "PTnH": {
                "value": "PT10H"
              },
              "PTnM": {
                "value": "PT10M"
              },
              "PTn.nS": {
                "value": "PT10.5S"
              },
              "PnDTnHnMn.nS": {
                "value": "P7DT10H10M10.5S"
              }
            }
          },
          {
            "name": "groupBy",
            "in": "query",
            "description": "the dimension by which to group the results",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "betaTesters"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[betaTesters]",
            "in": "query",
            "description": "filter by 'betaTesters' relationship dimension",
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of groups to return per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Metrics data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppsBetaTesterUsagesV1MetricResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaGroups/{id}/metrics/betaTesterUsages": {
      "get": {
        "tags": [
          "BetaGroups",
          "Metrics"
        ],
        "operationId": "betaGroups_betaTesterUsages_getMetrics",
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "the duration of the reporting period",
            "schema": {
              "type": "string",
              "enum": [
                "P7D",
                "P30D",
                "P90D",
                "P365D"
              ]
            },
            "style": "form",
            "explode": false,
            "examples": {
              "PnD": {
                "value": "P7D"
              },
              "PTnH": {
                "value": "PT10H"
              },
              "PTnM": {
                "value": "PT10M"
              },
              "PTn.nS": {
                "value": "PT10.5S"
              },
              "PnDTnHnMn.nS": {
                "value": "P7DT10H10M10.5S"
              }
            }
          },
          {
            "name": "groupBy",
            "in": "query",
            "description": "the dimension by which to group the results",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "betaTesters"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[betaTesters]",
            "in": "query",
            "description": "filter by 'betaTesters' relationship dimension",
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of groups to return per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Metrics data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppsBetaTesterUsagesV1MetricResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/betaTesters/{id}/metrics/betaTesterUsages": {
      "get": {
        "tags": [
          "BetaTesters",
          "Metrics"
        ],
        "operationId": "betaTesters_betaTesterUsages_getMetrics",
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "description": "the duration of the reporting period",
            "schema": {
              "type": "string",
              "enum": [
                "P7D",
                "P30D",
                "P90D",
                "P365D"
              ]
            },
            "style": "form",
            "explode": false,
            "examples": {
              "PnD": {
                "value": "P7D"
              },
              "PTnH": {
                "value": "PT10H"
              },
              "PTnM": {
                "value": "PT10M"
              },
              "PTn.nS": {
                "value": "PT10.5S"
              },
              "PnDTnHnMn.nS": {
                "value": "P7DT10H10M10.5S"
              }
            }
          },
          {
            "name": "filter[apps]",
            "in": "query",
            "description": "filter by 'apps' relationship dimension",
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of groups to return per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Metrics data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaTesterUsagesV1MetricResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/builds/{id}/metrics/betaBuildUsages": {
      "get": {
        "tags": [
          "Builds",
          "Metrics"
        ],
        "operationId": "builds_betaBuildUsages_getMetrics",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of groups to return per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Metrics data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BetaBuildUsagesV1MetricResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterDetails/{id}/metrics/classicMatchmakingRequests": {
      "get": {
        "tags": [
          "GameCenterDetails",
          "Metrics"
        ],
        "operationId": "gameCenterDetails_classicMatchmakingRequests_getMetrics",
        "parameters": [
          {
            "name": "granularity",
            "in": "query",
            "description": "the granularity of the per-group dataset",
            "schema": {
              "type": "string",
              "enum": [
                "P1D",
                "PT1H",
                "PT15M"
              ]
            },
            "style": "form",
            "explode": false,
            "required": true,
            "examples": {
              "PnD": {
                "value": "P7D"
              },
              "PTnH": {
                "value": "PT10H"
              },
              "PTnM": {
                "value": "PT10M"
              },
              "PTn.nS": {
                "value": "PT10.5S"
              },
              "PnDTnHnMn.nS": {
                "value": "P7DT10H10M10.5S"
              }
            }
          },
          {
            "name": "groupBy",
            "in": "query",
            "description": "the dimension by which to group the results",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "result"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[result]",
            "in": "query",
            "description": "filter by 'result' attribute dimension",
            "schema": {
              "type": "string",
              "enum": [
                "MATCHED",
                "CANCELED",
                "EXPIRED"
              ]
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; metrics will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "count",
                  "-count",
                  "averageSecondsInQueue",
                  "-averageSecondsInQueue",
                  "p50SecondsInQueue",
                  "-p50SecondsInQueue",
                  "p95SecondsInQueue",
                  "-p95SecondsInQueue"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of groups to return per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Metrics data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingAppRequestsV1MetricResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterDetails/{id}/metrics/ruleBasedMatchmakingRequests": {
      "get": {
        "tags": [
          "GameCenterDetails",
          "Metrics"
        ],
        "operationId": "gameCenterDetails_ruleBasedMatchmakingRequests_getMetrics",
        "parameters": [
          {
            "name": "granularity",
            "in": "query",
            "description": "the granularity of the per-group dataset",
            "schema": {
              "type": "string",
              "enum": [
                "P1D",
                "PT1H",
                "PT15M"
              ]
            },
            "style": "form",
            "explode": false,
            "required": true,
            "examples": {
              "PnD": {
                "value": "P7D"
              },
              "PTnH": {
                "value": "PT10H"
              },
              "PTnM": {
                "value": "PT10M"
              },
              "PTn.nS": {
                "value": "PT10.5S"
              },
              "PnDTnHnMn.nS": {
                "value": "P7DT10H10M10.5S"
              }
            }
          },
          {
            "name": "groupBy",
            "in": "query",
            "description": "the dimension by which to group the results",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "result"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[result]",
            "in": "query",
            "description": "filter by 'result' attribute dimension",
            "schema": {
              "type": "string",
              "enum": [
                "MATCHED",
                "CANCELED",
                "EXPIRED"
              ]
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; metrics will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "count",
                  "-count",
                  "averageSecondsInQueue",
                  "-averageSecondsInQueue",
                  "p50SecondsInQueue",
                  "-p50SecondsInQueue",
                  "p95SecondsInQueue",
                  "-p95SecondsInQueue"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of groups to return per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Metrics data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingAppRequestsV1MetricResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterMatchmakingQueues/{id}/metrics/experimentMatchmakingQueueSizes": {
      "get": {
        "tags": [
          "GameCenterMatchmakingQueues",
          "Metrics"
        ],
        "operationId": "gameCenterMatchmakingQueues_experimentMatchmakingQueueSizes_getMetrics",
        "parameters": [
          {
            "name": "granularity",
            "in": "query",
            "description": "the granularity of the per-group dataset",
            "schema": {
              "type": "string",
              "enum": [
                "P1D",
                "PT1H",
                "PT15M"
              ]
            },
            "style": "form",
            "explode": false,
            "required": true,
            "examples": {
              "PnD": {
                "value": "P7D"
              },
              "PTnH": {
                "value": "PT10H"
              },
              "PTnM": {
                "value": "PT10M"
              },
              "PTn.nS": {
                "value": "PT10.5S"
              },
              "PnDTnHnMn.nS": {
                "value": "P7DT10H10M10.5S"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; metrics will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "count",
                  "-count",
                  "averageNumberOfRequests",
                  "-averageNumberOfRequests",
                  "p50NumberOfRequests",
                  "-p50NumberOfRequests",
                  "p95NumberOfRequests",
                  "-p95NumberOfRequests"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of groups to return per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Metrics data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingQueueSizesV1MetricResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterMatchmakingQueues/{id}/metrics/experimentMatchmakingRequests": {
      "get": {
        "tags": [
          "GameCenterMatchmakingQueues",
          "Metrics"
        ],
        "operationId": "gameCenterMatchmakingQueues_experimentMatchmakingRequests_getMetrics",
        "parameters": [
          {
            "name": "granularity",
            "in": "query",
            "description": "the granularity of the per-group dataset",
            "schema": {
              "type": "string",
              "enum": [
                "P1D",
                "PT1H",
                "PT15M"
              ]
            },
            "style": "form",
            "explode": false,
            "required": true,
            "examples": {
              "PnD": {
                "value": "P7D"
              },
              "PTnH": {
                "value": "PT10H"
              },
              "PTnM": {
                "value": "PT10M"
              },
              "PTn.nS": {
                "value": "PT10.5S"
              },
              "PnDTnHnMn.nS": {
                "value": "P7DT10H10M10.5S"
              }
            }
          },
          {
            "name": "groupBy",
            "in": "query",
            "description": "the dimension by which to group the results",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "result",
                  "gameCenterDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[result]",
            "in": "query",
            "description": "filter by 'result' attribute dimension",
            "schema": {
              "type": "string",
              "enum": [
                "MATCHED",
                "CANCELED",
                "EXPIRED"
              ]
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[gameCenterDetail]",
            "in": "query",
            "description": "filter by 'gameCenterDetail' relationship dimension",
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; metrics will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "count",
                  "-count",
                  "averageSecondsInQueue",
                  "-averageSecondsInQueue",
                  "p50SecondsInQueue",
                  "-p50SecondsInQueue",
                  "p95SecondsInQueue",
                  "-p95SecondsInQueue"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of groups to return per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Metrics data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingQueueRequestsV1MetricResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterMatchmakingQueues/{id}/metrics/matchmakingQueueSizes": {
      "get": {
        "tags": [
          "GameCenterMatchmakingQueues",
          "Metrics"
        ],
        "operationId": "gameCenterMatchmakingQueues_matchmakingQueueSizes_getMetrics",
        "parameters": [
          {
            "name": "granularity",
            "in": "query",
            "description": "the granularity of the per-group dataset",
            "schema": {
              "type": "string",
              "enum": [
                "P1D",
                "PT1H",
                "PT15M"
              ]
            },
            "style": "form",
            "explode": false,
            "required": true,
            "examples": {
              "PnD": {
                "value": "P7D"
              },
              "PTnH": {
                "value": "PT10H"
              },
              "PTnM": {
                "value": "PT10M"
              },
              "PTn.nS": {
                "value": "PT10.5S"
              },
              "PnDTnHnMn.nS": {
                "value": "P7DT10H10M10.5S"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; metrics will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "count",
                  "-count",
                  "averageNumberOfRequests",
                  "-averageNumberOfRequests",
                  "p50NumberOfRequests",
                  "-p50NumberOfRequests",
                  "p95NumberOfRequests",
                  "-p95NumberOfRequests"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of groups to return per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Metrics data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingQueueSizesV1MetricResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterMatchmakingQueues/{id}/metrics/matchmakingRequests": {
      "get": {
        "tags": [
          "GameCenterMatchmakingQueues",
          "Metrics"
        ],
        "operationId": "gameCenterMatchmakingQueues_matchmakingRequests_getMetrics",
        "parameters": [
          {
            "name": "granularity",
            "in": "query",
            "description": "the granularity of the per-group dataset",
            "schema": {
              "type": "string",
              "enum": [
                "P1D",
                "PT1H",
                "PT15M"
              ]
            },
            "style": "form",
            "explode": false,
            "required": true,
            "examples": {
              "PnD": {
                "value": "P7D"
              },
              "PTnH": {
                "value": "PT10H"
              },
              "PTnM": {
                "value": "PT10M"
              },
              "PTn.nS": {
                "value": "PT10.5S"
              },
              "PnDTnHnMn.nS": {
                "value": "P7DT10H10M10.5S"
              }
            }
          },
          {
            "name": "groupBy",
            "in": "query",
            "description": "the dimension by which to group the results",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "result",
                  "gameCenterDetail"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[result]",
            "in": "query",
            "description": "filter by 'result' attribute dimension",
            "schema": {
              "type": "string",
              "enum": [
                "MATCHED",
                "CANCELED",
                "EXPIRED"
              ]
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[gameCenterDetail]",
            "in": "query",
            "description": "filter by 'gameCenterDetail' relationship dimension",
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; metrics will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "count",
                  "-count",
                  "averageSecondsInQueue",
                  "-averageSecondsInQueue",
                  "p50SecondsInQueue",
                  "-p50SecondsInQueue",
                  "p95SecondsInQueue",
                  "-p95SecondsInQueue"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of groups to return per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Metrics data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingQueueRequestsV1MetricResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterMatchmakingQueues/{id}/metrics/matchmakingSessions": {
      "get": {
        "tags": [
          "GameCenterMatchmakingQueues",
          "Metrics"
        ],
        "operationId": "gameCenterMatchmakingQueues_matchmakingSessions_getMetrics",
        "parameters": [
          {
            "name": "granularity",
            "in": "query",
            "description": "the granularity of the per-group dataset",
            "schema": {
              "type": "string",
              "enum": [
                "P1D",
                "PT1H",
                "PT15M"
              ]
            },
            "style": "form",
            "explode": false,
            "required": true,
            "examples": {
              "PnD": {
                "value": "P7D"
              },
              "PTnH": {
                "value": "PT10H"
              },
              "PTnM": {
                "value": "PT10M"
              },
              "PTn.nS": {
                "value": "PT10.5S"
              },
              "PnDTnHnMn.nS": {
                "value": "P7DT10H10M10.5S"
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; metrics will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "count",
                  "-count",
                  "averagePlayerCount",
                  "-averagePlayerCount",
                  "p50PlayerCount",
                  "-p50PlayerCount",
                  "p95PlayerCount",
                  "-p95PlayerCount"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of groups to return per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Metrics data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingSessionsV1MetricResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterMatchmakingRules/{id}/metrics/matchmakingBooleanRuleResults": {
      "get": {
        "tags": [
          "GameCenterMatchmakingRules",
          "Metrics"
        ],
        "operationId": "gameCenterMatchmakingRules_matchmakingBooleanRuleResults_getMetrics",
        "parameters": [
          {
            "name": "granularity",
            "in": "query",
            "description": "the granularity of the per-group dataset",
            "schema": {
              "type": "string",
              "enum": [
                "P1D",
                "PT1H",
                "PT15M"
              ]
            },
            "style": "form",
            "explode": false,
            "required": true,
            "examples": {
              "PnD": {
                "value": "P7D"
              },
              "PTnH": {
                "value": "PT10H"
              },
              "PTnM": {
                "value": "PT10M"
              },
              "PTn.nS": {
                "value": "PT10.5S"
              },
              "PnDTnHnMn.nS": {
                "value": "P7DT10H10M10.5S"
              }
            }
          },
          {
            "name": "groupBy",
            "in": "query",
            "description": "the dimension by which to group the results",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "result",
                  "gameCenterMatchmakingQueue"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[result]",
            "in": "query",
            "description": "filter by 'result' attribute dimension",
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "filter[gameCenterMatchmakingQueue]",
            "in": "query",
            "description": "filter by 'gameCenterMatchmakingQueue' relationship dimension",
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; metrics will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "count",
                  "-count"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of groups to return per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Metrics data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingBooleanRuleResultsV1MetricResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterMatchmakingRules/{id}/metrics/matchmakingNumberRuleResults": {
      "get": {
        "tags": [
          "GameCenterMatchmakingRules",
          "Metrics"
        ],
        "operationId": "gameCenterMatchmakingRules_matchmakingNumberRuleResults_getMetrics",
        "parameters": [
          {
            "name": "granularity",
            "in": "query",
            "description": "the granularity of the per-group dataset",
            "schema": {
              "type": "string",
              "enum": [
                "P1D",
                "PT1H",
                "PT15M"
              ]
            },
            "style": "form",
            "explode": false,
            "required": true,
            "examples": {
              "PnD": {
                "value": "P7D"
              },
              "PTnH": {
                "value": "PT10H"
              },
              "PTnM": {
                "value": "PT10M"
              },
              "PTn.nS": {
                "value": "PT10.5S"
              },
              "PnDTnHnMn.nS": {
                "value": "P7DT10H10M10.5S"
              }
            }
          },
          {
            "name": "groupBy",
            "in": "query",
            "description": "the dimension by which to group the results",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterMatchmakingQueue"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[gameCenterMatchmakingQueue]",
            "in": "query",
            "description": "filter by 'gameCenterMatchmakingQueue' relationship dimension",
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; metrics will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "count",
                  "-count",
                  "averageResult",
                  "-averageResult",
                  "p50Result",
                  "-p50Result",
                  "p95Result",
                  "-p95Result"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of groups to return per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Metrics data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingNumberRuleResultsV1MetricResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    },
    "/v1/gameCenterMatchmakingRules/{id}/metrics/matchmakingRuleErrors": {
      "get": {
        "tags": [
          "GameCenterMatchmakingRules",
          "Metrics"
        ],
        "operationId": "gameCenterMatchmakingRules_matchmakingRuleErrors_getMetrics",
        "parameters": [
          {
            "name": "granularity",
            "in": "query",
            "description": "the granularity of the per-group dataset",
            "schema": {
              "type": "string",
              "enum": [
                "P1D",
                "PT1H",
                "PT15M"
              ]
            },
            "style": "form",
            "explode": false,
            "required": true,
            "examples": {
              "PnD": {
                "value": "P7D"
              },
              "PTnH": {
                "value": "PT10H"
              },
              "PTnM": {
                "value": "PT10M"
              },
              "PTn.nS": {
                "value": "PT10.5S"
              },
              "PnDTnHnMn.nS": {
                "value": "P7DT10H10M10.5S"
              }
            }
          },
          {
            "name": "groupBy",
            "in": "query",
            "description": "the dimension by which to group the results",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "gameCenterMatchmakingQueue"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "filter[gameCenterMatchmakingQueue]",
            "in": "query",
            "description": "filter by 'gameCenterMatchmakingQueue' relationship dimension",
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "comma-separated list of sort expressions; metrics will be sorted as specified",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "count",
                  "-count"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of groups to return per page",
            "schema": {
              "type": "integer",
              "maximum": 200
            },
            "style": "form"
          }
        ],
        "responses": {
          "400": {
            "description": "Parameter error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error(s)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Metrics data response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameCenterMatchmakingRuleErrorsV1MetricResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "the id of the requested resource",
          "schema": {
            "type": "string"
          },
          "style": "simple",
          "required": true
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "Actor": {
        "type": "object",
        "title": "Actor",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "actors"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "actorType": {
                "type": "string",
                "enum": [
                  "USER",
                  "API_KEY",
                  "XCODE_CLOUD",
                  "APPLE"
                ]
              },
              "userFirstName": {
                "type": "string"
              },
              "userLastName": {
                "type": "string"
              },
              "userEmail": {
                "type": "string"
              },
              "apiKeyId": {
                "type": "string"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "ActorsResponse": {
        "type": "object",
        "title": "ActorsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Actor"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ActorResponse": {
        "type": "object",
        "title": "ActorResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Actor"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AgeRatingDeclaration": {
        "type": "object",
        "title": "AgeRatingDeclaration",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ageRatingDeclarations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "alcoholTobaccoOrDrugUseOrReferences": {
                "type": "string",
                "enum": [
                  "NONE",
                  "INFREQUENT_OR_MILD",
                  "FREQUENT_OR_INTENSE"
                ]
              },
              "contests": {
                "type": "string",
                "enum": [
                  "NONE",
                  "INFREQUENT_OR_MILD",
                  "FREQUENT_OR_INTENSE"
                ]
              },
              "gamblingAndContests": {
                "type": "boolean",
                "deprecated": true
              },
              "gambling": {
                "type": "boolean"
              },
              "gamblingSimulated": {
                "type": "string",
                "enum": [
                  "NONE",
                  "INFREQUENT_OR_MILD",
                  "FREQUENT_OR_INTENSE"
                ]
              },
              "kidsAgeBand": {
                "$ref": "#/components/schemas/KidsAgeBand"
              },
              "lootBox": {
                "type": "boolean"
              },
              "medicalOrTreatmentInformation": {
                "type": "string",
                "enum": [
                  "NONE",
                  "INFREQUENT_OR_MILD",
                  "FREQUENT_OR_INTENSE"
                ]
              },
              "profanityOrCrudeHumor": {
                "type": "string",
                "enum": [
                  "NONE",
                  "INFREQUENT_OR_MILD",
                  "FREQUENT_OR_INTENSE"
                ]
              },
              "sexualContentGraphicAndNudity": {
                "type": "string",
                "enum": [
                  "NONE",
                  "INFREQUENT_OR_MILD",
                  "FREQUENT_OR_INTENSE"
                ]
              },
              "sexualContentOrNudity": {
                "type": "string",
                "enum": [
                  "NONE",
                  "INFREQUENT_OR_MILD",
                  "FREQUENT_OR_INTENSE"
                ]
              },
              "horrorOrFearThemes": {
                "type": "string",
                "enum": [
                  "NONE",
                  "INFREQUENT_OR_MILD",
                  "FREQUENT_OR_INTENSE"
                ]
              },
              "matureOrSuggestiveThemes": {
                "type": "string",
                "enum": [
                  "NONE",
                  "INFREQUENT_OR_MILD",
                  "FREQUENT_OR_INTENSE"
                ]
              },
              "unrestrictedWebAccess": {
                "type": "boolean"
              },
              "violenceCartoonOrFantasy": {
                "type": "string",
                "enum": [
                  "NONE",
                  "INFREQUENT_OR_MILD",
                  "FREQUENT_OR_INTENSE"
                ]
              },
              "violenceRealisticProlongedGraphicOrSadistic": {
                "type": "string",
                "enum": [
                  "NONE",
                  "INFREQUENT_OR_MILD",
                  "FREQUENT_OR_INTENSE"
                ]
              },
              "violenceRealistic": {
                "type": "string",
                "enum": [
                  "NONE",
                  "INFREQUENT_OR_MILD",
                  "FREQUENT_OR_INTENSE"
                ]
              },
              "ageRatingOverride": {
                "type": "string",
                "enum": [
                  "NONE",
                  "SEVENTEEN_PLUS",
                  "UNRATED"
                ]
              },
              "koreaAgeRatingOverride": {
                "type": "string",
                "enum": [
                  "NONE",
                  "FIFTEEN_PLUS",
                  "NINETEEN_PLUS"
                ]
              },
              "seventeenPlus": {
                "type": "boolean",
                "deprecated": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AgeRatingDeclarationResponse": {
        "type": "object",
        "title": "AgeRatingDeclarationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AgeRatingDeclaration"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AgeRatingDeclarationUpdateRequest": {
        "type": "object",
        "title": "AgeRatingDeclarationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "ageRatingDeclarations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "alcoholTobaccoOrDrugUseOrReferences": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "INFREQUENT_OR_MILD",
                      "FREQUENT_OR_INTENSE"
                    ]
                  },
                  "contests": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "INFREQUENT_OR_MILD",
                      "FREQUENT_OR_INTENSE"
                    ]
                  },
                  "gamblingAndContests": {
                    "type": "boolean",
                    "deprecated": true
                  },
                  "gambling": {
                    "type": "boolean"
                  },
                  "gamblingSimulated": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "INFREQUENT_OR_MILD",
                      "FREQUENT_OR_INTENSE"
                    ]
                  },
                  "kidsAgeBand": {
                    "$ref": "#/components/schemas/KidsAgeBand"
                  },
                  "lootBox": {
                    "type": "boolean"
                  },
                  "medicalOrTreatmentInformation": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "INFREQUENT_OR_MILD",
                      "FREQUENT_OR_INTENSE"
                    ]
                  },
                  "profanityOrCrudeHumor": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "INFREQUENT_OR_MILD",
                      "FREQUENT_OR_INTENSE"
                    ]
                  },
                  "sexualContentGraphicAndNudity": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "INFREQUENT_OR_MILD",
                      "FREQUENT_OR_INTENSE"
                    ]
                  },
                  "sexualContentOrNudity": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "INFREQUENT_OR_MILD",
                      "FREQUENT_OR_INTENSE"
                    ]
                  },
                  "horrorOrFearThemes": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "INFREQUENT_OR_MILD",
                      "FREQUENT_OR_INTENSE"
                    ]
                  },
                  "matureOrSuggestiveThemes": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "INFREQUENT_OR_MILD",
                      "FREQUENT_OR_INTENSE"
                    ]
                  },
                  "unrestrictedWebAccess": {
                    "type": "boolean"
                  },
                  "violenceCartoonOrFantasy": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "INFREQUENT_OR_MILD",
                      "FREQUENT_OR_INTENSE"
                    ]
                  },
                  "violenceRealisticProlongedGraphicOrSadistic": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "INFREQUENT_OR_MILD",
                      "FREQUENT_OR_INTENSE"
                    ]
                  },
                  "violenceRealistic": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "INFREQUENT_OR_MILD",
                      "FREQUENT_OR_INTENSE"
                    ]
                  },
                  "ageRatingOverride": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "SEVENTEEN_PLUS",
                      "UNRATED"
                    ]
                  },
                  "koreaAgeRatingOverride": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "FIFTEEN_PLUS",
                      "NINETEEN_PLUS"
                    ]
                  },
                  "seventeenPlus": {
                    "type": "boolean",
                    "deprecated": true
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AlternativeDistributionDomain": {
        "type": "object",
        "title": "AlternativeDistributionDomain",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "alternativeDistributionDomains"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "domain": {
                "type": "string"
              },
              "referenceName": {
                "type": "string"
              },
              "createdDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AlternativeDistributionDomainsResponse": {
        "type": "object",
        "title": "AlternativeDistributionDomainsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlternativeDistributionDomain"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AlternativeDistributionDomainResponse": {
        "type": "object",
        "title": "AlternativeDistributionDomainResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AlternativeDistributionDomain"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AlternativeDistributionDomainCreateRequest": {
        "type": "object",
        "title": "AlternativeDistributionDomainCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "alternativeDistributionDomains"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string"
                  },
                  "referenceName": {
                    "type": "string"
                  }
                },
                "required": [
                  "domain",
                  "referenceName"
                ]
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AlternativeDistributionKey": {
        "type": "object",
        "title": "AlternativeDistributionKey",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "alternativeDistributionKeys"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "publicKey": {
                "type": "string"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AlternativeDistributionKeysResponse": {
        "type": "object",
        "title": "AlternativeDistributionKeysResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlternativeDistributionKey"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AlternativeDistributionKeyResponse": {
        "type": "object",
        "title": "AlternativeDistributionKeyResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AlternativeDistributionKey"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AlternativeDistributionKeyCreateRequest": {
        "type": "object",
        "title": "AlternativeDistributionKeyCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "alternativeDistributionKeys"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "publicKey": {
                    "type": "string"
                  }
                },
                "required": [
                  "publicKey"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AlternativeDistributionPackageDelta": {
        "type": "object",
        "title": "AlternativeDistributionPackageDelta",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "alternativeDistributionPackageDeltas"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "urlExpirationDate": {
                "type": "string",
                "format": "date-time"
              },
              "alternativeDistributionKeyBlob": {
                "type": "string"
              },
              "fileChecksum": {
                "type": "string"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AlternativeDistributionPackageDeltasResponse": {
        "type": "object",
        "title": "AlternativeDistributionPackageDeltasResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlternativeDistributionPackageDelta"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AlternativeDistributionPackageDeltaResponse": {
        "type": "object",
        "title": "AlternativeDistributionPackageDeltaResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AlternativeDistributionPackageDelta"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AlternativeDistributionPackageVariant": {
        "type": "object",
        "title": "AlternativeDistributionPackageVariant",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "alternativeDistributionPackageVariants"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "urlExpirationDate": {
                "type": "string",
                "format": "date-time"
              },
              "alternativeDistributionKeyBlob": {
                "type": "string"
              },
              "fileChecksum": {
                "type": "string"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AlternativeDistributionPackageVariantsResponse": {
        "type": "object",
        "title": "AlternativeDistributionPackageVariantsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlternativeDistributionPackageVariant"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AlternativeDistributionPackageVariantResponse": {
        "type": "object",
        "title": "AlternativeDistributionPackageVariantResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AlternativeDistributionPackageVariant"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AlternativeDistributionPackageVersion": {
        "type": "object",
        "title": "AlternativeDistributionPackageVersion",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "alternativeDistributionPackageVersions"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "urlExpirationDate": {
                "type": "string",
                "format": "date-time"
              },
              "version": {
                "type": "string"
              },
              "fileChecksum": {
                "type": "string"
              },
              "state": {
                "type": "string",
                "enum": [
                  "COMPLETED",
                  "REPLACED"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "variants": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "alternativeDistributionPackageVariants"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "deltas": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "alternativeDistributionPackageDeltas"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "alternativeDistributionPackage": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "alternativeDistributionPackages"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AlternativeDistributionPackageVersionsResponse": {
        "type": "object",
        "title": "AlternativeDistributionPackageVersionsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlternativeDistributionPackageVersion"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AlternativeDistributionPackageVariant"
                },
                {
                  "$ref": "#/components/schemas/AlternativeDistributionPackageDelta"
                },
                {
                  "$ref": "#/components/schemas/AlternativeDistributionPackage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AlternativeDistributionPackageVersionResponse": {
        "type": "object",
        "title": "AlternativeDistributionPackageVersionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AlternativeDistributionPackageVersion"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AlternativeDistributionPackageVariant"
                },
                {
                  "$ref": "#/components/schemas/AlternativeDistributionPackageDelta"
                },
                {
                  "$ref": "#/components/schemas/AlternativeDistributionPackage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AlternativeDistributionPackage": {
        "type": "object",
        "title": "AlternativeDistributionPackage",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "alternativeDistributionPackages"
            ]
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "versions": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "alternativeDistributionPackageVersions"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AlternativeDistributionPackageResponse": {
        "type": "object",
        "title": "AlternativeDistributionPackageResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AlternativeDistributionPackage"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlternativeDistributionPackageVersion"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AlternativeDistributionPackageCreateRequest": {
        "type": "object",
        "title": "AlternativeDistributionPackageCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "alternativeDistributionPackages"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appStoreVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appStoreVersion"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AnalyticsReportInstance": {
        "type": "object",
        "title": "AnalyticsReportInstance",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "analyticsReportInstances"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "granularity": {
                "type": "string",
                "enum": [
                  "DAILY",
                  "WEEKLY",
                  "MONTHLY"
                ]
              },
              "processingDate": {
                "type": "string",
                "format": "date"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "segments": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AnalyticsReportInstancesResponse": {
        "type": "object",
        "title": "AnalyticsReportInstancesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsReportInstance"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AnalyticsReportInstanceResponse": {
        "type": "object",
        "title": "AnalyticsReportInstanceResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AnalyticsReportInstance"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AnalyticsReportRequest": {
        "type": "object",
        "title": "AnalyticsReportRequest",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "analyticsReportRequests"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "accessType": {
                "type": "string",
                "enum": [
                  "ONE_TIME_SNAPSHOT",
                  "ONGOING"
                ]
              },
              "stoppedDueToInactivity": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "reports": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "analyticsReports"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AnalyticsReportRequestsResponse": {
        "type": "object",
        "title": "AnalyticsReportRequestsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsReportRequest"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsReport"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AnalyticsReportRequestResponse": {
        "type": "object",
        "title": "AnalyticsReportRequestResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AnalyticsReportRequest"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsReport"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AnalyticsReportRequestCreateRequest": {
        "type": "object",
        "title": "AnalyticsReportRequestCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "analyticsReportRequests"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "accessType": {
                    "type": "string",
                    "enum": [
                      "ONE_TIME_SNAPSHOT",
                      "ONGOING"
                    ]
                  }
                },
                "required": [
                  "accessType"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "app"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AnalyticsReportSegment": {
        "type": "object",
        "title": "AnalyticsReportSegment",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "analyticsReportSegments"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "checksum": {
                "type": "string"
              },
              "sizeInBytes": {
                "type": "integer"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AnalyticsReportSegmentsResponse": {
        "type": "object",
        "title": "AnalyticsReportSegmentsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsReportSegment"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AnalyticsReportSegmentResponse": {
        "type": "object",
        "title": "AnalyticsReportSegmentResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AnalyticsReportSegment"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AnalyticsReport": {
        "type": "object",
        "title": "AnalyticsReport",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "analyticsReports"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "category": {
                "type": "string",
                "enum": [
                  "APP_USAGE",
                  "APP_STORE_ENGAGEMENT",
                  "COMMERCE",
                  "FRAMEWORK_USAGE",
                  "PERFORMANCE"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "instances": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AnalyticsReportsResponse": {
        "type": "object",
        "title": "AnalyticsReportsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsReport"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AnalyticsReportResponse": {
        "type": "object",
        "title": "AnalyticsReportResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AnalyticsReport"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppAvailabilityV2": {
        "type": "object",
        "title": "AppAvailabilityV2",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appAvailabilities"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "availableInNewTerritories": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "territoryAvailabilities": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "territoryAvailabilities"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppAvailabilityV2Response": {
        "type": "object",
        "title": "AppAvailabilityV2Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppAvailabilityV2"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TerritoryAvailability"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppAvailabilityV2CreateRequest": {
        "type": "object",
        "title": "AppAvailabilityV2CreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appAvailabilities"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "availableInNewTerritories": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "availableInNewTerritories"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "territoryAvailabilities": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "territoryAvailabilities"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "app",
                  "territoryAvailabilities"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TerritoryAvailabilityInlineCreate"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AppCategory": {
        "type": "object",
        "title": "AppCategory",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appCategories"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "platforms": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Platform"
                }
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "subcategories": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appCategories"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "parent": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appCategories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppCategoriesResponse": {
        "type": "object",
        "title": "AppCategoriesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppCategory"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppCategory"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppCategoryResponse": {
        "type": "object",
        "title": "AppCategoryResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppCategory"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppCategory"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppClipAdvancedExperienceImage": {
        "type": "object",
        "title": "AppClipAdvancedExperienceImage",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appClipAdvancedExperienceImages"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "sourceFileChecksum": {
                "type": "string"
              },
              "imageAsset": {
                "$ref": "#/components/schemas/ImageAsset"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState": {
                "$ref": "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppClipAdvancedExperienceImageResponse": {
        "type": "object",
        "title": "AppClipAdvancedExperienceImageResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppClipAdvancedExperienceImage"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppClipAdvancedExperienceImageCreateRequest": {
        "type": "object",
        "title": "AppClipAdvancedExperienceImageCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appClipAdvancedExperienceImages"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "fileSize"
                ]
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppClipAdvancedExperienceImageUpdateRequest": {
        "type": "object",
        "title": "AppClipAdvancedExperienceImageUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appClipAdvancedExperienceImages"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "sourceFileChecksum": {
                    "type": "string"
                  },
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppClipAdvancedExperienceLocalization": {
        "type": "object",
        "title": "AppClipAdvancedExperienceLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appClipAdvancedExperienceLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "language": {
                "$ref": "#/components/schemas/AppClipAdvancedExperienceLanguage"
              },
              "title": {
                "type": "string"
              },
              "subtitle": {
                "type": "string"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppClipAdvancedExperienceLocalizationInlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appClipAdvancedExperienceLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "language": {
                "$ref": "#/components/schemas/AppClipAdvancedExperienceLanguage"
              },
              "title": {
                "type": "string"
              },
              "subtitle": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "AppClipAdvancedExperience": {
        "type": "object",
        "title": "AppClipAdvancedExperience",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appClipAdvancedExperiences"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "link": {
                "type": "string",
                "format": "uri"
              },
              "version": {
                "type": "integer"
              },
              "status": {
                "type": "string",
                "enum": [
                  "RECEIVED",
                  "DEACTIVATED",
                  "APP_TRANSFER_IN_PROGRESS"
                ]
              },
              "action": {
                "$ref": "#/components/schemas/AppClipAction"
              },
              "isPoweredBy": {
                "type": "boolean"
              },
              "place": {
                "type": "object",
                "properties": {
                  "placeId": {
                    "type": "string"
                  },
                  "names": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "mainAddress": {
                    "type": "object",
                    "properties": {
                      "fullAddress": {
                        "type": "string"
                      },
                      "structuredAddress": {
                        "type": "object",
                        "properties": {
                          "streetAddress": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "floor": {
                            "type": "string"
                          },
                          "neighborhood": {
                            "type": "string"
                          },
                          "locality": {
                            "type": "string"
                          },
                          "stateProvince": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "countryCode": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "displayPoint": {
                    "type": "object",
                    "properties": {
                      "coordinates": {
                        "type": "object",
                        "properties": {
                          "latitude": {
                            "type": "number"
                          },
                          "longitude": {
                            "type": "number"
                          }
                        }
                      },
                      "source": {
                        "type": "string",
                        "enum": [
                          "CALCULATED",
                          "MANUALLY_PLACED"
                        ]
                      }
                    }
                  },
                  "mapAction": {
                    "type": "string",
                    "enum": [
                      "BUY_TICKETS",
                      "VIEW_AVAILABILITY",
                      "VIEW_PRICING",
                      "HOTEL_BOOK_ROOM",
                      "PARKING_RESERVE_PARKING",
                      "RESTAURANT_JOIN_WAITLIST",
                      "RESTAURANT_ORDER_DELIVERY",
                      "RESTAURANT_ORDER_FOOD",
                      "RESTAURANT_ORDER_TAKEOUT",
                      "RESTAURANT_RESERVATION",
                      "SCHEDULE_APPOINTMENT",
                      "RESTAURANT_VIEW_MENU",
                      "THEATER_NOW_PLAYING"
                    ]
                  },
                  "relationship": {
                    "type": "string",
                    "enum": [
                      "OWNER",
                      "AUTHORIZED",
                      "OTHER"
                    ]
                  },
                  "phoneNumber": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "FAX",
                          "LANDLINE",
                          "MOBILE",
                          "TOLLFREE"
                        ]
                      },
                      "intent": {
                        "type": "string"
                      }
                    }
                  },
                  "homePage": {
                    "type": "string"
                  },
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "placeStatus": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "MATCHED",
                  "NO_MATCH"
                ]
              },
              "businessCategory": {
                "type": "string",
                "enum": [
                  "AUTOMOTIVE",
                  "BEAUTY",
                  "BIKES",
                  "BOOKS",
                  "CASINO",
                  "EDUCATION",
                  "EDUCATION_JAPAN",
                  "ENTERTAINMENT",
                  "EV_CHARGER",
                  "FINANCIAL_USD",
                  "FINANCIAL_CNY",
                  "FINANCIAL_GBP",
                  "FINANCIAL_JPY",
                  "FINANCIAL_EUR",
                  "FITNESS",
                  "FOOD_AND_DRINK",
                  "GAS",
                  "GROCERY",
                  "HEALTH_AND_MEDICAL",
                  "HOTEL_AND_TRAVEL",
                  "MUSIC",
                  "PARKING",
                  "PET_SERVICES",
                  "PROFESSIONAL_SERVICES",
                  "SHOPPING",
                  "TICKETING",
                  "TRANSIT"
                ]
              },
              "defaultLanguage": {
                "$ref": "#/components/schemas/AppClipAdvancedExperienceLanguage"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appClip": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appClips"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "headerImage": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appClipAdvancedExperienceImages"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "localizations": {
                "type": "object",
                "properties": {
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appClipAdvancedExperienceLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppClipAdvancedExperiencesResponse": {
        "type": "object",
        "title": "AppClipAdvancedExperiencesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppClipAdvancedExperience"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppClip"
                },
                {
                  "$ref": "#/components/schemas/AppClipAdvancedExperienceImage"
                },
                {
                  "$ref": "#/components/schemas/AppClipAdvancedExperienceLocalization"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppClipAdvancedExperienceResponse": {
        "type": "object",
        "title": "AppClipAdvancedExperienceResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppClipAdvancedExperience"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppClip"
                },
                {
                  "$ref": "#/components/schemas/AppClipAdvancedExperienceImage"
                },
                {
                  "$ref": "#/components/schemas/AppClipAdvancedExperienceLocalization"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppClipAdvancedExperienceCreateRequest": {
        "type": "object",
        "title": "AppClipAdvancedExperienceCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appClipAdvancedExperiences"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "link": {
                    "type": "string",
                    "format": "uri"
                  },
                  "action": {
                    "$ref": "#/components/schemas/AppClipAction"
                  },
                  "isPoweredBy": {
                    "type": "boolean"
                  },
                  "place": {
                    "type": "object",
                    "properties": {
                      "placeId": {
                        "type": "string"
                      },
                      "names": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "mainAddress": {
                        "type": "object",
                        "properties": {
                          "fullAddress": {
                            "type": "string"
                          },
                          "structuredAddress": {
                            "type": "object",
                            "properties": {
                              "streetAddress": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "floor": {
                                "type": "string"
                              },
                              "neighborhood": {
                                "type": "string"
                              },
                              "locality": {
                                "type": "string"
                              },
                              "stateProvince": {
                                "type": "string"
                              },
                              "postalCode": {
                                "type": "string"
                              },
                              "countryCode": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "displayPoint": {
                        "type": "object",
                        "properties": {
                          "coordinates": {
                            "type": "object",
                            "properties": {
                              "latitude": {
                                "type": "number"
                              },
                              "longitude": {
                                "type": "number"
                              }
                            }
                          },
                          "source": {
                            "type": "string",
                            "enum": [
                              "CALCULATED",
                              "MANUALLY_PLACED"
                            ]
                          }
                        }
                      },
                      "mapAction": {
                        "type": "string",
                        "enum": [
                          "BUY_TICKETS",
                          "VIEW_AVAILABILITY",
                          "VIEW_PRICING",
                          "HOTEL_BOOK_ROOM",
                          "PARKING_RESERVE_PARKING",
                          "RESTAURANT_JOIN_WAITLIST",
                          "RESTAURANT_ORDER_DELIVERY",
                          "RESTAURANT_ORDER_FOOD",
                          "RESTAURANT_ORDER_TAKEOUT",
                          "RESTAURANT_RESERVATION",
                          "SCHEDULE_APPOINTMENT",
                          "RESTAURANT_VIEW_MENU",
                          "THEATER_NOW_PLAYING"
                        ]
                      },
                      "relationship": {
                        "type": "string",
                        "enum": [
                          "OWNER",
                          "AUTHORIZED",
                          "OTHER"
                        ]
                      },
                      "phoneNumber": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "FAX",
                              "LANDLINE",
                              "MOBILE",
                              "TOLLFREE"
                            ]
                          },
                          "intent": {
                            "type": "string"
                          }
                        }
                      },
                      "homePage": {
                        "type": "string"
                      },
                      "categories": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "businessCategory": {
                    "type": "string",
                    "enum": [
                      "AUTOMOTIVE",
                      "BEAUTY",
                      "BIKES",
                      "BOOKS",
                      "CASINO",
                      "EDUCATION",
                      "EDUCATION_JAPAN",
                      "ENTERTAINMENT",
                      "EV_CHARGER",
                      "FINANCIAL_USD",
                      "FINANCIAL_CNY",
                      "FINANCIAL_GBP",
                      "FINANCIAL_JPY",
                      "FINANCIAL_EUR",
                      "FITNESS",
                      "FOOD_AND_DRINK",
                      "GAS",
                      "GROCERY",
                      "HEALTH_AND_MEDICAL",
                      "HOTEL_AND_TRAVEL",
                      "MUSIC",
                      "PARKING",
                      "PET_SERVICES",
                      "PROFESSIONAL_SERVICES",
                      "SHOPPING",
                      "TICKETING",
                      "TRANSIT"
                    ]
                  },
                  "defaultLanguage": {
                    "$ref": "#/components/schemas/AppClipAdvancedExperienceLanguage"
                  }
                },
                "required": [
                  "defaultLanguage",
                  "isPoweredBy",
                  "link"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appClip": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appClips"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "headerImage": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appClipAdvancedExperienceImages"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "localizations": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "appClipAdvancedExperienceLocalizations"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appClip",
                  "headerImage",
                  "localizations"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppClipAdvancedExperienceLocalizationInlineCreate"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AppClipAdvancedExperienceUpdateRequest": {
        "type": "object",
        "title": "AppClipAdvancedExperienceUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appClipAdvancedExperiences"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "action": {
                    "$ref": "#/components/schemas/AppClipAction"
                  },
                  "isPoweredBy": {
                    "type": "boolean"
                  },
                  "place": {
                    "type": "object",
                    "properties": {
                      "placeId": {
                        "type": "string"
                      },
                      "names": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "mainAddress": {
                        "type": "object",
                        "properties": {
                          "fullAddress": {
                            "type": "string"
                          },
                          "structuredAddress": {
                            "type": "object",
                            "properties": {
                              "streetAddress": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "floor": {
                                "type": "string"
                              },
                              "neighborhood": {
                                "type": "string"
                              },
                              "locality": {
                                "type": "string"
                              },
                              "stateProvince": {
                                "type": "string"
                              },
                              "postalCode": {
                                "type": "string"
                              },
                              "countryCode": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "displayPoint": {
                        "type": "object",
                        "properties": {
                          "coordinates": {
                            "type": "object",
                            "properties": {
                              "latitude": {
                                "type": "number"
                              },
                              "longitude": {
                                "type": "number"
                              }
                            }
                          },
                          "source": {
                            "type": "string",
                            "enum": [
                              "CALCULATED",
                              "MANUALLY_PLACED"
                            ]
                          }
                        }
                      },
                      "mapAction": {
                        "type": "string",
                        "enum": [
                          "BUY_TICKETS",
                          "VIEW_AVAILABILITY",
                          "VIEW_PRICING",
                          "HOTEL_BOOK_ROOM",
                          "PARKING_RESERVE_PARKING",
                          "RESTAURANT_JOIN_WAITLIST",
                          "RESTAURANT_ORDER_DELIVERY",
                          "RESTAURANT_ORDER_FOOD",
                          "RESTAURANT_ORDER_TAKEOUT",
                          "RESTAURANT_RESERVATION",
                          "SCHEDULE_APPOINTMENT",
                          "RESTAURANT_VIEW_MENU",
                          "THEATER_NOW_PLAYING"
                        ]
                      },
                      "relationship": {
                        "type": "string",
                        "enum": [
                          "OWNER",
                          "AUTHORIZED",
                          "OTHER"
                        ]
                      },
                      "phoneNumber": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "FAX",
                              "LANDLINE",
                              "MOBILE",
                              "TOLLFREE"
                            ]
                          },
                          "intent": {
                            "type": "string"
                          }
                        }
                      },
                      "homePage": {
                        "type": "string"
                      },
                      "categories": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "businessCategory": {
                    "type": "string",
                    "enum": [
                      "AUTOMOTIVE",
                      "BEAUTY",
                      "BIKES",
                      "BOOKS",
                      "CASINO",
                      "EDUCATION",
                      "EDUCATION_JAPAN",
                      "ENTERTAINMENT",
                      "EV_CHARGER",
                      "FINANCIAL_USD",
                      "FINANCIAL_CNY",
                      "FINANCIAL_GBP",
                      "FINANCIAL_JPY",
                      "FINANCIAL_EUR",
                      "FITNESS",
                      "FOOD_AND_DRINK",
                      "GAS",
                      "GROCERY",
                      "HEALTH_AND_MEDICAL",
                      "HOTEL_AND_TRAVEL",
                      "MUSIC",
                      "PARKING",
                      "PET_SERVICES",
                      "PROFESSIONAL_SERVICES",
                      "SHOPPING",
                      "TICKETING",
                      "TRANSIT"
                    ]
                  },
                  "defaultLanguage": {
                    "$ref": "#/components/schemas/AppClipAdvancedExperienceLanguage"
                  },
                  "removed": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appClip": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appClips"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "headerImage": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appClipAdvancedExperienceImages"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "localizations": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "appClipAdvancedExperienceLocalizations"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppClipAdvancedExperienceLocalizationInlineCreate"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AppClipAppStoreReviewDetail": {
        "type": "object",
        "title": "AppClipAppStoreReviewDetail",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appClipAppStoreReviewDetails"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "invocationUrls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appClipDefaultExperience": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appClipDefaultExperiences"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppClipAppStoreReviewDetailResponse": {
        "type": "object",
        "title": "AppClipAppStoreReviewDetailResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppClipAppStoreReviewDetail"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppClipDefaultExperience"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppClipAppStoreReviewDetailCreateRequest": {
        "type": "object",
        "title": "AppClipAppStoreReviewDetailCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appClipAppStoreReviewDetails"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "invocationUrls": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appClipDefaultExperience": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appClipDefaultExperiences"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appClipDefaultExperience"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppClipAppStoreReviewDetailUpdateRequest": {
        "type": "object",
        "title": "AppClipAppStoreReviewDetailUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appClipAppStoreReviewDetails"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "invocationUrls": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppClipDefaultExperienceLocalization": {
        "type": "object",
        "title": "AppClipDefaultExperienceLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appClipDefaultExperienceLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "locale": {
                "type": "string"
              },
              "subtitle": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appClipDefaultExperience": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appClipDefaultExperiences"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appClipHeaderImage": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appClipHeaderImages"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppClipDefaultExperienceLocalizationsResponse": {
        "type": "object",
        "title": "AppClipDefaultExperienceLocalizationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppClipDefaultExperienceLocalization"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppClipDefaultExperience"
                },
                {
                  "$ref": "#/components/schemas/AppClipHeaderImage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppClipDefaultExperienceLocalizationResponse": {
        "type": "object",
        "title": "AppClipDefaultExperienceLocalizationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppClipDefaultExperienceLocalization"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppClipDefaultExperience"
                },
                {
                  "$ref": "#/components/schemas/AppClipHeaderImage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppClipDefaultExperienceLocalizationCreateRequest": {
        "type": "object",
        "title": "AppClipDefaultExperienceLocalizationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appClipDefaultExperienceLocalizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "locale": {
                    "type": "string"
                  },
                  "subtitle": {
                    "type": "string"
                  }
                },
                "required": [
                  "locale"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appClipDefaultExperience": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appClipDefaultExperiences"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appClipDefaultExperience"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppClipDefaultExperienceLocalizationUpdateRequest": {
        "type": "object",
        "title": "AppClipDefaultExperienceLocalizationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appClipDefaultExperienceLocalizations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "subtitle": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppClipDefaultExperience": {
        "type": "object",
        "title": "AppClipDefaultExperience",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appClipDefaultExperiences"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action": {
                "$ref": "#/components/schemas/AppClipAction"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appClip": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appClips"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "releaseWithAppStoreVersion": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appClipDefaultExperienceLocalizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appClipDefaultExperienceLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "appClipAppStoreReviewDetail": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appClipAppStoreReviewDetails"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppClipDefaultExperiencesResponse": {
        "type": "object",
        "title": "AppClipDefaultExperiencesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppClipDefaultExperience"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppClip"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/AppClipDefaultExperienceLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppClipAppStoreReviewDetail"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppClipDefaultExperienceResponse": {
        "type": "object",
        "title": "AppClipDefaultExperienceResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppClipDefaultExperience"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppClip"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/AppClipDefaultExperienceLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppClipAppStoreReviewDetail"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppClipDefaultExperienceCreateRequest": {
        "type": "object",
        "title": "AppClipDefaultExperienceCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appClipDefaultExperiences"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "action": {
                    "$ref": "#/components/schemas/AppClipAction"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appClip": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appClips"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "releaseWithAppStoreVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "appClipDefaultExperienceTemplate": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appClipDefaultExperiences"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "appClip"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppClipDefaultExperienceUpdateRequest": {
        "type": "object",
        "title": "AppClipDefaultExperienceUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appClipDefaultExperiences"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "action": {
                    "$ref": "#/components/schemas/AppClipAction"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "releaseWithAppStoreVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppClipDomainStatus": {
        "type": "object",
        "title": "AppClipDomainStatus",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appClipDomainStatuses"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "domains": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "domain": {
                      "type": "string"
                    },
                    "isValid": {
                      "type": "boolean"
                    },
                    "lastUpdatedDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "errorCode": {
                      "type": "string",
                      "enum": [
                        "BAD_HTTP_RESPONSE",
                        "BAD_JSON_CONTENT",
                        "BAD_PKCS7_SIGNATURE",
                        "CANNOT_REACH_AASA_FILE",
                        "DNS_ERROR",
                        "INSECURE_REDIRECTS_FORBIDDEN",
                        "INVALID_ENTITLEMENT_MISSING_SECTION",
                        "INVALID_ENTITLEMENT_SYNTAX_ERROR",
                        "INVALID_ENTITLEMENT_UNHANDLED_SECTION",
                        "INVALID_ENTITLEMENT_UNKNOWN_ID",
                        "NETWORK_ERROR",
                        "NETWORK_ERROR_TEMPORARY",
                        "OTHER_ERROR",
                        "TIMEOUT",
                        "TLS_ERROR",
                        "UNEXPECTED_ERROR"
                      ]
                    }
                  }
                }
              },
              "lastUpdatedDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppClipDomainStatusResponse": {
        "type": "object",
        "title": "AppClipDomainStatusResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppClipDomainStatus"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppClipHeaderImage": {
        "type": "object",
        "title": "AppClipHeaderImage",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appClipHeaderImages"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "sourceFileChecksum": {
                "type": "string"
              },
              "imageAsset": {
                "$ref": "#/components/schemas/ImageAsset"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState": {
                "$ref": "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appClipDefaultExperienceLocalization": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appClipDefaultExperienceLocalizations"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppClipHeaderImageResponse": {
        "type": "object",
        "title": "AppClipHeaderImageResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppClipHeaderImage"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppClipDefaultExperienceLocalization"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppClipHeaderImageCreateRequest": {
        "type": "object",
        "title": "AppClipHeaderImageCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appClipHeaderImages"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "fileSize"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appClipDefaultExperienceLocalization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appClipDefaultExperienceLocalizations"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appClipDefaultExperienceLocalization"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppClipHeaderImageUpdateRequest": {
        "type": "object",
        "title": "AppClipHeaderImageUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appClipHeaderImages"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "sourceFileChecksum": {
                    "type": "string"
                  },
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppClip": {
        "type": "object",
        "title": "AppClip",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appClips"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "bundleId": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "app": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appClipDefaultExperiences": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appClipDefaultExperiences"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "appClipAdvancedExperiences": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppClipsResponse": {
        "type": "object",
        "title": "AppClipsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppClip"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/AppClipDefaultExperience"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppClipResponse": {
        "type": "object",
        "title": "AppClipResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppClip"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/AppClipDefaultExperience"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppCustomProductPageLocalization": {
        "type": "object",
        "title": "AppCustomProductPageLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appCustomProductPageLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "locale": {
                "type": "string"
              },
              "promotionalText": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appCustomProductPageVersion": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appCustomProductPageVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appScreenshotSets": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appScreenshotSets"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "appPreviewSets": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appPreviewSets"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppCustomProductPageLocalizationInlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appCustomProductPageLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "locale": {
                "type": "string"
              },
              "promotionalText": {
                "type": "string"
              }
            },
            "required": [
              "locale"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appCustomProductPageVersion": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appCustomProductPageVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "attributes",
          "type"
        ]
      },
      "AppCustomProductPageLocalizationsResponse": {
        "type": "object",
        "title": "AppCustomProductPageLocalizationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppCustomProductPageLocalization"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppCustomProductPageVersion"
                },
                {
                  "$ref": "#/components/schemas/AppScreenshotSet"
                },
                {
                  "$ref": "#/components/schemas/AppPreviewSet"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppCustomProductPageLocalizationResponse": {
        "type": "object",
        "title": "AppCustomProductPageLocalizationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppCustomProductPageLocalization"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppCustomProductPageVersion"
                },
                {
                  "$ref": "#/components/schemas/AppScreenshotSet"
                },
                {
                  "$ref": "#/components/schemas/AppPreviewSet"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppCustomProductPageLocalizationCreateRequest": {
        "type": "object",
        "title": "AppCustomProductPageLocalizationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appCustomProductPageLocalizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "locale": {
                    "type": "string"
                  },
                  "promotionalText": {
                    "type": "string"
                  }
                },
                "required": [
                  "locale"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appCustomProductPageVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appCustomProductPageVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appCustomProductPageVersion"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppCustomProductPageLocalizationUpdateRequest": {
        "type": "object",
        "title": "AppCustomProductPageLocalizationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appCustomProductPageLocalizations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "promotionalText": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppCustomProductPageVersion": {
        "type": "object",
        "title": "AppCustomProductPageVersion",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appCustomProductPageVersions"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string"
              },
              "state": {
                "type": "string",
                "enum": [
                  "PREPARE_FOR_SUBMISSION",
                  "READY_FOR_REVIEW",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "ACCEPTED",
                  "APPROVED",
                  "REPLACED_WITH_NEW_VERSION",
                  "REJECTED"
                ]
              },
              "deepLink": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appCustomProductPage": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appCustomProductPages"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appCustomProductPageLocalizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appCustomProductPageLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppCustomProductPageVersionInlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appCustomProductPageVersions"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "deepLink": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appCustomProductPage": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appCustomProductPages"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appCustomProductPageLocalizations": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appCustomProductPageLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "AppCustomProductPageVersionsResponse": {
        "type": "object",
        "title": "AppCustomProductPageVersionsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppCustomProductPageVersion"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppCustomProductPage"
                },
                {
                  "$ref": "#/components/schemas/AppCustomProductPageLocalization"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppCustomProductPageVersionResponse": {
        "type": "object",
        "title": "AppCustomProductPageVersionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppCustomProductPageVersion"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppCustomProductPage"
                },
                {
                  "$ref": "#/components/schemas/AppCustomProductPageLocalization"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppCustomProductPageVersionCreateRequest": {
        "type": "object",
        "title": "AppCustomProductPageVersionCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appCustomProductPageVersions"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "deepLink": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appCustomProductPage": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appCustomProductPages"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "appCustomProductPageLocalizations": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "appCustomProductPageLocalizations"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  }
                },
                "required": [
                  "appCustomProductPage"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppCustomProductPageVersionUpdateRequest": {
        "type": "object",
        "title": "AppCustomProductPageVersionUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appCustomProductPageVersions"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "deepLink": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppCustomProductPage": {
        "type": "object",
        "title": "AppCustomProductPage",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appCustomProductPages"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              },
              "visible": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "app": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appCustomProductPageVersions": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appCustomProductPageVersions"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppCustomProductPagesResponse": {
        "type": "object",
        "title": "AppCustomProductPagesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppCustomProductPage"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/AppCustomProductPageVersion"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppCustomProductPageResponse": {
        "type": "object",
        "title": "AppCustomProductPageResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppCustomProductPage"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/AppCustomProductPageVersion"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppCustomProductPageCreateRequest": {
        "type": "object",
        "title": "AppCustomProductPageCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appCustomProductPages"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "appCustomProductPageVersions": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "appCustomProductPageVersions"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  },
                  "appStoreVersionTemplate": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "customProductPageTemplate": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appCustomProductPages"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "app"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppCustomProductPageLocalizationInlineCreate"
                },
                {
                  "$ref": "#/components/schemas/AppCustomProductPageVersionInlineCreate"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AppCustomProductPageUpdateRequest": {
        "type": "object",
        "title": "AppCustomProductPageUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appCustomProductPages"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "visible": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppEncryptionDeclarationDocument": {
        "type": "object",
        "title": "AppEncryptionDeclarationDocument",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appEncryptionDeclarationDocuments"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "assetToken": {
                "type": "string"
              },
              "downloadUrl": {
                "type": "string",
                "format": "uri"
              },
              "sourceFileChecksum": {
                "type": "string"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState": {
                "$ref": "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppEncryptionDeclarationDocumentResponse": {
        "type": "object",
        "title": "AppEncryptionDeclarationDocumentResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppEncryptionDeclarationDocument"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppEncryptionDeclarationDocumentCreateRequest": {
        "type": "object",
        "title": "AppEncryptionDeclarationDocumentCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appEncryptionDeclarationDocuments"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "fileSize"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appEncryptionDeclaration": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appEncryptionDeclarations"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appEncryptionDeclaration"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppEncryptionDeclarationDocumentUpdateRequest": {
        "type": "object",
        "title": "AppEncryptionDeclarationDocumentUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appEncryptionDeclarationDocuments"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "sourceFileChecksum": {
                    "type": "string"
                  },
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppEncryptionDeclaration": {
        "type": "object",
        "title": "AppEncryptionDeclaration",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appEncryptionDeclarations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "appDescription": {
                "type": "string"
              },
              "createdDate": {
                "type": "string",
                "format": "date-time"
              },
              "usesEncryption": {
                "type": "boolean",
                "deprecated": true
              },
              "exempt": {
                "type": "boolean"
              },
              "containsProprietaryCryptography": {
                "type": "boolean"
              },
              "containsThirdPartyCryptography": {
                "type": "boolean"
              },
              "availableOnFrenchStore": {
                "type": "boolean"
              },
              "platform": {
                "deprecated": true,
                "$ref": "#/components/schemas/Platform"
              },
              "uploadedDate": {
                "type": "string",
                "format": "date-time",
                "deprecated": true
              },
              "documentUrl": {
                "type": "string",
                "deprecated": true
              },
              "documentName": {
                "type": "string",
                "deprecated": true
              },
              "documentType": {
                "type": "string",
                "deprecated": true
              },
              "appEncryptionDeclarationState": {
                "$ref": "#/components/schemas/AppEncryptionDeclarationState"
              },
              "codeValue": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "app": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                },
                "deprecated": true
              },
              "builds": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "builds"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                },
                "deprecated": true
              },
              "appEncryptionDeclarationDocument": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appEncryptionDeclarationDocuments"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppEncryptionDeclarationsResponse": {
        "type": "object",
        "title": "AppEncryptionDeclarationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppEncryptionDeclaration"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/Build"
                },
                {
                  "$ref": "#/components/schemas/AppEncryptionDeclarationDocument"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppEncryptionDeclarationResponse": {
        "type": "object",
        "title": "AppEncryptionDeclarationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppEncryptionDeclaration"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/Build"
                },
                {
                  "$ref": "#/components/schemas/AppEncryptionDeclarationDocument"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppEncryptionDeclarationCreateRequest": {
        "type": "object",
        "title": "AppEncryptionDeclarationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appEncryptionDeclarations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "appDescription": {
                    "type": "string"
                  },
                  "containsProprietaryCryptography": {
                    "type": "boolean"
                  },
                  "containsThirdPartyCryptography": {
                    "type": "boolean"
                  },
                  "availableOnFrenchStore": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "availableOnFrenchStore",
                  "appDescription",
                  "containsThirdPartyCryptography",
                  "containsProprietaryCryptography"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ],
                    "deprecated": true
                  }
                },
                "required": [
                  "app"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppEventLocalization": {
        "type": "object",
        "title": "AppEventLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appEventLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "locale": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "shortDescription": {
                "type": "string"
              },
              "longDescription": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appEvent": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appEvents"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appEventScreenshots": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appEventScreenshots"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "appEventVideoClips": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appEventVideoClips"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppEventLocalizationsResponse": {
        "type": "object",
        "title": "AppEventLocalizationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppEventLocalization"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppEvent"
                },
                {
                  "$ref": "#/components/schemas/AppEventScreenshot"
                },
                {
                  "$ref": "#/components/schemas/AppEventVideoClip"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppEventLocalizationResponse": {
        "type": "object",
        "title": "AppEventLocalizationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppEventLocalization"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppEvent"
                },
                {
                  "$ref": "#/components/schemas/AppEventScreenshot"
                },
                {
                  "$ref": "#/components/schemas/AppEventVideoClip"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppEventLocalizationCreateRequest": {
        "type": "object",
        "title": "AppEventLocalizationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appEventLocalizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "locale": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "shortDescription": {
                    "type": "string"
                  },
                  "longDescription": {
                    "type": "string"
                  }
                },
                "required": [
                  "locale"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appEvent": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appEvents"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appEvent"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppEventLocalizationUpdateRequest": {
        "type": "object",
        "title": "AppEventLocalizationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appEventLocalizations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "shortDescription": {
                    "type": "string"
                  },
                  "longDescription": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppEventScreenshot": {
        "type": "object",
        "title": "AppEventScreenshot",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appEventScreenshots"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "imageAsset": {
                "$ref": "#/components/schemas/ImageAsset"
              },
              "assetToken": {
                "type": "string"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState": {
                "$ref": "#/components/schemas/AppMediaAssetState"
              },
              "appEventAssetType": {
                "$ref": "#/components/schemas/AppEventAssetType"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appEventLocalization": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appEventLocalizations"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppEventScreenshotsResponse": {
        "type": "object",
        "title": "AppEventScreenshotsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppEventScreenshot"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppEventLocalization"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppEventScreenshotResponse": {
        "type": "object",
        "title": "AppEventScreenshotResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppEventScreenshot"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppEventLocalization"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppEventScreenshotCreateRequest": {
        "type": "object",
        "title": "AppEventScreenshotCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appEventScreenshots"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  },
                  "appEventAssetType": {
                    "$ref": "#/components/schemas/AppEventAssetType"
                  }
                },
                "required": [
                  "fileName",
                  "appEventAssetType",
                  "fileSize"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appEventLocalization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appEventLocalizations"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appEventLocalization"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppEventScreenshotUpdateRequest": {
        "type": "object",
        "title": "AppEventScreenshotUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appEventScreenshots"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppEventVideoClip": {
        "type": "object",
        "title": "AppEventVideoClip",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appEventVideoClips"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "previewFrameTimeCode": {
                "type": "string"
              },
              "videoUrl": {
                "type": "string"
              },
              "previewFrameImage": {
                "$ref": "#/components/schemas/PreviewFrameImage"
              },
              "previewImage": {
                "deprecated": true,
                "$ref": "#/components/schemas/ImageAsset"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState": {
                "deprecated": true,
                "$ref": "#/components/schemas/AppMediaAssetState"
              },
              "videoDeliveryState": {
                "$ref": "#/components/schemas/AppMediaVideoState"
              },
              "appEventAssetType": {
                "$ref": "#/components/schemas/AppEventAssetType"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appEventLocalization": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appEventLocalizations"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppEventVideoClipsResponse": {
        "type": "object",
        "title": "AppEventVideoClipsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppEventVideoClip"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppEventLocalization"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppEventVideoClipResponse": {
        "type": "object",
        "title": "AppEventVideoClipResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppEventVideoClip"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppEventLocalization"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppEventVideoClipCreateRequest": {
        "type": "object",
        "title": "AppEventVideoClipCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appEventVideoClips"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  },
                  "previewFrameTimeCode": {
                    "type": "string"
                  },
                  "appEventAssetType": {
                    "$ref": "#/components/schemas/AppEventAssetType"
                  }
                },
                "required": [
                  "fileName",
                  "appEventAssetType",
                  "fileSize"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appEventLocalization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appEventLocalizations"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appEventLocalization"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppEventVideoClipUpdateRequest": {
        "type": "object",
        "title": "AppEventVideoClipUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appEventVideoClips"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "previewFrameTimeCode": {
                    "type": "string"
                  },
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppEvent": {
        "type": "object",
        "title": "AppEvent",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appEvents"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "referenceName": {
                "type": "string"
              },
              "badge": {
                "type": "string",
                "enum": [
                  "LIVE_EVENT",
                  "PREMIERE",
                  "CHALLENGE",
                  "COMPETITION",
                  "NEW_SEASON",
                  "MAJOR_UPDATE",
                  "SPECIAL_EVENT"
                ]
              },
              "eventState": {
                "type": "string",
                "enum": [
                  "DRAFT",
                  "READY_FOR_REVIEW",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "REJECTED",
                  "ACCEPTED",
                  "APPROVED",
                  "PUBLISHED",
                  "PAST",
                  "ARCHIVED"
                ]
              },
              "deepLink": {
                "type": "string",
                "format": "uri"
              },
              "purchaseRequirement": {
                "type": "string"
              },
              "primaryLocale": {
                "type": "string"
              },
              "priority": {
                "type": "string",
                "enum": [
                  "HIGH",
                  "NORMAL"
                ]
              },
              "purpose": {
                "type": "string",
                "enum": [
                  "APPROPRIATE_FOR_ALL_USERS",
                  "ATTRACT_NEW_USERS",
                  "KEEP_ACTIVE_USERS_INFORMED",
                  "BRING_BACK_LAPSED_USERS"
                ]
              },
              "territorySchedules": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "territories": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "publishStart": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "eventStart": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "eventEnd": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              },
              "archivedTerritorySchedules": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "territories": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "publishStart": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "eventStart": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "eventEnd": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "localizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appEventLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppEventsResponse": {
        "type": "object",
        "title": "AppEventsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppEvent"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppEventLocalization"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppEventResponse": {
        "type": "object",
        "title": "AppEventResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppEvent"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppEventLocalization"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppEventCreateRequest": {
        "type": "object",
        "title": "AppEventCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appEvents"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "referenceName": {
                    "type": "string"
                  },
                  "badge": {
                    "type": "string",
                    "enum": [
                      "LIVE_EVENT",
                      "PREMIERE",
                      "CHALLENGE",
                      "COMPETITION",
                      "NEW_SEASON",
                      "MAJOR_UPDATE",
                      "SPECIAL_EVENT"
                    ]
                  },
                  "deepLink": {
                    "type": "string",
                    "format": "uri"
                  },
                  "purchaseRequirement": {
                    "type": "string"
                  },
                  "primaryLocale": {
                    "type": "string"
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "HIGH",
                      "NORMAL"
                    ]
                  },
                  "purpose": {
                    "type": "string",
                    "enum": [
                      "APPROPRIATE_FOR_ALL_USERS",
                      "ATTRACT_NEW_USERS",
                      "KEEP_ACTIVE_USERS_INFORMED",
                      "BRING_BACK_LAPSED_USERS"
                    ]
                  },
                  "territorySchedules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "territories": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "publishStart": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "eventStart": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "eventEnd": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "referenceName"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "app"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppEventUpdateRequest": {
        "type": "object",
        "title": "AppEventUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appEvents"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "referenceName": {
                    "type": "string"
                  },
                  "badge": {
                    "type": "string",
                    "enum": [
                      "LIVE_EVENT",
                      "PREMIERE",
                      "CHALLENGE",
                      "COMPETITION",
                      "NEW_SEASON",
                      "MAJOR_UPDATE",
                      "SPECIAL_EVENT"
                    ]
                  },
                  "deepLink": {
                    "type": "string",
                    "format": "uri"
                  },
                  "purchaseRequirement": {
                    "type": "string"
                  },
                  "primaryLocale": {
                    "type": "string"
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "HIGH",
                      "NORMAL"
                    ]
                  },
                  "purpose": {
                    "type": "string",
                    "enum": [
                      "APPROPRIATE_FOR_ALL_USERS",
                      "ATTRACT_NEW_USERS",
                      "KEEP_ACTIVE_USERS_INFORMED",
                      "BRING_BACK_LAPSED_USERS"
                    ]
                  },
                  "territorySchedules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "territories": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "publishStart": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "eventStart": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "eventEnd": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppInfoLocalization": {
        "type": "object",
        "title": "AppInfoLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appInfoLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "locale": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "subtitle": {
                "type": "string"
              },
              "privacyPolicyUrl": {
                "type": "string"
              },
              "privacyChoicesUrl": {
                "type": "string"
              },
              "privacyPolicyText": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appInfo": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appInfos"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppInfoLocalizationsResponse": {
        "type": "object",
        "title": "AppInfoLocalizationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppInfoLocalization"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppInfo"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppInfoLocalizationResponse": {
        "type": "object",
        "title": "AppInfoLocalizationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppInfoLocalization"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppInfo"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppInfoLocalizationCreateRequest": {
        "type": "object",
        "title": "AppInfoLocalizationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appInfoLocalizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "locale": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "subtitle": {
                    "type": "string"
                  },
                  "privacyPolicyUrl": {
                    "type": "string"
                  },
                  "privacyChoicesUrl": {
                    "type": "string"
                  },
                  "privacyPolicyText": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "locale"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appInfo": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appInfos"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appInfo"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppInfoLocalizationUpdateRequest": {
        "type": "object",
        "title": "AppInfoLocalizationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appInfoLocalizations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "subtitle": {
                    "type": "string"
                  },
                  "privacyPolicyUrl": {
                    "type": "string"
                  },
                  "privacyChoicesUrl": {
                    "type": "string"
                  },
                  "privacyPolicyText": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppInfo": {
        "type": "object",
        "title": "AppInfo",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appInfos"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "appStoreState": {
                "deprecated": true,
                "$ref": "#/components/schemas/AppStoreVersionState"
              },
              "state": {
                "type": "string",
                "enum": [
                  "ACCEPTED",
                  "DEVELOPER_REJECTED",
                  "IN_REVIEW",
                  "PENDING_RELEASE",
                  "PREPARE_FOR_SUBMISSION",
                  "READY_FOR_DISTRIBUTION",
                  "READY_FOR_REVIEW",
                  "REJECTED",
                  "REPLACED_WITH_NEW_INFO",
                  "WAITING_FOR_REVIEW"
                ]
              },
              "appStoreAgeRating": {
                "$ref": "#/components/schemas/AppStoreAgeRating"
              },
              "australiaAgeRating": {
                "type": "string",
                "enum": [
                  "FIFTEEN",
                  "EIGHTEEN"
                ]
              },
              "brazilAgeRating": {
                "deprecated": true,
                "$ref": "#/components/schemas/BrazilAgeRating"
              },
              "brazilAgeRatingV2": {
                "type": "string",
                "enum": [
                  "SELF_RATED_L",
                  "SELF_RATED_TEN",
                  "SELF_RATED_TWELVE",
                  "SELF_RATED_FOURTEEN",
                  "SELF_RATED_SIXTEEN",
                  "SELF_RATED_EIGHTEEN",
                  "OFFICIAL_L",
                  "OFFICIAL_TEN",
                  "OFFICIAL_TWELVE",
                  "OFFICIAL_FOURTEEN",
                  "OFFICIAL_SIXTEEN",
                  "OFFICIAL_EIGHTEEN"
                ]
              },
              "franceAgeRating": {
                "type": "string",
                "enum": [
                  "EIGHTEEN"
                ]
              },
              "koreaAgeRating": {
                "type": "string",
                "enum": [
                  "ALL",
                  "TWELVE",
                  "FIFTEEN",
                  "NINETEEN",
                  "NOT_APPLICABLE"
                ]
              },
              "kidsAgeBand": {
                "$ref": "#/components/schemas/KidsAgeBand"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "app": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "ageRatingDeclaration": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "ageRatingDeclarations"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appInfoLocalizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appInfoLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "primaryCategory": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appCategories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "primarySubcategoryOne": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appCategories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "primarySubcategoryTwo": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appCategories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "secondaryCategory": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appCategories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "secondarySubcategoryOne": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appCategories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "secondarySubcategoryTwo": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appCategories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppInfosResponse": {
        "type": "object",
        "title": "AppInfosResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppInfo"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/AgeRatingDeclaration"
                },
                {
                  "$ref": "#/components/schemas/AppInfoLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppCategory"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppInfoResponse": {
        "type": "object",
        "title": "AppInfoResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppInfo"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/AgeRatingDeclaration"
                },
                {
                  "$ref": "#/components/schemas/AppInfoLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppCategory"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppInfoUpdateRequest": {
        "type": "object",
        "title": "AppInfoUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appInfos"
                ]
              },
              "id": {
                "type": "string"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "primaryCategory": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appCategories"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "primarySubcategoryOne": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appCategories"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "primarySubcategoryTwo": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appCategories"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "secondaryCategory": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appCategories"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "secondarySubcategoryOne": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appCategories"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "secondarySubcategoryTwo": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appCategories"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppPreviewSet": {
        "type": "object",
        "title": "AppPreviewSet",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appPreviewSets"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "previewType": {
                "$ref": "#/components/schemas/PreviewType"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appStoreVersionLocalization": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersionLocalizations"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appCustomProductPageLocalization": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appCustomProductPageLocalizations"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appStoreVersionExperimentTreatmentLocalization": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersionExperimentTreatmentLocalizations"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appPreviews": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appPreviews"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppPreviewSetsResponse": {
        "type": "object",
        "title": "AppPreviewSetsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppPreviewSet"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppStoreVersionLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppCustomProductPageLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppPreview"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppPreviewSetResponse": {
        "type": "object",
        "title": "AppPreviewSetResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppPreviewSet"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppStoreVersionLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppCustomProductPageLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppPreview"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppPreviewSetCreateRequest": {
        "type": "object",
        "title": "AppPreviewSetCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appPreviewSets"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "previewType": {
                    "$ref": "#/components/schemas/PreviewType"
                  }
                },
                "required": [
                  "previewType"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appStoreVersionLocalization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersionLocalizations"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "appCustomProductPageLocalization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appCustomProductPageLocalizations"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "appStoreVersionExperimentTreatmentLocalization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersionExperimentTreatmentLocalizations"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppPreview": {
        "type": "object",
        "title": "AppPreview",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appPreviews"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "sourceFileChecksum": {
                "type": "string"
              },
              "previewFrameTimeCode": {
                "type": "string"
              },
              "mimeType": {
                "type": "string"
              },
              "videoUrl": {
                "type": "string"
              },
              "previewFrameImage": {
                "$ref": "#/components/schemas/PreviewFrameImage"
              },
              "previewImage": {
                "deprecated": true,
                "$ref": "#/components/schemas/ImageAsset"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState": {
                "deprecated": true,
                "$ref": "#/components/schemas/AppMediaAssetState"
              },
              "videoDeliveryState": {
                "$ref": "#/components/schemas/AppMediaVideoState"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appPreviewSet": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appPreviewSets"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppPreviewsResponse": {
        "type": "object",
        "title": "AppPreviewsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppPreview"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppPreviewSet"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppPreviewResponse": {
        "type": "object",
        "title": "AppPreviewResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppPreview"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppPreviewSet"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppPreviewCreateRequest": {
        "type": "object",
        "title": "AppPreviewCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appPreviews"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  },
                  "previewFrameTimeCode": {
                    "type": "string"
                  },
                  "mimeType": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "fileSize"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appPreviewSet": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appPreviewSets"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appPreviewSet"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppPreviewUpdateRequest": {
        "type": "object",
        "title": "AppPreviewUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appPreviews"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "sourceFileChecksum": {
                    "type": "string"
                  },
                  "previewFrameTimeCode": {
                    "type": "string"
                  },
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppPricePointV3": {
        "type": "object",
        "title": "AppPricePointV3",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appPricePoints"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "customerPrice": {
                "type": "string"
              },
              "proceeds": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "app": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "equalizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "territory": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppPricePointsV3Response": {
        "type": "object",
        "title": "AppPricePointsV3Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppPricePointV3"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/Territory"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppPricePointV3Response": {
        "type": "object",
        "title": "AppPricePointV3Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppPricePointV3"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/Territory"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppPriceSchedule": {
        "type": "object",
        "title": "AppPriceSchedule",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appPriceSchedules"
            ]
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "app": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "baseTerritory": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "manualPrices": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appPrices"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "automaticPrices": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appPrices"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppPriceScheduleResponse": {
        "type": "object",
        "title": "AppPriceScheduleResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppPriceSchedule"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/Territory"
                },
                {
                  "$ref": "#/components/schemas/AppPriceV2"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppPriceScheduleCreateRequest": {
        "type": "object",
        "title": "AppPriceScheduleCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appPriceSchedules"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "baseTerritory": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "territories"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "manualPrices": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "appPrices"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "app",
                  "manualPrices",
                  "baseTerritory"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppPriceV2InlineCreate"
                },
                {
                  "$ref": "#/components/schemas/TerritoryInlineCreate"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AppPriceV2": {
        "type": "object",
        "title": "AppPriceV2",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appPrices"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "manual": {
                "type": "boolean"
              },
              "startDate": {
                "type": "string",
                "format": "date"
              },
              "endDate": {
                "type": "string",
                "format": "date"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appPricePoint": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appPricePoints"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "territory": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppPriceV2InlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appPrices"
            ]
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "AppPricesV2Response": {
        "type": "object",
        "title": "AppPricesV2Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppPriceV2"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppPricePointV3"
                },
                {
                  "$ref": "#/components/schemas/Territory"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppScreenshotSet": {
        "type": "object",
        "title": "AppScreenshotSet",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appScreenshotSets"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "screenshotDisplayType": {
                "$ref": "#/components/schemas/ScreenshotDisplayType"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appStoreVersionLocalization": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersionLocalizations"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appCustomProductPageLocalization": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appCustomProductPageLocalizations"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appStoreVersionExperimentTreatmentLocalization": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersionExperimentTreatmentLocalizations"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appScreenshots": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appScreenshots"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppScreenshotSetsResponse": {
        "type": "object",
        "title": "AppScreenshotSetsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppScreenshotSet"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppStoreVersionLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppCustomProductPageLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppScreenshot"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppScreenshotSetResponse": {
        "type": "object",
        "title": "AppScreenshotSetResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppScreenshotSet"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppStoreVersionLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppCustomProductPageLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppScreenshot"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppScreenshotSetCreateRequest": {
        "type": "object",
        "title": "AppScreenshotSetCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appScreenshotSets"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "screenshotDisplayType": {
                    "$ref": "#/components/schemas/ScreenshotDisplayType"
                  }
                },
                "required": [
                  "screenshotDisplayType"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appStoreVersionLocalization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersionLocalizations"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "appCustomProductPageLocalization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appCustomProductPageLocalizations"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "appStoreVersionExperimentTreatmentLocalization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersionExperimentTreatmentLocalizations"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppScreenshot": {
        "type": "object",
        "title": "AppScreenshot",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appScreenshots"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "sourceFileChecksum": {
                "type": "string"
              },
              "imageAsset": {
                "$ref": "#/components/schemas/ImageAsset"
              },
              "assetToken": {
                "type": "string"
              },
              "assetType": {
                "type": "string"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState": {
                "$ref": "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appScreenshotSet": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appScreenshotSets"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppScreenshotsResponse": {
        "type": "object",
        "title": "AppScreenshotsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppScreenshot"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppScreenshotSet"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppScreenshotResponse": {
        "type": "object",
        "title": "AppScreenshotResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppScreenshot"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppScreenshotSet"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppScreenshotCreateRequest": {
        "type": "object",
        "title": "AppScreenshotCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appScreenshots"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "fileSize"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appScreenshotSet": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appScreenshotSets"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appScreenshotSet"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppScreenshotUpdateRequest": {
        "type": "object",
        "title": "AppScreenshotUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appScreenshots"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "sourceFileChecksum": {
                    "type": "string"
                  },
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreReviewAttachment": {
        "type": "object",
        "title": "AppStoreReviewAttachment",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appStoreReviewAttachments"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "sourceFileChecksum": {
                "type": "string"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState": {
                "$ref": "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appStoreReviewDetail": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreReviewDetails"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppStoreReviewAttachmentsResponse": {
        "type": "object",
        "title": "AppStoreReviewAttachmentsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppStoreReviewAttachment"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppStoreReviewDetail"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreReviewAttachmentResponse": {
        "type": "object",
        "title": "AppStoreReviewAttachmentResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppStoreReviewAttachment"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppStoreReviewDetail"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreReviewAttachmentCreateRequest": {
        "type": "object",
        "title": "AppStoreReviewAttachmentCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreReviewAttachments"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "fileSize"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appStoreReviewDetail": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreReviewDetails"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appStoreReviewDetail"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreReviewAttachmentUpdateRequest": {
        "type": "object",
        "title": "AppStoreReviewAttachmentUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreReviewAttachments"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "sourceFileChecksum": {
                    "type": "string"
                  },
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreReviewDetail": {
        "type": "object",
        "title": "AppStoreReviewDetail",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appStoreReviewDetails"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "contactFirstName": {
                "type": "string"
              },
              "contactLastName": {
                "type": "string"
              },
              "contactPhone": {
                "type": "string"
              },
              "contactEmail": {
                "type": "string"
              },
              "demoAccountName": {
                "type": "string"
              },
              "demoAccountPassword": {
                "type": "string"
              },
              "demoAccountRequired": {
                "type": "boolean"
              },
              "notes": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appStoreVersion": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appStoreReviewAttachments": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appStoreReviewAttachments"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppStoreReviewDetailResponse": {
        "type": "object",
        "title": "AppStoreReviewDetailResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppStoreReviewDetail"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/AppStoreReviewAttachment"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreReviewDetailCreateRequest": {
        "type": "object",
        "title": "AppStoreReviewDetailCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreReviewDetails"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "contactFirstName": {
                    "type": "string"
                  },
                  "contactLastName": {
                    "type": "string"
                  },
                  "contactPhone": {
                    "type": "string"
                  },
                  "contactEmail": {
                    "type": "string"
                  },
                  "demoAccountName": {
                    "type": "string"
                  },
                  "demoAccountPassword": {
                    "type": "string"
                  },
                  "demoAccountRequired": {
                    "type": "boolean"
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appStoreVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appStoreVersion"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreReviewDetailUpdateRequest": {
        "type": "object",
        "title": "AppStoreReviewDetailUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreReviewDetails"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "contactFirstName": {
                    "type": "string"
                  },
                  "contactLastName": {
                    "type": "string"
                  },
                  "contactPhone": {
                    "type": "string"
                  },
                  "contactEmail": {
                    "type": "string"
                  },
                  "demoAccountName": {
                    "type": "string"
                  },
                  "demoAccountPassword": {
                    "type": "string"
                  },
                  "demoAccountRequired": {
                    "type": "boolean"
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreVersionExperimentTreatmentLocalization": {
        "type": "object",
        "title": "AppStoreVersionExperimentTreatmentLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appStoreVersionExperimentTreatmentLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "locale": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appStoreVersionExperimentTreatment": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersionExperimentTreatments"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appScreenshotSets": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appScreenshotSets"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "appPreviewSets": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appPreviewSets"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppStoreVersionExperimentTreatmentLocalizationsResponse": {
        "type": "object",
        "title": "AppStoreVersionExperimentTreatmentLocalizationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentLocalization"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatment"
                },
                {
                  "$ref": "#/components/schemas/AppScreenshotSet"
                },
                {
                  "$ref": "#/components/schemas/AppPreviewSet"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionExperimentTreatmentLocalizationResponse": {
        "type": "object",
        "title": "AppStoreVersionExperimentTreatmentLocalizationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentLocalization"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatment"
                },
                {
                  "$ref": "#/components/schemas/AppScreenshotSet"
                },
                {
                  "$ref": "#/components/schemas/AppPreviewSet"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionExperimentTreatmentLocalizationCreateRequest": {
        "type": "object",
        "title": "AppStoreVersionExperimentTreatmentLocalizationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersionExperimentTreatmentLocalizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "locale": {
                    "type": "string"
                  }
                },
                "required": [
                  "locale"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appStoreVersionExperimentTreatment": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersionExperimentTreatments"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appStoreVersionExperimentTreatment"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreVersionExperimentTreatment": {
        "type": "object",
        "title": "AppStoreVersionExperimentTreatment",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appStoreVersionExperimentTreatments"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "appIcon": {
                "$ref": "#/components/schemas/ImageAsset"
              },
              "appIconName": {
                "type": "string"
              },
              "promotedDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appStoreVersionExperiment": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersionExperiments"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appStoreVersionExperimentV2": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersionExperiments"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appStoreVersionExperimentTreatmentLocalizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appStoreVersionExperimentTreatmentLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppStoreVersionExperimentTreatmentsResponse": {
        "type": "object",
        "title": "AppStoreVersionExperimentTreatmentsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppStoreVersionExperimentTreatment"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperiment"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentV2"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentLocalization"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionExperimentTreatmentResponse": {
        "type": "object",
        "title": "AppStoreVersionExperimentTreatmentResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppStoreVersionExperimentTreatment"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperiment"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentV2"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatmentLocalization"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionExperimentTreatmentCreateRequest": {
        "type": "object",
        "title": "AppStoreVersionExperimentTreatmentCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersionExperimentTreatments"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "appIconName": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appStoreVersionExperiment": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersionExperiments"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "appStoreVersionExperimentV2": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersionExperiments"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreVersionExperimentTreatmentUpdateRequest": {
        "type": "object",
        "title": "AppStoreVersionExperimentTreatmentUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersionExperimentTreatments"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "appIconName": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreVersionExperimentV2": {
        "type": "object",
        "title": "AppStoreVersionExperimentV2",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appStoreVersionExperiments"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "platform": {
                "$ref": "#/components/schemas/Platform"
              },
              "trafficProportion": {
                "type": "integer"
              },
              "state": {
                "type": "string",
                "enum": [
                  "PREPARE_FOR_SUBMISSION",
                  "READY_FOR_REVIEW",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "ACCEPTED",
                  "APPROVED",
                  "REJECTED",
                  "COMPLETED",
                  "STOPPED"
                ]
              },
              "reviewRequired": {
                "type": "boolean"
              },
              "startDate": {
                "type": "string",
                "format": "date-time"
              },
              "endDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "app": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "latestControlVersion": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "controlVersions": {
                "type": "object",
                "properties": {
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appStoreVersions"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "appStoreVersionExperimentTreatments": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appStoreVersionExperimentTreatments"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppStoreVersionExperimentsV2Response": {
        "type": "object",
        "title": "AppStoreVersionExperimentsV2Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppStoreVersionExperimentV2"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatment"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionExperimentV2Response": {
        "type": "object",
        "title": "AppStoreVersionExperimentV2Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppStoreVersionExperimentV2"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatment"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionExperimentV2CreateRequest": {
        "type": "object",
        "title": "AppStoreVersionExperimentV2CreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersionExperiments"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "platform": {
                    "$ref": "#/components/schemas/Platform"
                  },
                  "trafficProportion": {
                    "type": "integer"
                  }
                },
                "required": [
                  "trafficProportion",
                  "name",
                  "platform"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "app"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreVersionExperimentV2UpdateRequest": {
        "type": "object",
        "title": "AppStoreVersionExperimentV2UpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersionExperiments"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "trafficProportion": {
                    "type": "integer"
                  },
                  "started": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreVersionExperiment": {
        "type": "object",
        "title": "AppStoreVersionExperiment",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appStoreVersionExperiments"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "trafficProportion": {
                "type": "integer"
              },
              "state": {
                "type": "string",
                "enum": [
                  "PREPARE_FOR_SUBMISSION",
                  "READY_FOR_REVIEW",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "ACCEPTED",
                  "APPROVED",
                  "REJECTED",
                  "COMPLETED",
                  "STOPPED"
                ]
              },
              "reviewRequired": {
                "type": "boolean"
              },
              "startDate": {
                "type": "string",
                "format": "date-time"
              },
              "endDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appStoreVersion": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appStoreVersionExperimentTreatments": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appStoreVersionExperimentTreatments"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "deprecated": true
      },
      "AppStoreVersionExperimentsResponse": {
        "type": "object",
        "title": "AppStoreVersionExperimentsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppStoreVersionExperiment"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatment"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "deprecated": true
      },
      "AppStoreVersionExperimentResponse": {
        "type": "object",
        "title": "AppStoreVersionExperimentResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppStoreVersionExperiment"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentTreatment"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "deprecated": true
      },
      "AppStoreVersionExperimentCreateRequest": {
        "type": "object",
        "title": "AppStoreVersionExperimentCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersionExperiments"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "trafficProportion": {
                    "type": "integer"
                  }
                },
                "required": [
                  "trafficProportion",
                  "name"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appStoreVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appStoreVersion"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ],
        "deprecated": true
      },
      "AppStoreVersionExperimentUpdateRequest": {
        "type": "object",
        "title": "AppStoreVersionExperimentUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersionExperiments"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "trafficProportion": {
                    "type": "integer"
                  },
                  "started": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ],
        "deprecated": true
      },
      "AppStoreVersionLocalization": {
        "type": "object",
        "title": "AppStoreVersionLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appStoreVersionLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              },
              "locale": {
                "type": "string"
              },
              "keywords": {
                "type": "string"
              },
              "marketingUrl": {
                "type": "string",
                "format": "uri"
              },
              "promotionalText": {
                "type": "string"
              },
              "supportUrl": {
                "type": "string",
                "format": "uri"
              },
              "whatsNew": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appStoreVersion": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appScreenshotSets": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appScreenshotSets"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "appPreviewSets": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appPreviewSets"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppStoreVersionLocalizationsResponse": {
        "type": "object",
        "title": "AppStoreVersionLocalizationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppStoreVersionLocalization"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/AppScreenshotSet"
                },
                {
                  "$ref": "#/components/schemas/AppPreviewSet"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionLocalizationResponse": {
        "type": "object",
        "title": "AppStoreVersionLocalizationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppStoreVersionLocalization"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/AppScreenshotSet"
                },
                {
                  "$ref": "#/components/schemas/AppPreviewSet"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionLocalizationCreateRequest": {
        "type": "object",
        "title": "AppStoreVersionLocalizationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersionLocalizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "locale": {
                    "type": "string"
                  },
                  "keywords": {
                    "type": "string"
                  },
                  "marketingUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "promotionalText": {
                    "type": "string"
                  },
                  "supportUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "whatsNew": {
                    "type": "string"
                  }
                },
                "required": [
                  "locale"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appStoreVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appStoreVersion"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreVersionLocalizationUpdateRequest": {
        "type": "object",
        "title": "AppStoreVersionLocalizationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersionLocalizations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "keywords": {
                    "type": "string"
                  },
                  "marketingUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "promotionalText": {
                    "type": "string"
                  },
                  "supportUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "whatsNew": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreVersionPhasedRelease": {
        "type": "object",
        "title": "AppStoreVersionPhasedRelease",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appStoreVersionPhasedReleases"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "phasedReleaseState": {
                "$ref": "#/components/schemas/PhasedReleaseState"
              },
              "startDate": {
                "type": "string",
                "format": "date-time"
              },
              "totalPauseDuration": {
                "type": "integer"
              },
              "currentDayNumber": {
                "type": "integer"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppStoreVersionPhasedReleaseResponse": {
        "type": "object",
        "title": "AppStoreVersionPhasedReleaseResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppStoreVersionPhasedRelease"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionPhasedReleaseCreateRequest": {
        "type": "object",
        "title": "AppStoreVersionPhasedReleaseCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersionPhasedReleases"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "phasedReleaseState": {
                    "$ref": "#/components/schemas/PhasedReleaseState"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appStoreVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appStoreVersion"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreVersionPhasedReleaseUpdateRequest": {
        "type": "object",
        "title": "AppStoreVersionPhasedReleaseUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersionPhasedReleases"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "phasedReleaseState": {
                    "$ref": "#/components/schemas/PhasedReleaseState"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreVersionPromotion": {
        "type": "object",
        "title": "AppStoreVersionPromotion",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appStoreVersionPromotions"
            ]
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppStoreVersionPromotionResponse": {
        "type": "object",
        "title": "AppStoreVersionPromotionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppStoreVersionPromotion"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionPromotionCreateRequest": {
        "type": "object",
        "title": "AppStoreVersionPromotionCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersionPromotions"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appStoreVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "appStoreVersionExperimentTreatment": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersionExperimentTreatments"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appStoreVersionExperimentTreatment",
                  "appStoreVersion"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreVersionReleaseRequest": {
        "type": "object",
        "title": "AppStoreVersionReleaseRequest",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appStoreVersionReleaseRequests"
            ]
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppStoreVersionReleaseRequestResponse": {
        "type": "object",
        "title": "AppStoreVersionReleaseRequestResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppStoreVersionReleaseRequest"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionReleaseRequestCreateRequest": {
        "type": "object",
        "title": "AppStoreVersionReleaseRequestCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersionReleaseRequests"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appStoreVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appStoreVersion"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreVersionSubmission": {
        "type": "object",
        "title": "AppStoreVersionSubmission",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appStoreVersionSubmissions"
            ]
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appStoreVersion": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "deprecated": true
      },
      "AppStoreVersionSubmissionResponse": {
        "type": "object",
        "title": "AppStoreVersionSubmissionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppStoreVersionSubmission"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppStoreVersion"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "deprecated": true
      },
      "AppStoreVersionSubmissionCreateRequest": {
        "type": "object",
        "title": "AppStoreVersionSubmissionCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersionSubmissions"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appStoreVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appStoreVersion"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ],
        "deprecated": true
      },
      "AppStoreVersion": {
        "type": "object",
        "title": "AppStoreVersion",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appStoreVersions"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "platform": {
                "$ref": "#/components/schemas/Platform"
              },
              "versionString": {
                "type": "string"
              },
              "appStoreState": {
                "deprecated": true,
                "$ref": "#/components/schemas/AppStoreVersionState"
              },
              "appVersionState": {
                "$ref": "#/components/schemas/AppVersionState"
              },
              "copyright": {
                "type": "string"
              },
              "reviewType": {
                "type": "string",
                "enum": [
                  "APP_STORE",
                  "NOTARIZATION"
                ]
              },
              "releaseType": {
                "type": "string",
                "enum": [
                  "MANUAL",
                  "AFTER_APPROVAL",
                  "SCHEDULED"
                ]
              },
              "earliestReleaseDate": {
                "type": "string",
                "format": "date-time"
              },
              "downloadable": {
                "type": "boolean"
              },
              "createdDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "app": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "ageRatingDeclaration": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "ageRatingDeclarations"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                },
                "deprecated": true
              },
              "appStoreVersionLocalizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appStoreVersionLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "build": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "builds"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appStoreVersionPhasedRelease": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersionPhasedReleases"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "gameCenterAppVersion": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterAppVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "routingAppCoverage": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "routingAppCoverages"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appStoreReviewDetail": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreReviewDetails"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appStoreVersionSubmission": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersionSubmissions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appClipDefaultExperience": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appClipDefaultExperiences"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appStoreVersionExperiments": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appStoreVersionExperiments"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "appStoreVersionExperimentsV2": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appStoreVersionExperiments"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "customerReviews": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "alternativeDistributionPackage": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "alternativeDistributionPackages"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppStoreVersionsResponse": {
        "type": "object",
        "title": "AppStoreVersionsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppStoreVersion"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/AgeRatingDeclaration"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionLocalization"
                },
                {
                  "$ref": "#/components/schemas/Build"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionPhasedRelease"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAppVersion"
                },
                {
                  "$ref": "#/components/schemas/RoutingAppCoverage"
                },
                {
                  "$ref": "#/components/schemas/AppStoreReviewDetail"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionSubmission"
                },
                {
                  "$ref": "#/components/schemas/AppClipDefaultExperience"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperiment"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentV2"
                },
                {
                  "$ref": "#/components/schemas/AlternativeDistributionPackage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionResponse": {
        "type": "object",
        "title": "AppStoreVersionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppStoreVersion"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/AgeRatingDeclaration"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionLocalization"
                },
                {
                  "$ref": "#/components/schemas/Build"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionPhasedRelease"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAppVersion"
                },
                {
                  "$ref": "#/components/schemas/RoutingAppCoverage"
                },
                {
                  "$ref": "#/components/schemas/AppStoreReviewDetail"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionSubmission"
                },
                {
                  "$ref": "#/components/schemas/AppClipDefaultExperience"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperiment"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentV2"
                },
                {
                  "$ref": "#/components/schemas/AlternativeDistributionPackage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionCreateRequest": {
        "type": "object",
        "title": "AppStoreVersionCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersions"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "platform": {
                    "$ref": "#/components/schemas/Platform"
                  },
                  "versionString": {
                    "type": "string"
                  },
                  "copyright": {
                    "type": "string"
                  },
                  "reviewType": {
                    "type": "string",
                    "enum": [
                      "APP_STORE",
                      "NOTARIZATION"
                    ]
                  },
                  "releaseType": {
                    "type": "string",
                    "enum": [
                      "MANUAL",
                      "AFTER_APPROVAL",
                      "SCHEDULED"
                    ]
                  },
                  "earliestReleaseDate": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "versionString",
                  "platform"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "appStoreVersionLocalizations": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "appStoreVersionLocalizations"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  },
                  "build": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "builds"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "app"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreVersionUpdateRequest": {
        "type": "object",
        "title": "AppStoreVersionUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersions"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "versionString": {
                    "type": "string"
                  },
                  "copyright": {
                    "type": "string"
                  },
                  "reviewType": {
                    "type": "string",
                    "enum": [
                      "APP_STORE",
                      "NOTARIZATION"
                    ]
                  },
                  "releaseType": {
                    "type": "string",
                    "enum": [
                      "MANUAL",
                      "AFTER_APPROVAL",
                      "SCHEDULED"
                    ]
                  },
                  "earliestReleaseDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "downloadable": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "build": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "builds"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "appClipDefaultExperience": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appClipDefaultExperiences"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "App": {
        "type": "object",
        "title": "App",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "apps"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "bundleId": {
                "type": "string"
              },
              "sku": {
                "type": "string"
              },
              "primaryLocale": {
                "type": "string"
              },
              "isOrEverWasMadeForKids": {
                "type": "boolean"
              },
              "subscriptionStatusUrl": {
                "type": "string",
                "format": "uri"
              },
              "subscriptionStatusUrlVersion": {
                "$ref": "#/components/schemas/SubscriptionStatusUrlVersion"
              },
              "subscriptionStatusUrlForSandbox": {
                "type": "string",
                "format": "uri"
              },
              "subscriptionStatusUrlVersionForSandbox": {
                "$ref": "#/components/schemas/SubscriptionStatusUrlVersion"
              },
              "contentRightsDeclaration": {
                "type": "string",
                "enum": [
                  "DOES_NOT_USE_THIRD_PARTY_CONTENT",
                  "USES_THIRD_PARTY_CONTENT"
                ]
              },
              "streamlinedPurchasingEnabled": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appEncryptionDeclarations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appEncryptionDeclarations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "ciProduct": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "ciProducts"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "betaTesters": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "betaGroups": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "betaGroups"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "appStoreVersions": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appStoreVersions"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "preReleaseVersions": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "preReleaseVersions"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "betaAppLocalizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "betaAppLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "builds": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "builds"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "betaLicenseAgreement": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "betaLicenseAgreements"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "betaAppReviewDetail": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "betaAppReviewDetails"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appInfos": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appInfos"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "appClips": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appClips"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "appPricePoints": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "endUserLicenseAgreement": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "endUserLicenseAgreements"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appPriceSchedule": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "appAvailabilityV2": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "inAppPurchases": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "inAppPurchases"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                },
                "deprecated": true
              },
              "subscriptionGroups": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "subscriptionGroups"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "gameCenterEnabledVersions": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterEnabledVersions"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "perfPowerMetrics": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "appCustomProductPages": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appCustomProductPages"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "inAppPurchasesV2": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "inAppPurchases"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "promotedPurchases": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "promotedPurchases"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "appEvents": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appEvents"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "reviewSubmissions": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "reviewSubmissions"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "subscriptionGracePeriod": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptionGracePeriods"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "customerReviews": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "gameCenterDetail": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterDetails"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appStoreVersionExperimentsV2": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "appStoreVersionExperiments"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "alternativeDistributionKey": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "analyticsReportRequests": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "marketplaceSearchDetail": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "AppsResponse": {
        "type": "object",
        "title": "AppsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppEncryptionDeclaration"
                },
                {
                  "$ref": "#/components/schemas/CiProduct"
                },
                {
                  "$ref": "#/components/schemas/BetaGroup"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/PrereleaseVersion"
                },
                {
                  "$ref": "#/components/schemas/BetaAppLocalization"
                },
                {
                  "$ref": "#/components/schemas/Build"
                },
                {
                  "$ref": "#/components/schemas/BetaLicenseAgreement"
                },
                {
                  "$ref": "#/components/schemas/BetaAppReviewDetail"
                },
                {
                  "$ref": "#/components/schemas/AppInfo"
                },
                {
                  "$ref": "#/components/schemas/AppClip"
                },
                {
                  "$ref": "#/components/schemas/EndUserLicenseAgreement"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchase"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionGroup"
                },
                {
                  "$ref": "#/components/schemas/GameCenterEnabledVersion"
                },
                {
                  "$ref": "#/components/schemas/AppCustomProductPage"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchaseV2"
                },
                {
                  "$ref": "#/components/schemas/PromotedPurchase"
                },
                {
                  "$ref": "#/components/schemas/AppEvent"
                },
                {
                  "$ref": "#/components/schemas/ReviewSubmission"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionGracePeriod"
                },
                {
                  "$ref": "#/components/schemas/GameCenterDetail"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentV2"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppResponse": {
        "type": "object",
        "title": "AppResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/App"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppEncryptionDeclaration"
                },
                {
                  "$ref": "#/components/schemas/CiProduct"
                },
                {
                  "$ref": "#/components/schemas/BetaGroup"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/PrereleaseVersion"
                },
                {
                  "$ref": "#/components/schemas/BetaAppLocalization"
                },
                {
                  "$ref": "#/components/schemas/Build"
                },
                {
                  "$ref": "#/components/schemas/BetaLicenseAgreement"
                },
                {
                  "$ref": "#/components/schemas/BetaAppReviewDetail"
                },
                {
                  "$ref": "#/components/schemas/AppInfo"
                },
                {
                  "$ref": "#/components/schemas/AppClip"
                },
                {
                  "$ref": "#/components/schemas/EndUserLicenseAgreement"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchase"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionGroup"
                },
                {
                  "$ref": "#/components/schemas/GameCenterEnabledVersion"
                },
                {
                  "$ref": "#/components/schemas/AppCustomProductPage"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchaseV2"
                },
                {
                  "$ref": "#/components/schemas/PromotedPurchase"
                },
                {
                  "$ref": "#/components/schemas/AppEvent"
                },
                {
                  "$ref": "#/components/schemas/ReviewSubmission"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionGracePeriod"
                },
                {
                  "$ref": "#/components/schemas/GameCenterDetail"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentV2"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppUpdateRequest": {
        "type": "object",
        "title": "AppUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "apps"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "bundleId": {
                    "type": "string"
                  },
                  "primaryLocale": {
                    "type": "string"
                  },
                  "subscriptionStatusUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "subscriptionStatusUrlVersion": {
                    "$ref": "#/components/schemas/SubscriptionStatusUrlVersion"
                  },
                  "subscriptionStatusUrlForSandbox": {
                    "type": "string",
                    "format": "uri"
                  },
                  "subscriptionStatusUrlVersionForSandbox": {
                    "$ref": "#/components/schemas/SubscriptionStatusUrlVersion"
                  },
                  "contentRightsDeclaration": {
                    "type": "string",
                    "enum": [
                      "DOES_NOT_USE_THIRD_PARTY_CONTENT",
                      "USES_THIRD_PARTY_CONTENT"
                    ]
                  },
                  "streamlinedPurchasingEnabled": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaAppClipInvocationLocalization": {
        "type": "object",
        "title": "BetaAppClipInvocationLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "betaAppClipInvocationLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "locale": {
                "type": "string"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BetaAppClipInvocationLocalizationInlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "betaAppClipInvocationLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "locale": {
                "type": "string"
              }
            },
            "required": [
              "locale",
              "title"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "betaAppClipInvocation": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "betaAppClipInvocations"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "attributes",
          "type"
        ]
      },
      "BetaAppClipInvocationLocalizationResponse": {
        "type": "object",
        "title": "BetaAppClipInvocationLocalizationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BetaAppClipInvocationLocalization"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaAppClipInvocationLocalizationCreateRequest": {
        "type": "object",
        "title": "BetaAppClipInvocationLocalizationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "betaAppClipInvocationLocalizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "locale": {
                    "type": "string"
                  }
                },
                "required": [
                  "locale",
                  "title"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "betaAppClipInvocation": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "betaAppClipInvocations"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "betaAppClipInvocation"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaAppClipInvocationLocalizationUpdateRequest": {
        "type": "object",
        "title": "BetaAppClipInvocationLocalizationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "betaAppClipInvocationLocalizations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaAppClipInvocation": {
        "type": "object",
        "title": "BetaAppClipInvocation",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "betaAppClipInvocations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "betaAppClipInvocationLocalizations": {
                "type": "object",
                "properties": {
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "betaAppClipInvocationLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BetaAppClipInvocationsResponse": {
        "type": "object",
        "title": "BetaAppClipInvocationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BetaAppClipInvocation"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BetaAppClipInvocationLocalization"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaAppClipInvocationResponse": {
        "type": "object",
        "title": "BetaAppClipInvocationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BetaAppClipInvocation"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BetaAppClipInvocationLocalization"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaAppClipInvocationCreateRequest": {
        "type": "object",
        "title": "BetaAppClipInvocationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "betaAppClipInvocations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "url"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "buildBundle": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "buildBundles"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "betaAppClipInvocationLocalizations": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "betaAppClipInvocationLocalizations"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "buildBundle",
                  "betaAppClipInvocationLocalizations"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BetaAppClipInvocationLocalizationInlineCreate"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaAppClipInvocationUpdateRequest": {
        "type": "object",
        "title": "BetaAppClipInvocationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "betaAppClipInvocations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaAppLocalization": {
        "type": "object",
        "title": "BetaAppLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "betaAppLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "feedbackEmail": {
                "type": "string"
              },
              "marketingUrl": {
                "type": "string"
              },
              "privacyPolicyUrl": {
                "type": "string"
              },
              "tvOsPrivacyPolicy": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "locale": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "app": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BetaAppLocalizationsResponse": {
        "type": "object",
        "title": "BetaAppLocalizationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BetaAppLocalization"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaAppLocalizationResponse": {
        "type": "object",
        "title": "BetaAppLocalizationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BetaAppLocalization"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaAppLocalizationCreateRequest": {
        "type": "object",
        "title": "BetaAppLocalizationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "betaAppLocalizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "feedbackEmail": {
                    "type": "string"
                  },
                  "marketingUrl": {
                    "type": "string"
                  },
                  "privacyPolicyUrl": {
                    "type": "string"
                  },
                  "tvOsPrivacyPolicy": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "locale": {
                    "type": "string"
                  }
                },
                "required": [
                  "locale"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "app"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaAppLocalizationUpdateRequest": {
        "type": "object",
        "title": "BetaAppLocalizationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "betaAppLocalizations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "feedbackEmail": {
                    "type": "string"
                  },
                  "marketingUrl": {
                    "type": "string"
                  },
                  "privacyPolicyUrl": {
                    "type": "string"
                  },
                  "tvOsPrivacyPolicy": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaAppReviewDetail": {
        "type": "object",
        "title": "BetaAppReviewDetail",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "betaAppReviewDetails"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "contactFirstName": {
                "type": "string"
              },
              "contactLastName": {
                "type": "string"
              },
              "contactPhone": {
                "type": "string"
              },
              "contactEmail": {
                "type": "string"
              },
              "demoAccountName": {
                "type": "string"
              },
              "demoAccountPassword": {
                "type": "string"
              },
              "demoAccountRequired": {
                "type": "boolean"
              },
              "notes": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "app": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BetaAppReviewDetailsResponse": {
        "type": "object",
        "title": "BetaAppReviewDetailsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BetaAppReviewDetail"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaAppReviewDetailResponse": {
        "type": "object",
        "title": "BetaAppReviewDetailResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BetaAppReviewDetail"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaAppReviewDetailUpdateRequest": {
        "type": "object",
        "title": "BetaAppReviewDetailUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "betaAppReviewDetails"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "contactFirstName": {
                    "type": "string"
                  },
                  "contactLastName": {
                    "type": "string"
                  },
                  "contactPhone": {
                    "type": "string"
                  },
                  "contactEmail": {
                    "type": "string"
                  },
                  "demoAccountName": {
                    "type": "string"
                  },
                  "demoAccountPassword": {
                    "type": "string"
                  },
                  "demoAccountRequired": {
                    "type": "boolean"
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaAppReviewSubmission": {
        "type": "object",
        "title": "BetaAppReviewSubmission",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "betaAppReviewSubmissions"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "betaReviewState": {
                "$ref": "#/components/schemas/BetaReviewState"
              },
              "submittedDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "build": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "builds"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BetaAppReviewSubmissionsResponse": {
        "type": "object",
        "title": "BetaAppReviewSubmissionsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BetaAppReviewSubmission"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Build"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaAppReviewSubmissionResponse": {
        "type": "object",
        "title": "BetaAppReviewSubmissionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BetaAppReviewSubmission"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Build"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaAppReviewSubmissionCreateRequest": {
        "type": "object",
        "title": "BetaAppReviewSubmissionCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "betaAppReviewSubmissions"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "build": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "builds"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "build"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaBuildLocalization": {
        "type": "object",
        "title": "BetaBuildLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "betaBuildLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "whatsNew": {
                "type": "string"
              },
              "locale": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "build": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "builds"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BetaBuildLocalizationsResponse": {
        "type": "object",
        "title": "BetaBuildLocalizationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BetaBuildLocalization"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Build"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaBuildLocalizationResponse": {
        "type": "object",
        "title": "BetaBuildLocalizationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BetaBuildLocalization"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Build"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaBuildLocalizationCreateRequest": {
        "type": "object",
        "title": "BetaBuildLocalizationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "betaBuildLocalizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "whatsNew": {
                    "type": "string"
                  },
                  "locale": {
                    "type": "string"
                  }
                },
                "required": [
                  "locale"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "build": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "builds"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "build"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaBuildLocalizationUpdateRequest": {
        "type": "object",
        "title": "BetaBuildLocalizationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "betaBuildLocalizations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "whatsNew": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaGroup": {
        "type": "object",
        "title": "BetaGroup",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "betaGroups"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "createdDate": {
                "type": "string",
                "format": "date-time"
              },
              "isInternalGroup": {
                "type": "boolean"
              },
              "hasAccessToAllBuilds": {
                "type": "boolean"
              },
              "publicLinkEnabled": {
                "type": "boolean"
              },
              "publicLinkId": {
                "type": "string"
              },
              "publicLinkLimitEnabled": {
                "type": "boolean"
              },
              "publicLinkLimit": {
                "type": "integer"
              },
              "publicLink": {
                "type": "string"
              },
              "feedbackEnabled": {
                "type": "boolean"
              },
              "iosBuildsAvailableForAppleSiliconMac": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "app": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "builds": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "builds"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "betaTesters": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "betaTesters"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BetaGroupsResponse": {
        "type": "object",
        "title": "BetaGroupsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BetaGroup"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/Build"
                },
                {
                  "$ref": "#/components/schemas/BetaTester"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaGroupResponse": {
        "type": "object",
        "title": "BetaGroupResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BetaGroup"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/Build"
                },
                {
                  "$ref": "#/components/schemas/BetaTester"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaGroupCreateRequest": {
        "type": "object",
        "title": "BetaGroupCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "betaGroups"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "isInternalGroup": {
                    "type": "boolean"
                  },
                  "hasAccessToAllBuilds": {
                    "type": "boolean"
                  },
                  "publicLinkEnabled": {
                    "type": "boolean"
                  },
                  "publicLinkLimitEnabled": {
                    "type": "boolean"
                  },
                  "publicLinkLimit": {
                    "type": "integer"
                  },
                  "feedbackEnabled": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "builds": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "builds"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  },
                  "betaTesters": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "betaTesters"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  }
                },
                "required": [
                  "app"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaGroupUpdateRequest": {
        "type": "object",
        "title": "BetaGroupUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "betaGroups"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "publicLinkEnabled": {
                    "type": "boolean"
                  },
                  "publicLinkLimitEnabled": {
                    "type": "boolean"
                  },
                  "publicLinkLimit": {
                    "type": "integer"
                  },
                  "feedbackEnabled": {
                    "type": "boolean"
                  },
                  "iosBuildsAvailableForAppleSiliconMac": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaLicenseAgreement": {
        "type": "object",
        "title": "BetaLicenseAgreement",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "betaLicenseAgreements"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "agreementText": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "app": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BetaLicenseAgreementsResponse": {
        "type": "object",
        "title": "BetaLicenseAgreementsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BetaLicenseAgreement"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaLicenseAgreementResponse": {
        "type": "object",
        "title": "BetaLicenseAgreementResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BetaLicenseAgreement"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaLicenseAgreementUpdateRequest": {
        "type": "object",
        "title": "BetaLicenseAgreementUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "betaLicenseAgreements"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "agreementText": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaTesterInvitation": {
        "type": "object",
        "title": "BetaTesterInvitation",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "betaTesterInvitations"
            ]
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BetaTesterInvitationResponse": {
        "type": "object",
        "title": "BetaTesterInvitationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BetaTesterInvitation"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaTesterInvitationCreateRequest": {
        "type": "object",
        "title": "BetaTesterInvitationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "betaTesterInvitations"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "betaTester": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "betaTesters"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "app",
                  "betaTester"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaTester": {
        "type": "object",
        "title": "BetaTester",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "betaTesters"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "inviteType": {
                "$ref": "#/components/schemas/BetaInviteType"
              },
              "state": {
                "$ref": "#/components/schemas/BetaTesterState"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "apps": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "apps"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "betaGroups": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "betaGroups"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "builds": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "builds"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BetaTestersResponse": {
        "type": "object",
        "title": "BetaTestersResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BetaTester"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/BetaGroup"
                },
                {
                  "$ref": "#/components/schemas/Build"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaTesterResponse": {
        "type": "object",
        "title": "BetaTesterResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BetaTester"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/BetaGroup"
                },
                {
                  "$ref": "#/components/schemas/Build"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaTesterCreateRequest": {
        "type": "object",
        "title": "BetaTesterCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "betaTesters"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "betaGroups": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "betaGroups"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  },
                  "builds": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "builds"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BuildBetaDetail": {
        "type": "object",
        "title": "BuildBetaDetail",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "buildBetaDetails"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "autoNotifyEnabled": {
                "type": "boolean"
              },
              "internalBuildState": {
                "$ref": "#/components/schemas/InternalBetaState"
              },
              "externalBuildState": {
                "$ref": "#/components/schemas/ExternalBetaState"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "build": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "builds"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BuildBetaDetailsResponse": {
        "type": "object",
        "title": "BuildBetaDetailsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildBetaDetail"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Build"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BuildBetaDetailResponse": {
        "type": "object",
        "title": "BuildBetaDetailResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BuildBetaDetail"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Build"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BuildBetaDetailUpdateRequest": {
        "type": "object",
        "title": "BuildBetaDetailUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "buildBetaDetails"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "autoNotifyEnabled": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BuildBetaNotification": {
        "type": "object",
        "title": "BuildBetaNotification",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "buildBetaNotifications"
            ]
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BuildBetaNotificationResponse": {
        "type": "object",
        "title": "BuildBetaNotificationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BuildBetaNotification"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BuildBetaNotificationCreateRequest": {
        "type": "object",
        "title": "BuildBetaNotificationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "buildBetaNotifications"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "build": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "builds"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "build"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BuildBundleFileSize": {
        "type": "object",
        "title": "BuildBundleFileSize",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "buildBundleFileSizes"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "deviceModel": {
                "type": "string"
              },
              "osVersion": {
                "type": "string"
              },
              "downloadBytes": {
                "type": "integer"
              },
              "installBytes": {
                "type": "integer"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BuildBundleFileSizesResponse": {
        "type": "object",
        "title": "BuildBundleFileSizesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildBundleFileSize"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BuildBundle": {
        "type": "object",
        "title": "BuildBundle",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "buildBundles"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "bundleId": {
                "type": "string"
              },
              "bundleType": {
                "type": "string",
                "enum": [
                  "APP",
                  "APP_CLIP"
                ]
              },
              "sdkBuild": {
                "type": "string"
              },
              "platformBuild": {
                "type": "string"
              },
              "fileName": {
                "type": "string"
              },
              "hasSirikit": {
                "type": "boolean"
              },
              "hasOnDemandResources": {
                "type": "boolean"
              },
              "hasPrerenderedIcon": {
                "type": "boolean"
              },
              "usesLocationServices": {
                "type": "boolean"
              },
              "isIosBuildMacAppStoreCompatible": {
                "type": "boolean"
              },
              "includesSymbols": {
                "type": "boolean"
              },
              "dSYMUrl": {
                "type": "string",
                "format": "uri"
              },
              "supportedArchitectures": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "requiredCapabilities": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "deviceProtocols": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "locales": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "entitlements": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appClipDomainCacheStatus": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appClipDomainStatuses"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appClipDomainDebugStatus": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appClipDomainStatuses"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "betaAppClipInvocations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "betaAppClipInvocations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "buildBundleFileSizes": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "buildBundleFileSizes"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BuildIcon": {
        "type": "object",
        "title": "BuildIcon",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "buildIcons"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "iconAsset": {
                "$ref": "#/components/schemas/ImageAsset"
              },
              "iconType": {
                "$ref": "#/components/schemas/IconAssetType"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BuildIconsResponse": {
        "type": "object",
        "title": "BuildIconsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildIcon"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "Build": {
        "type": "object",
        "title": "Build",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "builds"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string"
              },
              "uploadedDate": {
                "type": "string",
                "format": "date-time"
              },
              "expirationDate": {
                "type": "string",
                "format": "date-time"
              },
              "expired": {
                "type": "boolean"
              },
              "minOsVersion": {
                "type": "string"
              },
              "lsMinimumSystemVersion": {
                "type": "string"
              },
              "computedMinMacOsVersion": {
                "type": "string"
              },
              "iconAssetToken": {
                "$ref": "#/components/schemas/ImageAsset"
              },
              "processingState": {
                "type": "string",
                "enum": [
                  "PROCESSING",
                  "FAILED",
                  "INVALID",
                  "VALID"
                ]
              },
              "buildAudienceType": {
                "$ref": "#/components/schemas/BuildAudienceType"
              },
              "usesNonExemptEncryption": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "preReleaseVersion": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "preReleaseVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "individualTesters": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "betaTesters"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "betaGroups": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "betaGroups"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "betaBuildLocalizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "betaBuildLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "appEncryptionDeclaration": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appEncryptionDeclarations"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "betaAppReviewSubmission": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "betaAppReviewSubmissions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "app": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "buildBetaDetail": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "buildBetaDetails"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appStoreVersion": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "icons": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "buildIcons"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "buildBundles": {
                "type": "object",
                "properties": {
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "buildBundles"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "perfPowerMetrics": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "diagnosticSignatures": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BuildsResponse": {
        "type": "object",
        "title": "BuildsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Build"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PrereleaseVersion"
                },
                {
                  "$ref": "#/components/schemas/BetaTester"
                },
                {
                  "$ref": "#/components/schemas/BetaGroup"
                },
                {
                  "$ref": "#/components/schemas/BetaBuildLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppEncryptionDeclaration"
                },
                {
                  "$ref": "#/components/schemas/BetaAppReviewSubmission"
                },
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/BuildBetaDetail"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/BuildIcon"
                },
                {
                  "$ref": "#/components/schemas/BuildBundle"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BuildResponse": {
        "type": "object",
        "title": "BuildResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Build"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PrereleaseVersion"
                },
                {
                  "$ref": "#/components/schemas/BetaTester"
                },
                {
                  "$ref": "#/components/schemas/BetaGroup"
                },
                {
                  "$ref": "#/components/schemas/BetaBuildLocalization"
                },
                {
                  "$ref": "#/components/schemas/AppEncryptionDeclaration"
                },
                {
                  "$ref": "#/components/schemas/BetaAppReviewSubmission"
                },
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/BuildBetaDetail"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/BuildIcon"
                },
                {
                  "$ref": "#/components/schemas/BuildBundle"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BuildUpdateRequest": {
        "type": "object",
        "title": "BuildUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "builds"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "expired": {
                    "type": "boolean"
                  },
                  "usesNonExemptEncryption": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appEncryptionDeclaration": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appEncryptionDeclarations"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BundleIdCapability": {
        "type": "object",
        "title": "BundleIdCapability",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "bundleIdCapabilities"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "capabilityType": {
                "$ref": "#/components/schemas/CapabilityType"
              },
              "settings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CapabilitySetting"
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BundleIdCapabilitiesResponse": {
        "type": "object",
        "title": "BundleIdCapabilitiesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BundleIdCapability"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BundleIdCapabilityResponse": {
        "type": "object",
        "title": "BundleIdCapabilityResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BundleIdCapability"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BundleIdCapabilityCreateRequest": {
        "type": "object",
        "title": "BundleIdCapabilityCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "bundleIdCapabilities"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "capabilityType": {
                    "$ref": "#/components/schemas/CapabilityType"
                  },
                  "settings": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CapabilitySetting"
                    }
                  }
                },
                "required": [
                  "capabilityType"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "bundleId": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "bundleIds"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "bundleId"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BundleIdCapabilityUpdateRequest": {
        "type": "object",
        "title": "BundleIdCapabilityUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "bundleIdCapabilities"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "capabilityType": {
                    "$ref": "#/components/schemas/CapabilityType"
                  },
                  "settings": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CapabilitySetting"
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BundleId": {
        "type": "object",
        "title": "BundleId",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "bundleIds"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "platform": {
                "$ref": "#/components/schemas/BundleIdPlatform"
              },
              "identifier": {
                "type": "string"
              },
              "seedId": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "profiles": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "profiles"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "bundleIdCapabilities": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "bundleIdCapabilities"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "app": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "BundleIdsResponse": {
        "type": "object",
        "title": "BundleIdsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BundleId"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Profile"
                },
                {
                  "$ref": "#/components/schemas/BundleIdCapability"
                },
                {
                  "$ref": "#/components/schemas/App"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BundleIdResponse": {
        "type": "object",
        "title": "BundleIdResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BundleId"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Profile"
                },
                {
                  "$ref": "#/components/schemas/BundleIdCapability"
                },
                {
                  "$ref": "#/components/schemas/App"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BundleIdCreateRequest": {
        "type": "object",
        "title": "BundleIdCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "bundleIds"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "platform": {
                    "$ref": "#/components/schemas/BundleIdPlatform"
                  },
                  "identifier": {
                    "type": "string"
                  },
                  "seedId": {
                    "type": "string"
                  }
                },
                "required": [
                  "identifier",
                  "name",
                  "platform"
                ]
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BundleIdUpdateRequest": {
        "type": "object",
        "title": "BundleIdUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "bundleIds"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "Certificate": {
        "type": "object",
        "title": "Certificate",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "certificates"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "certificateType": {
                "$ref": "#/components/schemas/CertificateType"
              },
              "displayName": {
                "type": "string"
              },
              "serialNumber": {
                "type": "string"
              },
              "platform": {
                "$ref": "#/components/schemas/BundleIdPlatform"
              },
              "expirationDate": {
                "type": "string",
                "format": "date-time"
              },
              "certificateContent": {
                "type": "string"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "CertificatesResponse": {
        "type": "object",
        "title": "CertificatesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Certificate"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CertificateResponse": {
        "type": "object",
        "title": "CertificateResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Certificate"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CertificateCreateRequest": {
        "type": "object",
        "title": "CertificateCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "certificates"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "csrContent": {
                    "type": "string"
                  },
                  "certificateType": {
                    "$ref": "#/components/schemas/CertificateType"
                  }
                },
                "required": [
                  "csrContent",
                  "certificateType"
                ]
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CiArtifact": {
        "type": "object",
        "title": "CiArtifact",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ciArtifacts"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileType": {
                "type": "string",
                "enum": [
                  "ARCHIVE",
                  "ARCHIVE_EXPORT",
                  "LOG_BUNDLE",
                  "RESULT_BUNDLE",
                  "TEST_PRODUCTS",
                  "XCODEBUILD_PRODUCTS",
                  "STAPLED_NOTARIZED_ARCHIVE"
                ]
              },
              "fileName": {
                "type": "string"
              },
              "fileSize": {
                "type": "integer"
              },
              "downloadUrl": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "CiArtifactsResponse": {
        "type": "object",
        "title": "CiArtifactsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CiArtifact"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiArtifactResponse": {
        "type": "object",
        "title": "CiArtifactResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CiArtifact"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiBuildAction": {
        "type": "object",
        "title": "CiBuildAction",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ciBuildActions"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "actionType": {
                "$ref": "#/components/schemas/CiActionType"
              },
              "startedDate": {
                "type": "string",
                "format": "date-time"
              },
              "finishedDate": {
                "type": "string",
                "format": "date-time"
              },
              "issueCounts": {
                "$ref": "#/components/schemas/CiIssueCounts"
              },
              "executionProgress": {
                "$ref": "#/components/schemas/CiExecutionProgress"
              },
              "completionStatus": {
                "$ref": "#/components/schemas/CiCompletionStatus"
              },
              "isRequiredToPass": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "buildRun": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "ciBuildRuns"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "artifacts": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "issues": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "testResults": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "CiBuildActionsResponse": {
        "type": "object",
        "title": "CiBuildActionsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CiBuildAction"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CiBuildRun"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiBuildActionResponse": {
        "type": "object",
        "title": "CiBuildActionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CiBuildAction"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CiBuildRun"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiBuildRun": {
        "type": "object",
        "title": "CiBuildRun",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ciBuildRuns"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "number": {
                "type": "integer"
              },
              "createdDate": {
                "type": "string",
                "format": "date-time"
              },
              "startedDate": {
                "type": "string",
                "format": "date-time"
              },
              "finishedDate": {
                "type": "string",
                "format": "date-time"
              },
              "sourceCommit": {
                "type": "object",
                "properties": {
                  "commitSha": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "author": {
                    "$ref": "#/components/schemas/CiGitUser"
                  },
                  "committer": {
                    "$ref": "#/components/schemas/CiGitUser"
                  },
                  "webUrl": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              },
              "destinationCommit": {
                "type": "object",
                "properties": {
                  "commitSha": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "author": {
                    "$ref": "#/components/schemas/CiGitUser"
                  },
                  "committer": {
                    "$ref": "#/components/schemas/CiGitUser"
                  },
                  "webUrl": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              },
              "isPullRequestBuild": {
                "type": "boolean"
              },
              "issueCounts": {
                "$ref": "#/components/schemas/CiIssueCounts"
              },
              "executionProgress": {
                "$ref": "#/components/schemas/CiExecutionProgress"
              },
              "completionStatus": {
                "$ref": "#/components/schemas/CiCompletionStatus"
              },
              "startReason": {
                "type": "string",
                "enum": [
                  "GIT_REF_CHANGE",
                  "MANUAL",
                  "MANUAL_REBUILD",
                  "PULL_REQUEST_OPEN",
                  "PULL_REQUEST_UPDATE",
                  "SCHEDULE"
                ]
              },
              "cancelReason": {
                "type": "string",
                "enum": [
                  "AUTOMATICALLY_BY_NEWER_BUILD",
                  "MANUALLY_BY_USER"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "builds": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "builds"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "workflow": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "ciWorkflows"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "product": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "ciProducts"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "sourceBranchOrTag": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "scmGitReferences"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "destinationBranch": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "scmGitReferences"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "actions": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "pullRequest": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "scmPullRequests"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "CiBuildRunsResponse": {
        "type": "object",
        "title": "CiBuildRunsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CiBuildRun"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Build"
                },
                {
                  "$ref": "#/components/schemas/CiWorkflow"
                },
                {
                  "$ref": "#/components/schemas/CiProduct"
                },
                {
                  "$ref": "#/components/schemas/ScmGitReference"
                },
                {
                  "$ref": "#/components/schemas/ScmPullRequest"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiBuildRunResponse": {
        "type": "object",
        "title": "CiBuildRunResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CiBuildRun"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Build"
                },
                {
                  "$ref": "#/components/schemas/CiWorkflow"
                },
                {
                  "$ref": "#/components/schemas/CiProduct"
                },
                {
                  "$ref": "#/components/schemas/ScmGitReference"
                },
                {
                  "$ref": "#/components/schemas/ScmPullRequest"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiBuildRunCreateRequest": {
        "type": "object",
        "title": "CiBuildRunCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "ciBuildRuns"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "clean": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "buildRun": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "ciBuildRuns"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "workflow": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "ciWorkflows"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "sourceBranchOrTag": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "scmGitReferences"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "pullRequest": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "scmPullRequests"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CiIssue": {
        "type": "object",
        "title": "CiIssue",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ciIssues"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "issueType": {
                "type": "string",
                "enum": [
                  "ANALYZER_WARNING",
                  "ERROR",
                  "TEST_FAILURE",
                  "WARNING"
                ]
              },
              "message": {
                "type": "string"
              },
              "fileSource": {
                "$ref": "#/components/schemas/FileLocation"
              },
              "category": {
                "type": "string"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "CiIssuesResponse": {
        "type": "object",
        "title": "CiIssuesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CiIssue"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiIssueResponse": {
        "type": "object",
        "title": "CiIssueResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CiIssue"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiMacOsVersion": {
        "type": "object",
        "title": "CiMacOsVersion",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ciMacOsVersions"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "xcodeVersions": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "ciXcodeVersions"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "CiMacOsVersionsResponse": {
        "type": "object",
        "title": "CiMacOsVersionsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CiMacOsVersion"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CiXcodeVersion"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiMacOsVersionResponse": {
        "type": "object",
        "title": "CiMacOsVersionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CiMacOsVersion"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CiXcodeVersion"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiProduct": {
        "type": "object",
        "title": "CiProduct",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ciProducts"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "createdDate": {
                "type": "string",
                "format": "date-time"
              },
              "productType": {
                "type": "string",
                "enum": [
                  "APP",
                  "FRAMEWORK"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "app": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "bundleId": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "bundleIds"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "workflows": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "primaryRepositories": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "scmRepositories"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "additionalRepositories": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "buildRuns": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "CiProductsResponse": {
        "type": "object",
        "title": "CiProductsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CiProduct"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/BundleId"
                },
                {
                  "$ref": "#/components/schemas/ScmRepository"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiProductResponse": {
        "type": "object",
        "title": "CiProductResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CiProduct"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/BundleId"
                },
                {
                  "$ref": "#/components/schemas/ScmRepository"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiTestResult": {
        "type": "object",
        "title": "CiTestResult",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ciTestResults"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "className": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "status": {
                "$ref": "#/components/schemas/CiTestStatus"
              },
              "fileSource": {
                "$ref": "#/components/schemas/FileLocation"
              },
              "message": {
                "type": "string"
              },
              "destinationTestResults": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string"
                    },
                    "deviceName": {
                      "type": "string"
                    },
                    "osVersion": {
                      "type": "string"
                    },
                    "status": {
                      "$ref": "#/components/schemas/CiTestStatus"
                    },
                    "duration": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "CiTestResultsResponse": {
        "type": "object",
        "title": "CiTestResultsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CiTestResult"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiTestResultResponse": {
        "type": "object",
        "title": "CiTestResultResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CiTestResult"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiWorkflow": {
        "type": "object",
        "title": "CiWorkflow",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ciWorkflows"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "branchStartCondition": {
                "$ref": "#/components/schemas/CiBranchStartCondition"
              },
              "tagStartCondition": {
                "$ref": "#/components/schemas/CiTagStartCondition"
              },
              "pullRequestStartCondition": {
                "$ref": "#/components/schemas/CiPullRequestStartCondition"
              },
              "scheduledStartCondition": {
                "$ref": "#/components/schemas/CiScheduledStartCondition"
              },
              "manualBranchStartCondition": {
                "$ref": "#/components/schemas/CiManualBranchStartCondition"
              },
              "manualTagStartCondition": {
                "$ref": "#/components/schemas/CiManualTagStartCondition"
              },
              "manualPullRequestStartCondition": {
                "$ref": "#/components/schemas/CiManualPullRequestStartCondition"
              },
              "actions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CiAction"
                }
              },
              "isEnabled": {
                "type": "boolean"
              },
              "isLockedForEditing": {
                "type": "boolean"
              },
              "clean": {
                "type": "boolean"
              },
              "containerFilePath": {
                "type": "string"
              },
              "lastModifiedDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "product": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "ciProducts"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "repository": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "scmRepositories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "xcodeVersion": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "ciXcodeVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "macOsVersion": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "ciMacOsVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "buildRuns": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "CiWorkflowsResponse": {
        "type": "object",
        "title": "CiWorkflowsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CiWorkflow"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CiProduct"
                },
                {
                  "$ref": "#/components/schemas/ScmRepository"
                },
                {
                  "$ref": "#/components/schemas/CiXcodeVersion"
                },
                {
                  "$ref": "#/components/schemas/CiMacOsVersion"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiWorkflowResponse": {
        "type": "object",
        "title": "CiWorkflowResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CiWorkflow"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CiProduct"
                },
                {
                  "$ref": "#/components/schemas/ScmRepository"
                },
                {
                  "$ref": "#/components/schemas/CiXcodeVersion"
                },
                {
                  "$ref": "#/components/schemas/CiMacOsVersion"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiWorkflowCreateRequest": {
        "type": "object",
        "title": "CiWorkflowCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "ciWorkflows"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "branchStartCondition": {
                    "$ref": "#/components/schemas/CiBranchStartCondition"
                  },
                  "tagStartCondition": {
                    "$ref": "#/components/schemas/CiTagStartCondition"
                  },
                  "pullRequestStartCondition": {
                    "$ref": "#/components/schemas/CiPullRequestStartCondition"
                  },
                  "scheduledStartCondition": {
                    "$ref": "#/components/schemas/CiScheduledStartCondition"
                  },
                  "manualBranchStartCondition": {
                    "$ref": "#/components/schemas/CiManualBranchStartCondition"
                  },
                  "manualTagStartCondition": {
                    "$ref": "#/components/schemas/CiManualTagStartCondition"
                  },
                  "manualPullRequestStartCondition": {
                    "$ref": "#/components/schemas/CiManualPullRequestStartCondition"
                  },
                  "actions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CiAction"
                    }
                  },
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "isLockedForEditing": {
                    "type": "boolean"
                  },
                  "clean": {
                    "type": "boolean"
                  },
                  "containerFilePath": {
                    "type": "string"
                  }
                },
                "required": [
                  "containerFilePath",
                  "isEnabled",
                  "name",
                  "description",
                  "clean",
                  "actions"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "product": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "ciProducts"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "repository": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "scmRepositories"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "xcodeVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "ciXcodeVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "macOsVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "ciMacOsVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "macOsVersion",
                  "product",
                  "repository",
                  "xcodeVersion"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CiWorkflowUpdateRequest": {
        "type": "object",
        "title": "CiWorkflowUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "ciWorkflows"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "branchStartCondition": {
                    "$ref": "#/components/schemas/CiBranchStartCondition"
                  },
                  "tagStartCondition": {
                    "$ref": "#/components/schemas/CiTagStartCondition"
                  },
                  "pullRequestStartCondition": {
                    "$ref": "#/components/schemas/CiPullRequestStartCondition"
                  },
                  "scheduledStartCondition": {
                    "$ref": "#/components/schemas/CiScheduledStartCondition"
                  },
                  "manualBranchStartCondition": {
                    "$ref": "#/components/schemas/CiManualBranchStartCondition"
                  },
                  "manualTagStartCondition": {
                    "$ref": "#/components/schemas/CiManualTagStartCondition"
                  },
                  "manualPullRequestStartCondition": {
                    "$ref": "#/components/schemas/CiManualPullRequestStartCondition"
                  },
                  "actions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CiAction"
                    }
                  },
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "isLockedForEditing": {
                    "type": "boolean"
                  },
                  "clean": {
                    "type": "boolean"
                  },
                  "containerFilePath": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "xcodeVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "ciXcodeVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "macOsVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "ciMacOsVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CiXcodeVersion": {
        "type": "object",
        "title": "CiXcodeVersion",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ciXcodeVersions"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "testDestinations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "deviceTypeName": {
                      "type": "string"
                    },
                    "deviceTypeIdentifier": {
                      "type": "string"
                    },
                    "availableRuntimes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "runtimeName": {
                            "type": "string"
                          },
                          "runtimeIdentifier": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "kind": {
                      "$ref": "#/components/schemas/CiTestDestinationKind"
                    }
                  }
                }
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "macOsVersions": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "ciMacOsVersions"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "CiXcodeVersionsResponse": {
        "type": "object",
        "title": "CiXcodeVersionsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CiXcodeVersion"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CiMacOsVersion"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CiXcodeVersionResponse": {
        "type": "object",
        "title": "CiXcodeVersionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CiXcodeVersion"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CiMacOsVersion"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CustomerReviewResponseV1": {
        "type": "object",
        "title": "CustomerReviewResponseV1",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "customerReviewResponses"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "responseBody": {
                "type": "string"
              },
              "lastModifiedDate": {
                "type": "string",
                "format": "date-time"
              },
              "state": {
                "type": "string",
                "enum": [
                  "PUBLISHED",
                  "PENDING_PUBLISH"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "review": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "customerReviews"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "CustomerReviewResponseV1Response": {
        "type": "object",
        "title": "CustomerReviewResponseV1Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CustomerReviewResponseV1"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerReview"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CustomerReviewResponseV1CreateRequest": {
        "type": "object",
        "title": "CustomerReviewResponseV1CreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "customerReviewResponses"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "responseBody": {
                    "type": "string"
                  }
                },
                "required": [
                  "responseBody"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "review": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "customerReviews"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "review"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CustomerReview": {
        "type": "object",
        "title": "CustomerReview",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "customerReviews"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "integer",
                "maximum": 5,
                "minimum": 1
              },
              "title": {
                "type": "string"
              },
              "body": {
                "type": "string"
              },
              "reviewerNickname": {
                "type": "string"
              },
              "createdDate": {
                "type": "string",
                "format": "date-time"
              },
              "territory": {
                "$ref": "#/components/schemas/TerritoryCode"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "customerReviewResponses"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "CustomerReviewsResponse": {
        "type": "object",
        "title": "CustomerReviewsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerReview"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerReviewResponseV1"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CustomerReviewResponse": {
        "type": "object",
        "title": "CustomerReviewResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CustomerReview"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerReviewResponseV1"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "Device": {
        "type": "object",
        "title": "Device",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "devices"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "platform": {
                "$ref": "#/components/schemas/BundleIdPlatform"
              },
              "udid": {
                "type": "string"
              },
              "deviceClass": {
                "type": "string",
                "enum": [
                  "APPLE_WATCH",
                  "IPAD",
                  "IPHONE",
                  "IPOD",
                  "APPLE_TV",
                  "MAC"
                ]
              },
              "status": {
                "type": "string",
                "enum": [
                  "ENABLED",
                  "DISABLED"
                ]
              },
              "model": {
                "type": "string"
              },
              "addedDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "DevicesResponse": {
        "type": "object",
        "title": "DevicesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Device"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "DeviceResponse": {
        "type": "object",
        "title": "DeviceResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Device"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "DeviceCreateRequest": {
        "type": "object",
        "title": "DeviceCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "devices"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "platform": {
                    "$ref": "#/components/schemas/BundleIdPlatform"
                  },
                  "udid": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "udid",
                  "platform"
                ]
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "DeviceUpdateRequest": {
        "type": "object",
        "title": "DeviceUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "devices"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ]
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "DiagnosticLog": {
        "type": "object",
        "title": "DiagnosticLog",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "diagnosticLogs"
            ]
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "DiagnosticSignature": {
        "type": "object",
        "title": "DiagnosticSignature",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "diagnosticSignatures"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "diagnosticType": {
                "type": "string",
                "enum": [
                  "DISK_WRITES",
                  "HANGS",
                  "LAUNCHES"
                ]
              },
              "signature": {
                "type": "string"
              },
              "weight": {
                "type": "number"
              },
              "insight": {
                "$ref": "#/components/schemas/DiagnosticInsight"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "logs": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "DiagnosticSignaturesResponse": {
        "type": "object",
        "title": "DiagnosticSignaturesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiagnosticSignature"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "EndAppAvailabilityPreOrder": {
        "type": "object",
        "title": "EndAppAvailabilityPreOrder",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "endAppAvailabilityPreOrders"
            ]
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "EndAppAvailabilityPreOrderResponse": {
        "type": "object",
        "title": "EndAppAvailabilityPreOrderResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EndAppAvailabilityPreOrder"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "EndAppAvailabilityPreOrderCreateRequest": {
        "type": "object",
        "title": "EndAppAvailabilityPreOrderCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "endAppAvailabilityPreOrders"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "territoryAvailabilities": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "territoryAvailabilities"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "territoryAvailabilities"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "EndUserLicenseAgreement": {
        "type": "object",
        "title": "EndUserLicenseAgreement",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "endUserLicenseAgreements"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "agreementText": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "app": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "territories": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "territories"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "EndUserLicenseAgreementResponse": {
        "type": "object",
        "title": "EndUserLicenseAgreementResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EndUserLicenseAgreement"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/Territory"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "EndUserLicenseAgreementCreateRequest": {
        "type": "object",
        "title": "EndUserLicenseAgreementCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "endUserLicenseAgreements"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "agreementText": {
                    "type": "string"
                  }
                },
                "required": [
                  "agreementText"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "territories": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "territories"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "app",
                  "territories"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "EndUserLicenseAgreementUpdateRequest": {
        "type": "object",
        "title": "EndUserLicenseAgreementUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "endUserLicenseAgreements"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "agreementText": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "territories": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "territories"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterAchievementImage": {
        "type": "object",
        "title": "GameCenterAchievementImage",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterAchievementImages"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "imageAsset": {
                "$ref": "#/components/schemas/ImageAsset"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState": {
                "$ref": "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "gameCenterAchievementLocalization": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterAchievementLocalizations"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterAchievementImageResponse": {
        "type": "object",
        "title": "GameCenterAchievementImageResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterAchievementImage"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterAchievementLocalization"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterAchievementImageCreateRequest": {
        "type": "object",
        "title": "GameCenterAchievementImageCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterAchievementImages"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "fileSize"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "gameCenterAchievementLocalization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterAchievementLocalizations"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "gameCenterAchievementLocalization"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterAchievementImageUpdateRequest": {
        "type": "object",
        "title": "GameCenterAchievementImageUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterAchievementImages"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterAchievementLocalization": {
        "type": "object",
        "title": "GameCenterAchievementLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterAchievementLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "locale": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "beforeEarnedDescription": {
                "type": "string"
              },
              "afterEarnedDescription": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "gameCenterAchievement": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterAchievements"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "gameCenterAchievementImage": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterAchievementImages"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterAchievementLocalizationsResponse": {
        "type": "object",
        "title": "GameCenterAchievementLocalizationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterAchievementLocalization"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterAchievement"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAchievementImage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterAchievementLocalizationResponse": {
        "type": "object",
        "title": "GameCenterAchievementLocalizationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterAchievementLocalization"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterAchievement"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAchievementImage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterAchievementLocalizationCreateRequest": {
        "type": "object",
        "title": "GameCenterAchievementLocalizationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterAchievementLocalizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "locale": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "beforeEarnedDescription": {
                    "type": "string"
                  },
                  "afterEarnedDescription": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "beforeEarnedDescription",
                  "locale",
                  "afterEarnedDescription"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "gameCenterAchievement": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterAchievements"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "gameCenterAchievement"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterAchievementLocalizationUpdateRequest": {
        "type": "object",
        "title": "GameCenterAchievementLocalizationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterAchievementLocalizations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "beforeEarnedDescription": {
                    "type": "string"
                  },
                  "afterEarnedDescription": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterAchievementRelease": {
        "type": "object",
        "title": "GameCenterAchievementRelease",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterAchievementReleases"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "live": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "gameCenterDetail": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterDetails"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "gameCenterAchievement": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterAchievements"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterAchievementReleasesResponse": {
        "type": "object",
        "title": "GameCenterAchievementReleasesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterAchievementRelease"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterDetail"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAchievement"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterAchievementReleaseResponse": {
        "type": "object",
        "title": "GameCenterAchievementReleaseResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterAchievementRelease"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterDetail"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAchievement"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterAchievementReleaseCreateRequest": {
        "type": "object",
        "title": "GameCenterAchievementReleaseCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterAchievementReleases"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "gameCenterDetail": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterDetails"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "gameCenterAchievement": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterAchievements"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "gameCenterDetail",
                  "gameCenterAchievement"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterAchievement": {
        "type": "object",
        "title": "GameCenterAchievement",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterAchievements"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "referenceName": {
                "type": "string"
              },
              "vendorIdentifier": {
                "type": "string"
              },
              "points": {
                "type": "integer"
              },
              "showBeforeEarned": {
                "type": "boolean"
              },
              "repeatable": {
                "type": "boolean"
              },
              "archived": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "gameCenterDetail": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterDetails"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "gameCenterGroup": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterGroups"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "groupAchievement": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterAchievements"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                },
                "deprecated": true
              },
              "localizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterAchievementLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "releases": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterAchievementReleases"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterAchievementsResponse": {
        "type": "object",
        "title": "GameCenterAchievementsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterAchievement"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterDetail"
                },
                {
                  "$ref": "#/components/schemas/GameCenterGroup"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAchievement"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAchievementLocalization"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAchievementRelease"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterAchievementResponse": {
        "type": "object",
        "title": "GameCenterAchievementResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterAchievement"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterDetail"
                },
                {
                  "$ref": "#/components/schemas/GameCenterGroup"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAchievement"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAchievementLocalization"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAchievementRelease"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterAchievementCreateRequest": {
        "type": "object",
        "title": "GameCenterAchievementCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterAchievements"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "referenceName": {
                    "type": "string"
                  },
                  "vendorIdentifier": {
                    "type": "string"
                  },
                  "points": {
                    "type": "integer"
                  },
                  "showBeforeEarned": {
                    "type": "boolean"
                  },
                  "repeatable": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "vendorIdentifier",
                  "repeatable",
                  "showBeforeEarned",
                  "referenceName",
                  "points"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "gameCenterDetail": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterDetails"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "gameCenterGroup": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterGroups"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterAchievementUpdateRequest": {
        "type": "object",
        "title": "GameCenterAchievementUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterAchievements"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "referenceName": {
                    "type": "string"
                  },
                  "points": {
                    "type": "integer"
                  },
                  "showBeforeEarned": {
                    "type": "boolean"
                  },
                  "repeatable": {
                    "type": "boolean"
                  },
                  "archived": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterAppVersion": {
        "type": "object",
        "title": "GameCenterAppVersion",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterAppVersions"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "compatibilityVersions": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterAppVersions"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "appStoreVersion": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterAppVersionsResponse": {
        "type": "object",
        "title": "GameCenterAppVersionsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterAppVersion"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterAppVersion"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterAppVersionResponse": {
        "type": "object",
        "title": "GameCenterAppVersionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterAppVersion"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterAppVersion"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterAppVersionCreateRequest": {
        "type": "object",
        "title": "GameCenterAppVersionCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterAppVersions"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appStoreVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appStoreVersion"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterAppVersionUpdateRequest": {
        "type": "object",
        "title": "GameCenterAppVersionUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterAppVersions"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterDetail": {
        "type": "object",
        "title": "GameCenterDetail",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterDetails"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "arcadeEnabled": {
                "type": "boolean"
              },
              "challengeEnabled": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "app": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "gameCenterAppVersions": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterAppVersions"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "gameCenterGroup": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterGroups"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "gameCenterLeaderboards": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterLeaderboards"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "gameCenterLeaderboardSets": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterLeaderboardSets"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "gameCenterAchievements": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterAchievements"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "defaultLeaderboard": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterLeaderboards"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "defaultGroupLeaderboard": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterLeaderboards"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "achievementReleases": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterAchievementReleases"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "leaderboardReleases": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterLeaderboardReleases"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "leaderboardSetReleases": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterLeaderboardSetReleases"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterDetailsResponse": {
        "type": "object",
        "title": "GameCenterDetailsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterDetail"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAppVersion"
                },
                {
                  "$ref": "#/components/schemas/GameCenterGroup"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboard"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSet"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAchievement"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAchievementRelease"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardRelease"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetRelease"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterDetailResponse": {
        "type": "object",
        "title": "GameCenterDetailResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterDetail"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAppVersion"
                },
                {
                  "$ref": "#/components/schemas/GameCenterGroup"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboard"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSet"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAchievement"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAchievementRelease"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardRelease"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetRelease"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterDetailCreateRequest": {
        "type": "object",
        "title": "GameCenterDetailCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterDetails"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "challengeEnabled": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "app"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterDetailUpdateRequest": {
        "type": "object",
        "title": "GameCenterDetailUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterDetails"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "challengeEnabled": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "gameCenterGroup": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterGroups"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "defaultLeaderboard": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterLeaderboards"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "defaultGroupLeaderboard": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterLeaderboards"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterEnabledVersion": {
        "type": "object",
        "title": "GameCenterEnabledVersion",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterEnabledVersions"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "platform": {
                "$ref": "#/components/schemas/Platform"
              },
              "versionString": {
                "type": "string"
              },
              "iconAsset": {
                "$ref": "#/components/schemas/ImageAsset"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "compatibleVersions": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterEnabledVersions"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "app": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "deprecated": true
      },
      "GameCenterEnabledVersionsResponse": {
        "type": "object",
        "title": "GameCenterEnabledVersionsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterEnabledVersion"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterEnabledVersion"
                },
                {
                  "$ref": "#/components/schemas/App"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "deprecated": true
      },
      "GameCenterGroup": {
        "type": "object",
        "title": "GameCenterGroup",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterGroups"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "referenceName": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "gameCenterDetails": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterDetails"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "gameCenterLeaderboards": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterLeaderboards"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "gameCenterLeaderboardSets": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterLeaderboardSets"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "gameCenterAchievements": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterAchievements"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterGroupsResponse": {
        "type": "object",
        "title": "GameCenterGroupsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterGroup"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterDetail"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboard"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSet"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAchievement"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterGroupResponse": {
        "type": "object",
        "title": "GameCenterGroupResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterGroup"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterDetail"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboard"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSet"
                },
                {
                  "$ref": "#/components/schemas/GameCenterAchievement"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterGroupCreateRequest": {
        "type": "object",
        "title": "GameCenterGroupCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterGroups"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "referenceName": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterGroupUpdateRequest": {
        "type": "object",
        "title": "GameCenterGroupUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterGroups"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "referenceName": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardEntrySubmission": {
        "type": "object",
        "title": "GameCenterLeaderboardEntrySubmission",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterLeaderboardEntrySubmissions"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "bundleId": {
                "type": "string"
              },
              "challengeIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "context": {
                "type": "string",
                "format": "number"
              },
              "scopedPlayerId": {
                "type": "string"
              },
              "score": {
                "type": "string",
                "format": "number"
              },
              "submittedDate": {
                "type": "string",
                "format": "date-time"
              },
              "vendorIdentifier": {
                "type": "string"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterLeaderboardEntrySubmissionResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardEntrySubmissionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterLeaderboardEntrySubmission"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardEntrySubmissionCreateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardEntrySubmissionCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardEntrySubmissions"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "bundleId": {
                    "type": "string"
                  },
                  "challengeIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "context": {
                    "type": "string",
                    "format": "number"
                  },
                  "scopedPlayerId": {
                    "type": "string"
                  },
                  "score": {
                    "type": "string",
                    "format": "number"
                  },
                  "submittedDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "vendorIdentifier": {
                    "type": "string"
                  }
                },
                "required": [
                  "vendorIdentifier",
                  "score",
                  "bundleId",
                  "scopedPlayerId"
                ]
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardImage": {
        "type": "object",
        "title": "GameCenterLeaderboardImage",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterLeaderboardImages"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "imageAsset": {
                "$ref": "#/components/schemas/ImageAsset"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState": {
                "$ref": "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "gameCenterLeaderboardLocalization": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterLeaderboardLocalizations"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterLeaderboardImageResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardImageResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterLeaderboardImage"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterLeaderboardLocalization"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardImageCreateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardImageCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardImages"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "fileSize"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "gameCenterLeaderboardLocalization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterLeaderboardLocalizations"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "gameCenterLeaderboardLocalization"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardImageUpdateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardImageUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardImages"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardLocalization": {
        "type": "object",
        "title": "GameCenterLeaderboardLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterLeaderboardLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "locale": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "formatterOverride": {
                "$ref": "#/components/schemas/GameCenterLeaderboardFormatter"
              },
              "formatterSuffix": {
                "type": "string"
              },
              "formatterSuffixSingular": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "gameCenterLeaderboard": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterLeaderboards"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "gameCenterLeaderboardImage": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterLeaderboardImages"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterLeaderboardLocalizationsResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardLocalizationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterLeaderboardLocalization"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboard"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardImage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardLocalizationResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardLocalizationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterLeaderboardLocalization"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboard"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardImage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardLocalizationCreateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardLocalizationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardLocalizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "locale": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "formatterOverride": {
                    "$ref": "#/components/schemas/GameCenterLeaderboardFormatter"
                  },
                  "formatterSuffix": {
                    "type": "string"
                  },
                  "formatterSuffixSingular": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "locale"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "gameCenterLeaderboard": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterLeaderboards"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "gameCenterLeaderboard"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardLocalizationUpdateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardLocalizationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardLocalizations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "formatterOverride": {
                    "$ref": "#/components/schemas/GameCenterLeaderboardFormatter"
                  },
                  "formatterSuffix": {
                    "type": "string"
                  },
                  "formatterSuffixSingular": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardRelease": {
        "type": "object",
        "title": "GameCenterLeaderboardRelease",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterLeaderboardReleases"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "live": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "gameCenterDetail": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterDetails"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "gameCenterLeaderboard": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterLeaderboards"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterLeaderboardReleasesResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardReleasesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterLeaderboardRelease"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterDetail"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboard"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardReleaseResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardReleaseResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterLeaderboardRelease"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterDetail"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboard"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardReleaseCreateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardReleaseCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardReleases"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "gameCenterDetail": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterDetails"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "gameCenterLeaderboard": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterLeaderboards"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "gameCenterDetail",
                  "gameCenterLeaderboard"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardSetImage": {
        "type": "object",
        "title": "GameCenterLeaderboardSetImage",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterLeaderboardSetImages"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "imageAsset": {
                "$ref": "#/components/schemas/ImageAsset"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState": {
                "$ref": "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "gameCenterLeaderboardSetLocalization": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterLeaderboardSetLocalizations"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterLeaderboardSetImageResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardSetImageResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterLeaderboardSetImage"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterLeaderboardSetLocalization"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardSetImageCreateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardSetImageCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardSetImages"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "fileSize"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "gameCenterLeaderboardSetLocalization": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterLeaderboardSetLocalizations"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "gameCenterLeaderboardSetLocalization"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardSetImageUpdateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardSetImageUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardSetImages"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardSetLocalization": {
        "type": "object",
        "title": "GameCenterLeaderboardSetLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterLeaderboardSetLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "locale": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "gameCenterLeaderboardSet": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterLeaderboardSets"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "gameCenterLeaderboardSetImage": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterLeaderboardSetImages"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterLeaderboardSetLocalizationsResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardSetLocalizationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterLeaderboardSetLocalization"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSet"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetImage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardSetLocalizationResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardSetLocalizationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterLeaderboardSetLocalization"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSet"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetImage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardSetLocalizationCreateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardSetLocalizationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardSetLocalizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "locale": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "locale"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "gameCenterLeaderboardSet": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterLeaderboardSets"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardSetLocalizationUpdateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardSetLocalizationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardSetLocalizations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardSetMemberLocalization": {
        "type": "object",
        "title": "GameCenterLeaderboardSetMemberLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterLeaderboardSetMemberLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "locale": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "gameCenterLeaderboardSet": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterLeaderboardSets"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "gameCenterLeaderboard": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterLeaderboards"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterLeaderboardSetMemberLocalizationsResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardSetMemberLocalizationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterLeaderboardSetMemberLocalization"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSet"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboard"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardSetMemberLocalizationResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardSetMemberLocalizationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterLeaderboardSetMemberLocalization"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSet"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboard"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardSetMemberLocalizationCreateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardSetMemberLocalizationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardSetMemberLocalizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "locale": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "gameCenterLeaderboardSet": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterLeaderboardSets"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "gameCenterLeaderboard": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterLeaderboards"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "gameCenterLeaderboard",
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardSetMemberLocalizationUpdateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardSetMemberLocalizationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardSetMemberLocalizations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardSetRelease": {
        "type": "object",
        "title": "GameCenterLeaderboardSetRelease",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterLeaderboardSetReleases"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "live": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "gameCenterDetail": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterDetails"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "gameCenterLeaderboardSet": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterLeaderboardSets"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterLeaderboardSetReleasesResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardSetReleasesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterLeaderboardSetRelease"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterDetail"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSet"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardSetReleaseResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardSetReleaseResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterLeaderboardSetRelease"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterDetail"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSet"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardSetReleaseCreateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardSetReleaseCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardSetReleases"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "gameCenterDetail": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterDetails"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "gameCenterLeaderboardSet": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterLeaderboardSets"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "gameCenterDetail",
                  "gameCenterLeaderboardSet"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardSet": {
        "type": "object",
        "title": "GameCenterLeaderboardSet",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterLeaderboardSets"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "referenceName": {
                "type": "string"
              },
              "vendorIdentifier": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "gameCenterDetail": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterDetails"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "gameCenterGroup": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterGroups"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "groupLeaderboardSet": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterLeaderboardSets"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                },
                "deprecated": true
              },
              "localizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterLeaderboardSetLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "gameCenterLeaderboards": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterLeaderboards"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "releases": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterLeaderboardSetReleases"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterLeaderboardSetsResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardSetsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterLeaderboardSet"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterDetail"
                },
                {
                  "$ref": "#/components/schemas/GameCenterGroup"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSet"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetLocalization"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboard"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetRelease"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardSetResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardSetResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterLeaderboardSet"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterDetail"
                },
                {
                  "$ref": "#/components/schemas/GameCenterGroup"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSet"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetLocalization"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboard"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSetRelease"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardSetCreateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardSetCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardSets"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "referenceName": {
                    "type": "string"
                  },
                  "vendorIdentifier": {
                    "type": "string"
                  }
                },
                "required": [
                  "vendorIdentifier",
                  "referenceName"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "gameCenterDetail": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterDetails"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "gameCenterGroup": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterGroups"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "gameCenterLeaderboards": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "gameCenterLeaderboards"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardSetUpdateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardSetUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardSets"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "referenceName": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboard": {
        "type": "object",
        "title": "GameCenterLeaderboard",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterLeaderboards"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "defaultFormatter": {
                "$ref": "#/components/schemas/GameCenterLeaderboardFormatter"
              },
              "referenceName": {
                "type": "string"
              },
              "vendorIdentifier": {
                "type": "string"
              },
              "submissionType": {
                "type": "string",
                "enum": [
                  "BEST_SCORE",
                  "MOST_RECENT_SCORE"
                ]
              },
              "scoreSortType": {
                "type": "string",
                "enum": [
                  "ASC",
                  "DESC"
                ]
              },
              "scoreRangeStart": {
                "type": "string",
                "format": "number"
              },
              "scoreRangeEnd": {
                "type": "string",
                "format": "number"
              },
              "recurrenceStartDate": {
                "type": "string",
                "format": "date-time"
              },
              "recurrenceDuration": {
                "type": "string",
                "format": "duration"
              },
              "recurrenceRule": {
                "type": "string"
              },
              "archived": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "gameCenterDetail": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterDetails"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "gameCenterGroup": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterGroups"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "groupLeaderboard": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterLeaderboards"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                },
                "deprecated": true
              },
              "gameCenterLeaderboardSets": {
                "type": "object",
                "properties": {
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterLeaderboardSets"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "localizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterLeaderboardLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "releases": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterLeaderboardReleases"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterLeaderboardsResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterLeaderboard"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterDetail"
                },
                {
                  "$ref": "#/components/schemas/GameCenterGroup"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboard"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSet"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardLocalization"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardRelease"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardResponse": {
        "type": "object",
        "title": "GameCenterLeaderboardResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterLeaderboard"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterDetail"
                },
                {
                  "$ref": "#/components/schemas/GameCenterGroup"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboard"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardSet"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardLocalization"
                },
                {
                  "$ref": "#/components/schemas/GameCenterLeaderboardRelease"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardCreateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboards"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "defaultFormatter": {
                    "$ref": "#/components/schemas/GameCenterLeaderboardFormatter"
                  },
                  "referenceName": {
                    "type": "string"
                  },
                  "vendorIdentifier": {
                    "type": "string"
                  },
                  "submissionType": {
                    "type": "string",
                    "enum": [
                      "BEST_SCORE",
                      "MOST_RECENT_SCORE"
                    ]
                  },
                  "scoreSortType": {
                    "type": "string",
                    "enum": [
                      "ASC",
                      "DESC"
                    ]
                  },
                  "scoreRangeStart": {
                    "type": "string",
                    "format": "number"
                  },
                  "scoreRangeEnd": {
                    "type": "string",
                    "format": "number"
                  },
                  "recurrenceStartDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "recurrenceDuration": {
                    "type": "string",
                    "format": "duration"
                  },
                  "recurrenceRule": {
                    "type": "string"
                  }
                },
                "required": [
                  "vendorIdentifier",
                  "submissionType",
                  "defaultFormatter",
                  "scoreSortType",
                  "referenceName"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "gameCenterDetail": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterDetails"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "gameCenterGroup": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterGroups"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "gameCenterLeaderboardSets": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "gameCenterLeaderboardSets"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardUpdateRequest": {
        "type": "object",
        "title": "GameCenterLeaderboardUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboards"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "defaultFormatter": {
                    "$ref": "#/components/schemas/GameCenterLeaderboardFormatter"
                  },
                  "referenceName": {
                    "type": "string"
                  },
                  "submissionType": {
                    "type": "string",
                    "enum": [
                      "BEST_SCORE",
                      "MOST_RECENT_SCORE"
                    ]
                  },
                  "scoreSortType": {
                    "type": "string",
                    "enum": [
                      "ASC",
                      "DESC"
                    ]
                  },
                  "scoreRangeStart": {
                    "type": "string",
                    "format": "number"
                  },
                  "scoreRangeEnd": {
                    "type": "string",
                    "format": "number"
                  },
                  "recurrenceStartDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "recurrenceDuration": {
                    "type": "string",
                    "format": "duration"
                  },
                  "recurrenceRule": {
                    "type": "string"
                  },
                  "archived": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterMatchmakingQueue": {
        "type": "object",
        "title": "GameCenterMatchmakingQueue",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterMatchmakingQueues"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "referenceName": {
                "type": "string"
              },
              "classicMatchmakingBundleIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "ruleSet": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterMatchmakingRuleSets"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "experimentRuleSet": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "gameCenterMatchmakingRuleSets"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterMatchmakingQueuesResponse": {
        "type": "object",
        "title": "GameCenterMatchmakingQueuesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterMatchmakingQueue"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterMatchmakingRuleSet"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterMatchmakingQueueResponse": {
        "type": "object",
        "title": "GameCenterMatchmakingQueueResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterMatchmakingQueue"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterMatchmakingRuleSet"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterMatchmakingQueueCreateRequest": {
        "type": "object",
        "title": "GameCenterMatchmakingQueueCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterMatchmakingQueues"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "referenceName": {
                    "type": "string"
                  },
                  "classicMatchmakingBundleIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "referenceName"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "ruleSet": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterMatchmakingRuleSets"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "experimentRuleSet": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterMatchmakingRuleSets"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "ruleSet"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterMatchmakingQueueUpdateRequest": {
        "type": "object",
        "title": "GameCenterMatchmakingQueueUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterMatchmakingQueues"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "classicMatchmakingBundleIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "ruleSet": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterMatchmakingRuleSets"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "experimentRuleSet": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterMatchmakingRuleSets"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterMatchmakingRuleSetTest": {
        "type": "object",
        "title": "GameCenterMatchmakingRuleSetTest",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterMatchmakingRuleSetTests"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "matchmakingResults": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "requestName": {
                        "type": "string"
                      },
                      "teamAssignments": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/GameCenterMatchmakingTeamAssignment"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterMatchmakingRuleSetTestResponse": {
        "type": "object",
        "title": "GameCenterMatchmakingRuleSetTestResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterMatchmakingRuleSetTest"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterMatchmakingRuleSetTestCreateRequest": {
        "type": "object",
        "title": "GameCenterMatchmakingRuleSetTestCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterMatchmakingRuleSetTests"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "matchmakingRuleSet": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterMatchmakingRuleSets"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "matchmakingRequests": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "gameCenterMatchmakingTestRequests"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "matchmakingRuleSet",
                  "matchmakingRequests"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterMatchmakingTestPlayerPropertyInlineCreate"
                },
                {
                  "$ref": "#/components/schemas/GameCenterMatchmakingTestRequestInlineCreate"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterMatchmakingRuleSet": {
        "type": "object",
        "title": "GameCenterMatchmakingRuleSet",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterMatchmakingRuleSets"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "referenceName": {
                "type": "string"
              },
              "ruleLanguageVersion": {
                "type": "integer"
              },
              "minPlayers": {
                "type": "integer"
              },
              "maxPlayers": {
                "type": "integer"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "teams": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterMatchmakingTeams"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "rules": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterMatchmakingRules"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "matchmakingQueues": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterMatchmakingQueues"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterMatchmakingRuleSetsResponse": {
        "type": "object",
        "title": "GameCenterMatchmakingRuleSetsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterMatchmakingRuleSet"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterMatchmakingTeam"
                },
                {
                  "$ref": "#/components/schemas/GameCenterMatchmakingRule"
                },
                {
                  "$ref": "#/components/schemas/GameCenterMatchmakingQueue"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterMatchmakingRuleSetResponse": {
        "type": "object",
        "title": "GameCenterMatchmakingRuleSetResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterMatchmakingRuleSet"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GameCenterMatchmakingTeam"
                },
                {
                  "$ref": "#/components/schemas/GameCenterMatchmakingRule"
                },
                {
                  "$ref": "#/components/schemas/GameCenterMatchmakingQueue"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterMatchmakingRuleSetCreateRequest": {
        "type": "object",
        "title": "GameCenterMatchmakingRuleSetCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterMatchmakingRuleSets"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "referenceName": {
                    "type": "string"
                  },
                  "ruleLanguageVersion": {
                    "type": "integer"
                  },
                  "minPlayers": {
                    "type": "integer"
                  },
                  "maxPlayers": {
                    "type": "integer"
                  }
                },
                "required": [
                  "maxPlayers",
                  "minPlayers",
                  "referenceName",
                  "ruleLanguageVersion"
                ]
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterMatchmakingRuleSetUpdateRequest": {
        "type": "object",
        "title": "GameCenterMatchmakingRuleSetUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterMatchmakingRuleSets"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "minPlayers": {
                    "type": "integer"
                  },
                  "maxPlayers": {
                    "type": "integer"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterMatchmakingRule": {
        "type": "object",
        "title": "GameCenterMatchmakingRule",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterMatchmakingRules"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "referenceName": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "COMPATIBLE",
                  "DISTANCE",
                  "MATCH",
                  "TEAM"
                ]
              },
              "expression": {
                "type": "string"
              },
              "weight": {
                "type": "number"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterMatchmakingRulesResponse": {
        "type": "object",
        "title": "GameCenterMatchmakingRulesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterMatchmakingRule"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterMatchmakingRuleResponse": {
        "type": "object",
        "title": "GameCenterMatchmakingRuleResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterMatchmakingRule"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterMatchmakingRuleCreateRequest": {
        "type": "object",
        "title": "GameCenterMatchmakingRuleCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterMatchmakingRules"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "referenceName": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "COMPATIBLE",
                      "DISTANCE",
                      "MATCH",
                      "TEAM"
                    ]
                  },
                  "expression": {
                    "type": "string"
                  },
                  "weight": {
                    "type": "number"
                  }
                },
                "required": [
                  "expression",
                  "description",
                  "type",
                  "referenceName"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "ruleSet": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterMatchmakingRuleSets"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "ruleSet"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterMatchmakingRuleUpdateRequest": {
        "type": "object",
        "title": "GameCenterMatchmakingRuleUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterMatchmakingRules"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "expression": {
                    "type": "string"
                  },
                  "weight": {
                    "type": "number"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterMatchmakingTeam": {
        "type": "object",
        "title": "GameCenterMatchmakingTeam",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterMatchmakingTeams"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "referenceName": {
                "type": "string"
              },
              "minPlayers": {
                "type": "integer"
              },
              "maxPlayers": {
                "type": "integer"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterMatchmakingTeamsResponse": {
        "type": "object",
        "title": "GameCenterMatchmakingTeamsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameCenterMatchmakingTeam"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterMatchmakingTeamResponse": {
        "type": "object",
        "title": "GameCenterMatchmakingTeamResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterMatchmakingTeam"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterMatchmakingTeamCreateRequest": {
        "type": "object",
        "title": "GameCenterMatchmakingTeamCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterMatchmakingTeams"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "referenceName": {
                    "type": "string"
                  },
                  "minPlayers": {
                    "type": "integer"
                  },
                  "maxPlayers": {
                    "type": "integer"
                  }
                },
                "required": [
                  "maxPlayers",
                  "minPlayers",
                  "referenceName"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "ruleSet": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "gameCenterMatchmakingRuleSets"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "ruleSet"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterMatchmakingTeamUpdateRequest": {
        "type": "object",
        "title": "GameCenterMatchmakingTeamUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterMatchmakingTeams"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "minPlayers": {
                    "type": "integer"
                  },
                  "maxPlayers": {
                    "type": "integer"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterMatchmakingTestPlayerPropertyInlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterMatchmakingTestPlayerProperties"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "playerId": {
                "type": "string"
              },
              "properties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Property"
                }
              }
            },
            "required": [
              "playerId"
            ]
          }
        },
        "required": [
          "attributes",
          "type"
        ]
      },
      "GameCenterMatchmakingTestRequestInlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterMatchmakingTestRequests"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "requestName": {
                "type": "string"
              },
              "secondsInQueue": {
                "type": "integer"
              },
              "locale": {
                "type": "string",
                "enum": [
                  "AR-SA",
                  "CA-ES",
                  "CS-CZ",
                  "DA-DK",
                  "DE-DE",
                  "EL-GR",
                  "EN-AU",
                  "EN-GB",
                  "EN-US",
                  "EN-KY",
                  "ES-ES",
                  "ES-MX",
                  "FI-FI",
                  "FR-CA",
                  "FR-FR",
                  "HI-IN",
                  "HR-HR",
                  "HU-HU",
                  "ID-ID",
                  "IT-IT",
                  "IW-IL",
                  "JA-JP",
                  "KO-KR",
                  "MS-MY",
                  "NL-NL",
                  "NO-NO",
                  "PL-PL",
                  "PT-BR",
                  "PT-PT",
                  "RO-RO",
                  "RU-RU",
                  "SK-SK",
                  "SV-SE",
                  "TH-TH",
                  "TR-TR",
                  "UK-UA",
                  "ZH-CN",
                  "ZH-TW",
                  "ZH-HK"
                ]
              },
              "location": {
                "$ref": "#/components/schemas/Location"
              },
              "minPlayers": {
                "type": "integer"
              },
              "maxPlayers": {
                "type": "integer"
              },
              "playerCount": {
                "type": "integer"
              },
              "bundleId": {
                "type": "string"
              },
              "platform": {
                "$ref": "#/components/schemas/Platform"
              },
              "appVersion": {
                "type": "string"
              }
            },
            "required": [
              "requestName",
              "appVersion",
              "secondsInQueue",
              "bundleId",
              "platform"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "matchmakingPlayerProperties": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "gameCenterMatchmakingTestPlayerProperties"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "attributes",
          "type"
        ]
      },
      "GameCenterPlayerAchievementSubmission": {
        "type": "object",
        "title": "GameCenterPlayerAchievementSubmission",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "gameCenterPlayerAchievementSubmissions"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "bundleId": {
                "type": "string"
              },
              "challengeIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "percentageAchieved": {
                "type": "integer"
              },
              "scopedPlayerId": {
                "type": "string"
              },
              "submittedDate": {
                "type": "string",
                "format": "date-time"
              },
              "vendorIdentifier": {
                "type": "string"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "GameCenterPlayerAchievementSubmissionResponse": {
        "type": "object",
        "title": "GameCenterPlayerAchievementSubmissionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GameCenterPlayerAchievementSubmission"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterPlayerAchievementSubmissionCreateRequest": {
        "type": "object",
        "title": "GameCenterPlayerAchievementSubmissionCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterPlayerAchievementSubmissions"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "bundleId": {
                    "type": "string"
                  },
                  "challengeIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "percentageAchieved": {
                    "type": "integer"
                  },
                  "scopedPlayerId": {
                    "type": "string"
                  },
                  "submittedDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "vendorIdentifier": {
                    "type": "string"
                  }
                },
                "required": [
                  "vendorIdentifier",
                  "percentageAchieved",
                  "bundleId",
                  "scopedPlayerId"
                ]
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "InAppPurchaseAppStoreReviewScreenshot": {
        "type": "object",
        "title": "InAppPurchaseAppStoreReviewScreenshot",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "inAppPurchaseAppStoreReviewScreenshots"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "sourceFileChecksum": {
                "type": "string"
              },
              "imageAsset": {
                "$ref": "#/components/schemas/ImageAsset"
              },
              "assetToken": {
                "type": "string"
              },
              "assetType": {
                "type": "string"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState": {
                "$ref": "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "inAppPurchaseV2": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "inAppPurchases"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "InAppPurchaseAppStoreReviewScreenshotResponse": {
        "type": "object",
        "title": "InAppPurchaseAppStoreReviewScreenshotResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InAppPurchaseAppStoreReviewScreenshot"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InAppPurchaseV2"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "InAppPurchaseAppStoreReviewScreenshotCreateRequest": {
        "type": "object",
        "title": "InAppPurchaseAppStoreReviewScreenshotCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "inAppPurchaseAppStoreReviewScreenshots"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "fileSize"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "inAppPurchaseV2": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "inAppPurchases"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "inAppPurchaseV2"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "InAppPurchaseAppStoreReviewScreenshotUpdateRequest": {
        "type": "object",
        "title": "InAppPurchaseAppStoreReviewScreenshotUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "inAppPurchaseAppStoreReviewScreenshots"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "sourceFileChecksum": {
                    "type": "string"
                  },
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "InAppPurchaseAvailability": {
        "type": "object",
        "title": "InAppPurchaseAvailability",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "inAppPurchaseAvailabilities"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "availableInNewTerritories": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "availableTerritories": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "territories"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "InAppPurchaseAvailabilityResponse": {
        "type": "object",
        "title": "InAppPurchaseAvailabilityResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InAppPurchaseAvailability"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Territory"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "InAppPurchaseAvailabilityCreateRequest": {
        "type": "object",
        "title": "InAppPurchaseAvailabilityCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "inAppPurchaseAvailabilities"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "availableInNewTerritories": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "availableInNewTerritories"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "inAppPurchase": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "inAppPurchases"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "availableTerritories": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "territories"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "inAppPurchase",
                  "availableTerritories"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "InAppPurchaseContent": {
        "type": "object",
        "title": "InAppPurchaseContent",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "inAppPurchaseContents"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileName": {
                "type": "string"
              },
              "fileSize": {
                "type": "integer"
              },
              "url": {
                "type": "string",
                "format": "uri"
              },
              "lastModifiedDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "inAppPurchaseV2": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "inAppPurchases"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "InAppPurchaseContentResponse": {
        "type": "object",
        "title": "InAppPurchaseContentResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InAppPurchaseContent"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InAppPurchaseV2"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "InAppPurchaseImage": {
        "type": "object",
        "title": "InAppPurchaseImage",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "inAppPurchaseImages"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "sourceFileChecksum": {
                "type": "string"
              },
              "assetToken": {
                "type": "string"
              },
              "imageAsset": {
                "$ref": "#/components/schemas/ImageAsset"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "state": {
                "type": "string",
                "enum": [
                  "AWAITING_UPLOAD",
                  "UPLOAD_COMPLETE",
                  "FAILED",
                  "PREPARE_FOR_SUBMISSION",
                  "WAITING_FOR_REVIEW",
                  "APPROVED",
                  "REJECTED"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "inAppPurchase": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "inAppPurchases"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "InAppPurchaseImagesResponse": {
        "type": "object",
        "title": "InAppPurchaseImagesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InAppPurchaseImage"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InAppPurchaseV2"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "InAppPurchaseImageResponse": {
        "type": "object",
        "title": "InAppPurchaseImageResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InAppPurchaseImage"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InAppPurchaseV2"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "InAppPurchaseImageCreateRequest": {
        "type": "object",
        "title": "InAppPurchaseImageCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "inAppPurchaseImages"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "fileSize"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "inAppPurchase": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "inAppPurchases"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "inAppPurchase"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "InAppPurchaseImageUpdateRequest": {
        "type": "object",
        "title": "InAppPurchaseImageUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "inAppPurchaseImages"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "sourceFileChecksum": {
                    "type": "string"
                  },
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "InAppPurchaseLocalization": {
        "type": "object",
        "title": "InAppPurchaseLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "inAppPurchaseLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "locale": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "state": {
                "type": "string",
                "enum": [
                  "PREPARE_FOR_SUBMISSION",
                  "WAITING_FOR_REVIEW",
                  "APPROVED",
                  "REJECTED"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "inAppPurchaseV2": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "inAppPurchases"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "InAppPurchaseLocalizationsResponse": {
        "type": "object",
        "title": "InAppPurchaseLocalizationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InAppPurchaseLocalization"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InAppPurchaseV2"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "InAppPurchaseLocalizationResponse": {
        "type": "object",
        "title": "InAppPurchaseLocalizationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InAppPurchaseLocalization"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InAppPurchaseV2"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "InAppPurchaseLocalizationCreateRequest": {
        "type": "object",
        "title": "InAppPurchaseLocalizationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "inAppPurchaseLocalizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "locale": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "locale"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "inAppPurchaseV2": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "inAppPurchases"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "inAppPurchaseV2"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "InAppPurchaseLocalizationUpdateRequest": {
        "type": "object",
        "title": "InAppPurchaseLocalizationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "inAppPurchaseLocalizations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "InAppPurchasePricePoint": {
        "type": "object",
        "title": "InAppPurchasePricePoint",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "inAppPurchasePricePoints"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "customerPrice": {
                "type": "string"
              },
              "proceeds": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "territory": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "equalizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "InAppPurchasePricePointsResponse": {
        "type": "object",
        "title": "InAppPurchasePricePointsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InAppPurchasePricePoint"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Territory"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "InAppPurchasePriceSchedule": {
        "type": "object",
        "title": "InAppPurchasePriceSchedule",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "inAppPurchasePriceSchedules"
            ]
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "baseTerritory": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "manualPrices": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "inAppPurchasePrices"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "automaticPrices": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "inAppPurchasePrices"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "InAppPurchasePriceScheduleResponse": {
        "type": "object",
        "title": "InAppPurchasePriceScheduleResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InAppPurchasePriceSchedule"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Territory"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchasePrice"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "InAppPurchasePriceScheduleCreateRequest": {
        "type": "object",
        "title": "InAppPurchasePriceScheduleCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "inAppPurchasePriceSchedules"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "inAppPurchase": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "inAppPurchases"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "baseTerritory": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "territories"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "manualPrices": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "inAppPurchasePrices"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "inAppPurchase",
                  "manualPrices",
                  "baseTerritory"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InAppPurchasePriceInlineCreate"
                },
                {
                  "$ref": "#/components/schemas/TerritoryInlineCreate"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "InAppPurchasePrice": {
        "type": "object",
        "title": "InAppPurchasePrice",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "inAppPurchasePrices"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "startDate": {
                "type": "string",
                "format": "date"
              },
              "endDate": {
                "type": "string",
                "format": "date"
              },
              "manual": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "inAppPurchasePricePoint": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "inAppPurchasePricePoints"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "territory": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "InAppPurchasePriceInlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "inAppPurchasePrices"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "startDate": {
                "type": "string",
                "format": "date"
              },
              "endDate": {
                "type": "string",
                "format": "date"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "inAppPurchaseV2": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "inAppPurchases"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "inAppPurchasePricePoint": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "inAppPurchasePricePoints"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "InAppPurchasePricesResponse": {
        "type": "object",
        "title": "InAppPurchasePricesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InAppPurchasePrice"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InAppPurchasePricePoint"
                },
                {
                  "$ref": "#/components/schemas/Territory"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "InAppPurchaseSubmission": {
        "type": "object",
        "title": "InAppPurchaseSubmission",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "inAppPurchaseSubmissions"
            ]
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "inAppPurchaseV2": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "inAppPurchases"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "InAppPurchaseSubmissionResponse": {
        "type": "object",
        "title": "InAppPurchaseSubmissionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InAppPurchaseSubmission"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InAppPurchaseV2"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "InAppPurchaseSubmissionCreateRequest": {
        "type": "object",
        "title": "InAppPurchaseSubmissionCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "inAppPurchaseSubmissions"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "inAppPurchaseV2": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "inAppPurchases"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "inAppPurchaseV2"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "InAppPurchase": {
        "type": "object",
        "title": "InAppPurchase",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "inAppPurchases"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "referenceName": {
                "type": "string"
              },
              "productId": {
                "type": "string"
              },
              "inAppPurchaseType": {
                "type": "string",
                "enum": [
                  "AUTOMATICALLY_RENEWABLE_SUBSCRIPTION",
                  "NON_CONSUMABLE",
                  "CONSUMABLE",
                  "NON_RENEWING_SUBSCRIPTION",
                  "FREE_SUBSCRIPTION"
                ]
              },
              "state": {
                "type": "string",
                "enum": [
                  "CREATED",
                  "DEVELOPER_SIGNED_OFF",
                  "DEVELOPER_ACTION_NEEDED",
                  "DELETION_IN_PROGRESS",
                  "APPROVED",
                  "DELETED",
                  "REMOVED_FROM_SALE",
                  "DEVELOPER_REMOVED_FROM_SALE",
                  "WAITING_FOR_UPLOAD",
                  "PROCESSING_CONTENT",
                  "REPLACED",
                  "REJECTED",
                  "WAITING_FOR_SCREENSHOT",
                  "PREPARE_FOR_SUBMISSION",
                  "MISSING_METADATA",
                  "READY_TO_SUBMIT",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "PENDING_DEVELOPER_RELEASE"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "apps": {
                "type": "object",
                "properties": {
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "apps"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "deprecated": true
      },
      "InAppPurchasesResponse": {
        "type": "object",
        "title": "InAppPurchasesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InAppPurchase"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "deprecated": true
      },
      "InAppPurchaseResponse": {
        "type": "object",
        "title": "InAppPurchaseResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InAppPurchase"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "deprecated": true
      },
      "InAppPurchaseV2": {
        "type": "object",
        "title": "InAppPurchaseV2",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "inAppPurchases"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "productId": {
                "type": "string"
              },
              "inAppPurchaseType": {
                "$ref": "#/components/schemas/InAppPurchaseType"
              },
              "state": {
                "$ref": "#/components/schemas/InAppPurchaseState"
              },
              "reviewNote": {
                "type": "string"
              },
              "familySharable": {
                "type": "boolean"
              },
              "contentHosting": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "inAppPurchaseLocalizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "inAppPurchaseLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "pricePoints": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "inAppPurchasePricePoints"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "content": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "inAppPurchaseContents"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appStoreReviewScreenshot": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "inAppPurchaseAppStoreReviewScreenshots"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "promotedPurchase": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "promotedPurchases"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "iapPriceSchedule": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "inAppPurchasePriceSchedules"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "inAppPurchaseAvailability": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "inAppPurchaseAvailabilities"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "images": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "inAppPurchaseImages"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "InAppPurchasesV2Response": {
        "type": "object",
        "title": "InAppPurchasesV2Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InAppPurchaseV2"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InAppPurchaseLocalization"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchasePricePoint"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchaseContent"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchaseAppStoreReviewScreenshot"
                },
                {
                  "$ref": "#/components/schemas/PromotedPurchase"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchasePriceSchedule"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchaseAvailability"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchaseImage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "InAppPurchaseV2Response": {
        "type": "object",
        "title": "InAppPurchaseV2Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InAppPurchaseV2"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InAppPurchaseLocalization"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchasePricePoint"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchaseContent"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchaseAppStoreReviewScreenshot"
                },
                {
                  "$ref": "#/components/schemas/PromotedPurchase"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchasePriceSchedule"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchaseAvailability"
                },
                {
                  "$ref": "#/components/schemas/InAppPurchaseImage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "InAppPurchaseV2CreateRequest": {
        "type": "object",
        "title": "InAppPurchaseV2CreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "inAppPurchases"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "productId": {
                    "type": "string"
                  },
                  "inAppPurchaseType": {
                    "$ref": "#/components/schemas/InAppPurchaseType"
                  },
                  "reviewNote": {
                    "type": "string"
                  },
                  "familySharable": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "productId",
                  "name",
                  "inAppPurchaseType"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "app"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "InAppPurchaseV2UpdateRequest": {
        "type": "object",
        "title": "InAppPurchaseV2UpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "inAppPurchases"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "reviewNote": {
                    "type": "string"
                  },
                  "familySharable": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "MarketplaceDomain": {
        "type": "object",
        "title": "MarketplaceDomain",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "marketplaceDomains"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "domain": {
                "type": "string"
              },
              "referenceName": {
                "type": "string"
              },
              "createdDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "deprecated": true
      },
      "MarketplaceDomainsResponse": {
        "type": "object",
        "title": "MarketplaceDomainsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketplaceDomain"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "deprecated": true
      },
      "MarketplaceDomainResponse": {
        "type": "object",
        "title": "MarketplaceDomainResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MarketplaceDomain"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "deprecated": true
      },
      "MarketplaceDomainCreateRequest": {
        "type": "object",
        "title": "MarketplaceDomainCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "marketplaceDomains"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "domain": {
                    "type": "string"
                  },
                  "referenceName": {
                    "type": "string"
                  }
                },
                "required": [
                  "domain",
                  "referenceName"
                ]
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ],
        "deprecated": true
      },
      "MarketplaceSearchDetail": {
        "type": "object",
        "title": "MarketplaceSearchDetail",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "marketplaceSearchDetails"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "catalogUrl": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "MarketplaceSearchDetailResponse": {
        "type": "object",
        "title": "MarketplaceSearchDetailResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MarketplaceSearchDetail"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "MarketplaceSearchDetailCreateRequest": {
        "type": "object",
        "title": "MarketplaceSearchDetailCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "marketplaceSearchDetails"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "catalogUrl": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "catalogUrl"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "app"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "MarketplaceSearchDetailUpdateRequest": {
        "type": "object",
        "title": "MarketplaceSearchDetailUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "marketplaceSearchDetails"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "catalogUrl": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "MarketplaceWebhook": {
        "type": "object",
        "title": "MarketplaceWebhook",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "marketplaceWebhooks"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "endpointUrl": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "MarketplaceWebhooksResponse": {
        "type": "object",
        "title": "MarketplaceWebhooksResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketplaceWebhook"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "MarketplaceWebhookResponse": {
        "type": "object",
        "title": "MarketplaceWebhookResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MarketplaceWebhook"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "MarketplaceWebhookCreateRequest": {
        "type": "object",
        "title": "MarketplaceWebhookCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "marketplaceWebhooks"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "endpointUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "secret": {
                    "type": "string"
                  }
                },
                "required": [
                  "endpointUrl",
                  "secret"
                ]
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "MarketplaceWebhookUpdateRequest": {
        "type": "object",
        "title": "MarketplaceWebhookUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "marketplaceWebhooks"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "endpointUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "secret": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "PerfPowerMetric": {
        "type": "object",
        "title": "PerfPowerMetric",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "perfPowerMetrics"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "platform": {
                "type": "string",
                "enum": [
                  "IOS"
                ]
              },
              "metricType": {
                "type": "string",
                "enum": [
                  "DISK",
                  "HANG",
                  "BATTERY",
                  "LAUNCH",
                  "MEMORY",
                  "ANIMATION",
                  "TERMINATION"
                ]
              },
              "deviceType": {
                "type": "string"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "PrereleaseVersion": {
        "type": "object",
        "title": "PrereleaseVersion",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "preReleaseVersions"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string"
              },
              "platform": {
                "$ref": "#/components/schemas/Platform"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "builds": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "builds"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "app": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "PreReleaseVersionsResponse": {
        "type": "object",
        "title": "PreReleaseVersionsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrereleaseVersion"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Build"
                },
                {
                  "$ref": "#/components/schemas/App"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "PrereleaseVersionResponse": {
        "type": "object",
        "title": "PrereleaseVersionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PrereleaseVersion"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Build"
                },
                {
                  "$ref": "#/components/schemas/App"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "Profile": {
        "type": "object",
        "title": "Profile",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profiles"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "platform": {
                "$ref": "#/components/schemas/BundleIdPlatform"
              },
              "profileType": {
                "type": "string",
                "enum": [
                  "IOS_APP_DEVELOPMENT",
                  "IOS_APP_STORE",
                  "IOS_APP_ADHOC",
                  "IOS_APP_INHOUSE",
                  "MAC_APP_DEVELOPMENT",
                  "MAC_APP_STORE",
                  "MAC_APP_DIRECT",
                  "TVOS_APP_DEVELOPMENT",
                  "TVOS_APP_STORE",
                  "TVOS_APP_ADHOC",
                  "TVOS_APP_INHOUSE",
                  "MAC_CATALYST_APP_DEVELOPMENT",
                  "MAC_CATALYST_APP_STORE",
                  "MAC_CATALYST_APP_DIRECT"
                ]
              },
              "profileState": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "INVALID"
                ]
              },
              "profileContent": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              },
              "createdDate": {
                "type": "string",
                "format": "date-time"
              },
              "expirationDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "bundleId": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "bundleIds"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "devices": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "devices"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "certificates": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "certificates"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "ProfilesResponse": {
        "type": "object",
        "title": "ProfilesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Profile"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BundleId"
                },
                {
                  "$ref": "#/components/schemas/Device"
                },
                {
                  "$ref": "#/components/schemas/Certificate"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ProfileResponse": {
        "type": "object",
        "title": "ProfileResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Profile"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BundleId"
                },
                {
                  "$ref": "#/components/schemas/Device"
                },
                {
                  "$ref": "#/components/schemas/Certificate"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ProfileCreateRequest": {
        "type": "object",
        "title": "ProfileCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "profiles"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "profileType": {
                    "type": "string",
                    "enum": [
                      "IOS_APP_DEVELOPMENT",
                      "IOS_APP_STORE",
                      "IOS_APP_ADHOC",
                      "IOS_APP_INHOUSE",
                      "MAC_APP_DEVELOPMENT",
                      "MAC_APP_STORE",
                      "MAC_APP_DIRECT",
                      "TVOS_APP_DEVELOPMENT",
                      "TVOS_APP_STORE",
                      "TVOS_APP_ADHOC",
                      "TVOS_APP_INHOUSE",
                      "MAC_CATALYST_APP_DEVELOPMENT",
                      "MAC_CATALYST_APP_STORE",
                      "MAC_CATALYST_APP_DIRECT"
                    ]
                  }
                },
                "required": [
                  "profileType",
                  "name"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "bundleId": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "bundleIds"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "devices": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "devices"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  },
                  "certificates": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "certificates"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "certificates",
                  "bundleId"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "PromotedPurchaseImage": {
        "type": "object",
        "title": "PromotedPurchaseImage",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "promotedPurchaseImages"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "sourceFileChecksum": {
                "type": "string"
              },
              "assetToken": {
                "type": "string"
              },
              "imageAsset": {
                "$ref": "#/components/schemas/ImageAsset"
              },
              "assetType": {
                "type": "string"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "state": {
                "type": "string",
                "enum": [
                  "AWAITING_UPLOAD",
                  "UPLOAD_COMPLETE",
                  "FAILED",
                  "PREPARE_FOR_SUBMISSION",
                  "WAITING_FOR_REVIEW",
                  "APPROVED",
                  "REJECTED"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "promotedPurchase": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "promotedPurchases"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "deprecated": true
      },
      "PromotedPurchaseImagesResponse": {
        "type": "object",
        "title": "PromotedPurchaseImagesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotedPurchaseImage"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotedPurchase"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "deprecated": true
      },
      "PromotedPurchaseImageResponse": {
        "type": "object",
        "title": "PromotedPurchaseImageResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PromotedPurchaseImage"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotedPurchase"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "deprecated": true
      },
      "PromotedPurchaseImageCreateRequest": {
        "type": "object",
        "title": "PromotedPurchaseImageCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "promotedPurchaseImages"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "fileSize"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "promotedPurchase": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "promotedPurchases"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "promotedPurchase"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ],
        "deprecated": true
      },
      "PromotedPurchaseImageUpdateRequest": {
        "type": "object",
        "title": "PromotedPurchaseImageUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "promotedPurchaseImages"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "sourceFileChecksum": {
                    "type": "string"
                  },
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ],
        "deprecated": true
      },
      "PromotedPurchase": {
        "type": "object",
        "title": "PromotedPurchase",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "promotedPurchases"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "visibleForAllUsers": {
                "type": "boolean"
              },
              "enabled": {
                "type": "boolean"
              },
              "state": {
                "type": "string",
                "enum": [
                  "APPROVED",
                  "IN_REVIEW",
                  "PREPARE_FOR_SUBMISSION",
                  "REJECTED"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "inAppPurchaseV2": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "inAppPurchases"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "subscription": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "promotionImages": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "promotedPurchaseImages"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                },
                "deprecated": true
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "PromotedPurchasesResponse": {
        "type": "object",
        "title": "PromotedPurchasesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotedPurchase"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InAppPurchaseV2"
                },
                {
                  "$ref": "#/components/schemas/Subscription"
                },
                {
                  "$ref": "#/components/schemas/PromotedPurchaseImage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "PromotedPurchaseResponse": {
        "type": "object",
        "title": "PromotedPurchaseResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PromotedPurchase"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/InAppPurchaseV2"
                },
                {
                  "$ref": "#/components/schemas/Subscription"
                },
                {
                  "$ref": "#/components/schemas/PromotedPurchaseImage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "PromotedPurchaseCreateRequest": {
        "type": "object",
        "title": "PromotedPurchaseCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "promotedPurchases"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "visibleForAllUsers": {
                    "type": "boolean"
                  },
                  "enabled": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "visibleForAllUsers"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "inAppPurchaseV2": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "inAppPurchases"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "subscription": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "app"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "PromotedPurchaseUpdateRequest": {
        "type": "object",
        "title": "PromotedPurchaseUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "promotedPurchases"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "visibleForAllUsers": {
                    "type": "boolean"
                  },
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ReviewSubmissionItem": {
        "type": "object",
        "title": "ReviewSubmissionItem",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "reviewSubmissionItems"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "state": {
                "type": "string",
                "enum": [
                  "READY_FOR_REVIEW",
                  "ACCEPTED",
                  "APPROVED",
                  "REJECTED",
                  "REMOVED"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appStoreVersion": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appCustomProductPageVersion": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appCustomProductPageVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appStoreVersionExperiment": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersionExperiments"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appStoreVersionExperimentV2": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersionExperiments"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "appEvent": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appEvents"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "ReviewSubmissionItemsResponse": {
        "type": "object",
        "title": "ReviewSubmissionItemsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewSubmissionItem"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/AppCustomProductPageVersion"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperiment"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentV2"
                },
                {
                  "$ref": "#/components/schemas/AppEvent"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ReviewSubmissionItemResponse": {
        "type": "object",
        "title": "ReviewSubmissionItemResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReviewSubmissionItem"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/AppCustomProductPageVersion"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperiment"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersionExperimentV2"
                },
                {
                  "$ref": "#/components/schemas/AppEvent"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ReviewSubmissionItemCreateRequest": {
        "type": "object",
        "title": "ReviewSubmissionItemCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "reviewSubmissionItems"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "reviewSubmission": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "reviewSubmissions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "appStoreVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "appCustomProductPageVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appCustomProductPageVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "appStoreVersionExperiment": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersionExperiments"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "appStoreVersionExperimentV2": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersionExperiments"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "appEvent": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appEvents"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "reviewSubmission"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ReviewSubmissionItemUpdateRequest": {
        "type": "object",
        "title": "ReviewSubmissionItemUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "reviewSubmissionItems"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "resolved": {
                    "type": "boolean"
                  },
                  "removed": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ReviewSubmission": {
        "type": "object",
        "title": "ReviewSubmission",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "reviewSubmissions"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "platform": {
                "$ref": "#/components/schemas/Platform"
              },
              "submittedDate": {
                "type": "string",
                "format": "date-time"
              },
              "state": {
                "type": "string",
                "enum": [
                  "READY_FOR_REVIEW",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "UNRESOLVED_ISSUES",
                  "CANCELING",
                  "COMPLETING",
                  "COMPLETE"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "app": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "apps"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "items": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "reviewSubmissionItems"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "appStoreVersionForReview": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "submittedByActor": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "actors"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "lastUpdatedByActor": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "actors"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "ReviewSubmissionsResponse": {
        "type": "object",
        "title": "ReviewSubmissionsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewSubmission"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/ReviewSubmissionItem"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/Actor"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ReviewSubmissionResponse": {
        "type": "object",
        "title": "ReviewSubmissionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReviewSubmission"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/App"
                },
                {
                  "$ref": "#/components/schemas/ReviewSubmissionItem"
                },
                {
                  "$ref": "#/components/schemas/AppStoreVersion"
                },
                {
                  "$ref": "#/components/schemas/Actor"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ReviewSubmissionCreateRequest": {
        "type": "object",
        "title": "ReviewSubmissionCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "reviewSubmissions"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "platform": {
                    "$ref": "#/components/schemas/Platform"
                  }
                },
                "required": [
                  "platform"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "app"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ReviewSubmissionUpdateRequest": {
        "type": "object",
        "title": "ReviewSubmissionUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "reviewSubmissions"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "submitted": {
                    "type": "boolean"
                  },
                  "canceled": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "RoutingAppCoverage": {
        "type": "object",
        "title": "RoutingAppCoverage",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "routingAppCoverages"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "sourceFileChecksum": {
                "type": "string"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState": {
                "$ref": "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "appStoreVersion": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "appStoreVersions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "RoutingAppCoverageResponse": {
        "type": "object",
        "title": "RoutingAppCoverageResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RoutingAppCoverage"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppStoreVersion"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "RoutingAppCoverageCreateRequest": {
        "type": "object",
        "title": "RoutingAppCoverageCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "routingAppCoverages"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "fileSize"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "appStoreVersion": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "appStoreVersions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "appStoreVersion"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "RoutingAppCoverageUpdateRequest": {
        "type": "object",
        "title": "RoutingAppCoverageUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "routingAppCoverages"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "sourceFileChecksum": {
                    "type": "string"
                  },
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SandboxTesterV2": {
        "type": "object",
        "title": "SandboxTesterV2",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "sandboxTesters"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "acAccountName": {
                "type": "string"
              },
              "territory": {
                "$ref": "#/components/schemas/TerritoryCode"
              },
              "applePayCompatible": {
                "type": "boolean"
              },
              "interruptPurchases": {
                "type": "boolean"
              },
              "subscriptionRenewalRate": {
                "type": "string",
                "enum": [
                  "MONTHLY_RENEWAL_EVERY_ONE_HOUR",
                  "MONTHLY_RENEWAL_EVERY_THIRTY_MINUTES",
                  "MONTHLY_RENEWAL_EVERY_FIFTEEN_MINUTES",
                  "MONTHLY_RENEWAL_EVERY_FIVE_MINUTES",
                  "MONTHLY_RENEWAL_EVERY_THREE_MINUTES"
                ]
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SandboxTestersV2Response": {
        "type": "object",
        "title": "SandboxTestersV2Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SandboxTesterV2"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SandboxTesterV2Response": {
        "type": "object",
        "title": "SandboxTesterV2Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SandboxTesterV2"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SandboxTesterV2UpdateRequest": {
        "type": "object",
        "title": "SandboxTesterV2UpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "sandboxTesters"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "territory": {
                    "$ref": "#/components/schemas/TerritoryCode"
                  },
                  "interruptPurchases": {
                    "type": "boolean"
                  },
                  "subscriptionRenewalRate": {
                    "type": "string",
                    "enum": [
                      "MONTHLY_RENEWAL_EVERY_ONE_HOUR",
                      "MONTHLY_RENEWAL_EVERY_THIRTY_MINUTES",
                      "MONTHLY_RENEWAL_EVERY_FIFTEEN_MINUTES",
                      "MONTHLY_RENEWAL_EVERY_FIVE_MINUTES",
                      "MONTHLY_RENEWAL_EVERY_THREE_MINUTES"
                    ]
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SandboxTestersClearPurchaseHistoryRequestV2": {
        "type": "object",
        "title": "SandboxTestersClearPurchaseHistoryRequestV2",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "sandboxTestersClearPurchaseHistoryRequest"
            ]
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SandboxTestersClearPurchaseHistoryRequestV2Response": {
        "type": "object",
        "title": "SandboxTestersClearPurchaseHistoryRequestV2Response",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SandboxTestersClearPurchaseHistoryRequestV2"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SandboxTestersClearPurchaseHistoryRequestV2CreateRequest": {
        "type": "object",
        "title": "SandboxTestersClearPurchaseHistoryRequestV2CreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "sandboxTestersClearPurchaseHistoryRequest"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "sandboxTesters": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "sandboxTesters"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "sandboxTesters"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ScmGitReference": {
        "type": "object",
        "title": "ScmGitReference",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "scmGitReferences"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "canonicalName": {
                "type": "string"
              },
              "isDeleted": {
                "type": "boolean"
              },
              "kind": {
                "$ref": "#/components/schemas/CiGitRefKind"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "repository": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "scmRepositories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "ScmGitReferencesResponse": {
        "type": "object",
        "title": "ScmGitReferencesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScmGitReference"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScmRepository"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ScmGitReferenceResponse": {
        "type": "object",
        "title": "ScmGitReferenceResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ScmGitReference"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScmRepository"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ScmProvider": {
        "type": "object",
        "title": "ScmProvider",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "scmProviders"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "scmProviderType": {
                "$ref": "#/components/schemas/ScmProviderType"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "repositories": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "ScmProvidersResponse": {
        "type": "object",
        "title": "ScmProvidersResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScmProvider"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ScmProviderResponse": {
        "type": "object",
        "title": "ScmProviderResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ScmProvider"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ScmPullRequest": {
        "type": "object",
        "title": "ScmPullRequest",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "scmPullRequests"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "number": {
                "type": "integer"
              },
              "webUrl": {
                "type": "string",
                "format": "uri"
              },
              "sourceRepositoryOwner": {
                "type": "string"
              },
              "sourceRepositoryName": {
                "type": "string"
              },
              "sourceBranchName": {
                "type": "string"
              },
              "destinationRepositoryOwner": {
                "type": "string"
              },
              "destinationRepositoryName": {
                "type": "string"
              },
              "destinationBranchName": {
                "type": "string"
              },
              "isClosed": {
                "type": "boolean"
              },
              "isCrossRepository": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "repository": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "scmRepositories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "ScmPullRequestsResponse": {
        "type": "object",
        "title": "ScmPullRequestsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScmPullRequest"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScmRepository"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ScmPullRequestResponse": {
        "type": "object",
        "title": "ScmPullRequestResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ScmPullRequest"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScmRepository"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ScmRepository": {
        "type": "object",
        "title": "ScmRepository",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "scmRepositories"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "lastAccessedDate": {
                "type": "string",
                "format": "date-time"
              },
              "httpCloneUrl": {
                "type": "string",
                "format": "uri"
              },
              "sshCloneUrl": {
                "type": "string",
                "format": "uri"
              },
              "ownerName": {
                "type": "string"
              },
              "repositoryName": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "scmProvider": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "scmProviders"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "defaultBranch": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "scmGitReferences"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "gitReferences": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "pullRequests": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "ScmRepositoriesResponse": {
        "type": "object",
        "title": "ScmRepositoriesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScmRepository"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ScmProvider"
                },
                {
                  "$ref": "#/components/schemas/ScmGitReference"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ScmRepositoryResponse": {
        "type": "object",
        "title": "ScmRepositoryResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ScmRepository"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ScmProvider"
                },
                {
                  "$ref": "#/components/schemas/ScmGitReference"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionAppStoreReviewScreenshot": {
        "type": "object",
        "title": "SubscriptionAppStoreReviewScreenshot",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionAppStoreReviewScreenshots"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "sourceFileChecksum": {
                "type": "string"
              },
              "imageAsset": {
                "$ref": "#/components/schemas/ImageAsset"
              },
              "assetToken": {
                "type": "string"
              },
              "assetType": {
                "type": "string"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState": {
                "$ref": "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "subscription": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionAppStoreReviewScreenshotResponse": {
        "type": "object",
        "title": "SubscriptionAppStoreReviewScreenshotResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionAppStoreReviewScreenshot"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionAppStoreReviewScreenshotCreateRequest": {
        "type": "object",
        "title": "SubscriptionAppStoreReviewScreenshotCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionAppStoreReviewScreenshots"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "fileSize"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscription": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "subscription"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionAppStoreReviewScreenshotUpdateRequest": {
        "type": "object",
        "title": "SubscriptionAppStoreReviewScreenshotUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionAppStoreReviewScreenshots"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "sourceFileChecksum": {
                    "type": "string"
                  },
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionAvailability": {
        "type": "object",
        "title": "SubscriptionAvailability",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionAvailabilities"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "availableInNewTerritories": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "availableTerritories": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "territories"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionAvailabilityResponse": {
        "type": "object",
        "title": "SubscriptionAvailabilityResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionAvailability"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Territory"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionAvailabilityCreateRequest": {
        "type": "object",
        "title": "SubscriptionAvailabilityCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionAvailabilities"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "availableInNewTerritories": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "availableInNewTerritories"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscription": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "availableTerritories": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "territories"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "subscription",
                  "availableTerritories"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionGracePeriod": {
        "type": "object",
        "title": "SubscriptionGracePeriod",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionGracePeriods"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "optIn": {
                "type": "boolean"
              },
              "sandboxOptIn": {
                "type": "boolean"
              },
              "duration": {
                "$ref": "#/components/schemas/SubscriptionGracePeriodDuration"
              },
              "renewalType": {
                "type": "string",
                "enum": [
                  "ALL_RENEWALS",
                  "PAID_TO_PAID_ONLY"
                ]
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionGracePeriodResponse": {
        "type": "object",
        "title": "SubscriptionGracePeriodResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionGracePeriod"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionGracePeriodUpdateRequest": {
        "type": "object",
        "title": "SubscriptionGracePeriodUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionGracePeriods"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "optIn": {
                    "type": "boolean"
                  },
                  "sandboxOptIn": {
                    "type": "boolean"
                  },
                  "duration": {
                    "$ref": "#/components/schemas/SubscriptionGracePeriodDuration"
                  },
                  "renewalType": {
                    "type": "string",
                    "enum": [
                      "ALL_RENEWALS",
                      "PAID_TO_PAID_ONLY"
                    ]
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionGroupLocalization": {
        "type": "object",
        "title": "SubscriptionGroupLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionGroupLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "customAppName": {
                "type": "string"
              },
              "locale": {
                "type": "string"
              },
              "state": {
                "type": "string",
                "enum": [
                  "PREPARE_FOR_SUBMISSION",
                  "WAITING_FOR_REVIEW",
                  "APPROVED",
                  "REJECTED"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "subscriptionGroup": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptionGroups"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionGroupLocalizationsResponse": {
        "type": "object",
        "title": "SubscriptionGroupLocalizationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionGroupLocalization"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionGroup"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionGroupLocalizationResponse": {
        "type": "object",
        "title": "SubscriptionGroupLocalizationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionGroupLocalization"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionGroup"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionGroupLocalizationCreateRequest": {
        "type": "object",
        "title": "SubscriptionGroupLocalizationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionGroupLocalizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "customAppName": {
                    "type": "string"
                  },
                  "locale": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "locale"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscriptionGroup": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptionGroups"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "subscriptionGroup"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionGroupLocalizationUpdateRequest": {
        "type": "object",
        "title": "SubscriptionGroupLocalizationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionGroupLocalizations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "customAppName": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionGroupSubmission": {
        "type": "object",
        "title": "SubscriptionGroupSubmission",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionGroupSubmissions"
            ]
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionGroupSubmissionResponse": {
        "type": "object",
        "title": "SubscriptionGroupSubmissionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionGroupSubmission"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionGroupSubmissionCreateRequest": {
        "type": "object",
        "title": "SubscriptionGroupSubmissionCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionGroupSubmissions"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscriptionGroup": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptionGroups"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "subscriptionGroup"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionGroup": {
        "type": "object",
        "title": "SubscriptionGroup",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionGroups"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "referenceName": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "subscriptions": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "subscriptions"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "subscriptionGroupLocalizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "subscriptionGroupLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionGroupsResponse": {
        "type": "object",
        "title": "SubscriptionGroupsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionGroup"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Subscription"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionGroupLocalization"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionGroupResponse": {
        "type": "object",
        "title": "SubscriptionGroupResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionGroup"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Subscription"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionGroupLocalization"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionGroupCreateRequest": {
        "type": "object",
        "title": "SubscriptionGroupCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionGroups"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "referenceName": {
                    "type": "string"
                  }
                },
                "required": [
                  "referenceName"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "app": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "apps"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "app"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionGroupUpdateRequest": {
        "type": "object",
        "title": "SubscriptionGroupUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionGroups"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "referenceName": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionImage": {
        "type": "object",
        "title": "SubscriptionImage",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionImages"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "fileSize": {
                "type": "integer"
              },
              "fileName": {
                "type": "string"
              },
              "sourceFileChecksum": {
                "type": "string"
              },
              "assetToken": {
                "type": "string"
              },
              "imageAsset": {
                "$ref": "#/components/schemas/ImageAsset"
              },
              "uploadOperations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UploadOperation"
                }
              },
              "state": {
                "type": "string",
                "enum": [
                  "AWAITING_UPLOAD",
                  "UPLOAD_COMPLETE",
                  "FAILED",
                  "PREPARE_FOR_SUBMISSION",
                  "WAITING_FOR_REVIEW",
                  "APPROVED",
                  "REJECTED"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "subscription": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionImagesResponse": {
        "type": "object",
        "title": "SubscriptionImagesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionImage"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionImageResponse": {
        "type": "object",
        "title": "SubscriptionImageResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionImage"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionImageCreateRequest": {
        "type": "object",
        "title": "SubscriptionImageCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionImages"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "fileSize": {
                    "type": "integer"
                  },
                  "fileName": {
                    "type": "string"
                  }
                },
                "required": [
                  "fileName",
                  "fileSize"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscription": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "subscription"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionImageUpdateRequest": {
        "type": "object",
        "title": "SubscriptionImageUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionImages"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "sourceFileChecksum": {
                    "type": "string"
                  },
                  "uploaded": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionIntroductoryOffer": {
        "type": "object",
        "title": "SubscriptionIntroductoryOffer",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionIntroductoryOffers"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "startDate": {
                "type": "string",
                "format": "date"
              },
              "endDate": {
                "type": "string",
                "format": "date"
              },
              "duration": {
                "$ref": "#/components/schemas/SubscriptionOfferDuration"
              },
              "offerMode": {
                "$ref": "#/components/schemas/SubscriptionOfferMode"
              },
              "numberOfPeriods": {
                "type": "integer"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "subscription": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "territory": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "subscriptionPricePoint": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptionPricePoints"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionIntroductoryOfferInlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionIntroductoryOffers"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "startDate": {
                "type": "string",
                "format": "date"
              },
              "endDate": {
                "type": "string",
                "format": "date"
              },
              "duration": {
                "$ref": "#/components/schemas/SubscriptionOfferDuration"
              },
              "offerMode": {
                "$ref": "#/components/schemas/SubscriptionOfferMode"
              },
              "numberOfPeriods": {
                "type": "integer"
              }
            },
            "required": [
              "duration",
              "numberOfPeriods",
              "offerMode"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "subscription": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "territory": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "subscriptionPricePoint": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptionPricePoints"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "attributes",
          "type"
        ]
      },
      "SubscriptionIntroductoryOffersResponse": {
        "type": "object",
        "title": "SubscriptionIntroductoryOffersResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionIntroductoryOffer"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Subscription"
                },
                {
                  "$ref": "#/components/schemas/Territory"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionPricePoint"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionIntroductoryOfferResponse": {
        "type": "object",
        "title": "SubscriptionIntroductoryOfferResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionIntroductoryOffer"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Subscription"
                },
                {
                  "$ref": "#/components/schemas/Territory"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionPricePoint"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionIntroductoryOfferCreateRequest": {
        "type": "object",
        "title": "SubscriptionIntroductoryOfferCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionIntroductoryOffers"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "duration": {
                    "$ref": "#/components/schemas/SubscriptionOfferDuration"
                  },
                  "offerMode": {
                    "$ref": "#/components/schemas/SubscriptionOfferMode"
                  },
                  "numberOfPeriods": {
                    "type": "integer"
                  }
                },
                "required": [
                  "duration",
                  "numberOfPeriods",
                  "offerMode"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscription": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "territory": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "territories"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "subscriptionPricePoint": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptionPricePoints"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "subscription"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionPricePointInlineCreate"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionIntroductoryOfferUpdateRequest": {
        "type": "object",
        "title": "SubscriptionIntroductoryOfferUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionIntroductoryOffers"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionLocalization": {
        "type": "object",
        "title": "SubscriptionLocalization",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionLocalizations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "locale": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "state": {
                "type": "string",
                "enum": [
                  "PREPARE_FOR_SUBMISSION",
                  "WAITING_FOR_REVIEW",
                  "APPROVED",
                  "REJECTED"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "subscription": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionLocalizationsResponse": {
        "type": "object",
        "title": "SubscriptionLocalizationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionLocalization"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionLocalizationResponse": {
        "type": "object",
        "title": "SubscriptionLocalizationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionLocalization"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionLocalizationCreateRequest": {
        "type": "object",
        "title": "SubscriptionLocalizationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionLocalizations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "locale": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "locale"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscription": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "subscription"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionLocalizationUpdateRequest": {
        "type": "object",
        "title": "SubscriptionLocalizationUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionLocalizations"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionOfferCodeCustomCode": {
        "type": "object",
        "title": "SubscriptionOfferCodeCustomCode",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionOfferCodeCustomCodes"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "customCode": {
                "type": "string"
              },
              "numberOfCodes": {
                "type": "integer"
              },
              "createdDate": {
                "type": "string",
                "format": "date-time"
              },
              "expirationDate": {
                "type": "string",
                "format": "date"
              },
              "active": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "offerCode": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptionOfferCodes"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionOfferCodeCustomCodesResponse": {
        "type": "object",
        "title": "SubscriptionOfferCodeCustomCodesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionOfferCodeCustomCode"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionOfferCode"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionOfferCodeCustomCodeResponse": {
        "type": "object",
        "title": "SubscriptionOfferCodeCustomCodeResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionOfferCodeCustomCode"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionOfferCode"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionOfferCodeCustomCodeCreateRequest": {
        "type": "object",
        "title": "SubscriptionOfferCodeCustomCodeCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionOfferCodeCustomCodes"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "customCode": {
                    "type": "string"
                  },
                  "numberOfCodes": {
                    "type": "integer"
                  },
                  "expirationDate": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "required": [
                  "numberOfCodes",
                  "customCode"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "offerCode": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptionOfferCodes"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "offerCode"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionOfferCodeCustomCodeUpdateRequest": {
        "type": "object",
        "title": "SubscriptionOfferCodeCustomCodeUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionOfferCodeCustomCodes"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionOfferCodeOneTimeUseCodeValue": {
        "type": "object",
        "title": "SubscriptionOfferCodeOneTimeUseCodeValue",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionOfferCodeOneTimeUseCodeValues"
            ]
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionOfferCodeOneTimeUseCode": {
        "type": "object",
        "title": "SubscriptionOfferCodeOneTimeUseCode",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionOfferCodeOneTimeUseCodes"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "numberOfCodes": {
                "type": "integer"
              },
              "createdDate": {
                "type": "string",
                "format": "date-time"
              },
              "expirationDate": {
                "type": "string",
                "format": "date"
              },
              "active": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "offerCode": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptionOfferCodes"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "values": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionOfferCodeOneTimeUseCodesResponse": {
        "type": "object",
        "title": "SubscriptionOfferCodeOneTimeUseCodesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionOfferCodeOneTimeUseCode"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionOfferCode"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionOfferCodeOneTimeUseCodeResponse": {
        "type": "object",
        "title": "SubscriptionOfferCodeOneTimeUseCodeResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionOfferCodeOneTimeUseCode"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionOfferCode"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionOfferCodeOneTimeUseCodeCreateRequest": {
        "type": "object",
        "title": "SubscriptionOfferCodeOneTimeUseCodeCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionOfferCodeOneTimeUseCodes"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "numberOfCodes": {
                    "type": "integer"
                  },
                  "expirationDate": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "required": [
                  "numberOfCodes",
                  "expirationDate"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "offerCode": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptionOfferCodes"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "offerCode"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionOfferCodeOneTimeUseCodeUpdateRequest": {
        "type": "object",
        "title": "SubscriptionOfferCodeOneTimeUseCodeUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionOfferCodeOneTimeUseCodes"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionOfferCodePrice": {
        "type": "object",
        "title": "SubscriptionOfferCodePrice",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionOfferCodePrices"
            ]
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "territory": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "subscriptionPricePoint": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptionPricePoints"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionOfferCodePriceInlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionOfferCodePrices"
            ]
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "territory": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "subscriptionPricePoint": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptionPricePoints"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "SubscriptionOfferCodePricesResponse": {
        "type": "object",
        "title": "SubscriptionOfferCodePricesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionOfferCodePrice"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Territory"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionPricePoint"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionOfferCode": {
        "type": "object",
        "title": "SubscriptionOfferCode",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionOfferCodes"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "customerEligibilities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriptionCustomerEligibility"
                }
              },
              "offerEligibility": {
                "$ref": "#/components/schemas/SubscriptionOfferEligibility"
              },
              "duration": {
                "$ref": "#/components/schemas/SubscriptionOfferDuration"
              },
              "offerMode": {
                "$ref": "#/components/schemas/SubscriptionOfferMode"
              },
              "numberOfPeriods": {
                "type": "integer"
              },
              "totalNumberOfCodes": {
                "type": "integer"
              },
              "active": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "subscription": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "oneTimeUseCodes": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "subscriptionOfferCodeOneTimeUseCodes"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "customCodes": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "subscriptionOfferCodeCustomCodes"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "prices": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "subscriptionOfferCodePrices"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionOfferCodesResponse": {
        "type": "object",
        "title": "SubscriptionOfferCodesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionOfferCode"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Subscription"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionOfferCodeOneTimeUseCode"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionOfferCodeCustomCode"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionOfferCodePrice"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionOfferCodeResponse": {
        "type": "object",
        "title": "SubscriptionOfferCodeResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionOfferCode"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Subscription"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionOfferCodeOneTimeUseCode"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionOfferCodeCustomCode"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionOfferCodePrice"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionOfferCodeCreateRequest": {
        "type": "object",
        "title": "SubscriptionOfferCodeCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionOfferCodes"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "customerEligibilities": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SubscriptionCustomerEligibility"
                    }
                  },
                  "offerEligibility": {
                    "$ref": "#/components/schemas/SubscriptionOfferEligibility"
                  },
                  "duration": {
                    "$ref": "#/components/schemas/SubscriptionOfferDuration"
                  },
                  "offerMode": {
                    "$ref": "#/components/schemas/SubscriptionOfferMode"
                  },
                  "numberOfPeriods": {
                    "type": "integer"
                  }
                },
                "required": [
                  "duration",
                  "offerEligibility",
                  "name",
                  "numberOfPeriods",
                  "offerMode",
                  "customerEligibilities"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscription": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "prices": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "subscriptionOfferCodePrices"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "subscription",
                  "prices"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionOfferCodePriceInlineCreate"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionOfferCodeUpdateRequest": {
        "type": "object",
        "title": "SubscriptionOfferCodeUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionOfferCodes"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionPricePoint": {
        "type": "object",
        "title": "SubscriptionPricePoint",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionPricePoints"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "customerPrice": {
                "type": "string"
              },
              "proceeds": {
                "type": "string"
              },
              "proceedsYear2": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "territory": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "equalizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionPricePointInlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionPricePoints"
            ]
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "SubscriptionPricePointsResponse": {
        "type": "object",
        "title": "SubscriptionPricePointsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionPricePoint"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Territory"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionPricePointResponse": {
        "type": "object",
        "title": "SubscriptionPricePointResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionPricePoint"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Territory"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionPrice": {
        "type": "object",
        "title": "SubscriptionPrice",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionPrices"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "startDate": {
                "type": "string",
                "format": "date"
              },
              "preserved": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "territory": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "subscriptionPricePoint": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptionPricePoints"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionPriceInlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionPrices"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "startDate": {
                "type": "string",
                "format": "date"
              },
              "preserveCurrentPrice": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "subscription": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "territory": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "subscriptionPricePoint": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptionPricePoints"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "SubscriptionPricesResponse": {
        "type": "object",
        "title": "SubscriptionPricesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionPrice"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Territory"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionPricePoint"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionPriceResponse": {
        "type": "object",
        "title": "SubscriptionPriceResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionPrice"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Territory"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionPricePoint"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionPriceCreateRequest": {
        "type": "object",
        "title": "SubscriptionPriceCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionPrices"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "preserveCurrentPrice": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscription": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "territory": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "territories"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "subscriptionPricePoint": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptionPricePoints"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "subscription",
                  "subscriptionPricePoint"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionPromotionalOfferPrice": {
        "type": "object",
        "title": "SubscriptionPromotionalOfferPrice",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionPromotionalOfferPrices"
            ]
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "territory": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "subscriptionPricePoint": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptionPricePoints"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionPromotionalOfferPriceInlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionPromotionalOfferPrices"
            ]
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "territory": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "subscriptionPricePoint": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptionPricePoints"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "SubscriptionPromotionalOfferPricesResponse": {
        "type": "object",
        "title": "SubscriptionPromotionalOfferPricesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionPromotionalOfferPrice"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Territory"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionPricePoint"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionPromotionalOffer": {
        "type": "object",
        "title": "SubscriptionPromotionalOffer",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionPromotionalOffers"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "offerCode": {
                "type": "string"
              },
              "duration": {
                "$ref": "#/components/schemas/SubscriptionOfferDuration"
              },
              "offerMode": {
                "$ref": "#/components/schemas/SubscriptionOfferMode"
              },
              "numberOfPeriods": {
                "type": "integer"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "subscription": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "prices": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "subscriptionPromotionalOfferPrices"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionPromotionalOfferInlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionPromotionalOffers"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "offerCode": {
                "type": "string"
              },
              "duration": {
                "$ref": "#/components/schemas/SubscriptionOfferDuration"
              },
              "offerMode": {
                "$ref": "#/components/schemas/SubscriptionOfferMode"
              },
              "numberOfPeriods": {
                "type": "integer"
              }
            },
            "required": [
              "duration",
              "offerCode",
              "name",
              "numberOfPeriods",
              "offerMode"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "subscription": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "prices": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "subscriptionPromotionalOfferPrices"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "attributes",
          "type"
        ]
      },
      "SubscriptionPromotionalOffersResponse": {
        "type": "object",
        "title": "SubscriptionPromotionalOffersResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionPromotionalOffer"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Subscription"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionPromotionalOfferPrice"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionPromotionalOfferResponse": {
        "type": "object",
        "title": "SubscriptionPromotionalOfferResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionPromotionalOffer"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Subscription"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionPromotionalOfferPrice"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionPromotionalOfferCreateRequest": {
        "type": "object",
        "title": "SubscriptionPromotionalOfferCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionPromotionalOffers"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "offerCode": {
                    "type": "string"
                  },
                  "duration": {
                    "$ref": "#/components/schemas/SubscriptionOfferDuration"
                  },
                  "offerMode": {
                    "$ref": "#/components/schemas/SubscriptionOfferMode"
                  },
                  "numberOfPeriods": {
                    "type": "integer"
                  }
                },
                "required": [
                  "duration",
                  "offerCode",
                  "name",
                  "numberOfPeriods",
                  "offerMode"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscription": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "prices": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "subscriptionPromotionalOfferPrices"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "subscription",
                  "prices"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionPromotionalOfferPriceInlineCreate"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionPromotionalOfferUpdateRequest": {
        "type": "object",
        "title": "SubscriptionPromotionalOfferUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionPromotionalOffers"
                ]
              },
              "id": {
                "type": "string"
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "prices": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "subscriptionPromotionalOfferPrices"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionPromotionalOfferPriceInlineCreate"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionSubmission": {
        "type": "object",
        "title": "SubscriptionSubmission",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptionSubmissions"
            ]
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "subscription": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptions"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionSubmissionResponse": {
        "type": "object",
        "title": "SubscriptionSubmissionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionSubmission"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionSubmissionCreateRequest": {
        "type": "object",
        "title": "SubscriptionSubmissionCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptionSubmissions"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscription": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "subscription"
                ]
              }
            },
            "required": [
              "relationships",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "Subscription": {
        "type": "object",
        "title": "Subscription",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscriptions"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "productId": {
                "type": "string"
              },
              "familySharable": {
                "type": "boolean"
              },
              "state": {
                "type": "string",
                "enum": [
                  "MISSING_METADATA",
                  "READY_TO_SUBMIT",
                  "WAITING_FOR_REVIEW",
                  "IN_REVIEW",
                  "DEVELOPER_ACTION_NEEDED",
                  "PENDING_BINARY_APPROVAL",
                  "APPROVED",
                  "DEVELOPER_REMOVED_FROM_SALE",
                  "REMOVED_FROM_SALE",
                  "REJECTED"
                ]
              },
              "subscriptionPeriod": {
                "type": "string",
                "enum": [
                  "ONE_WEEK",
                  "ONE_MONTH",
                  "TWO_MONTHS",
                  "THREE_MONTHS",
                  "SIX_MONTHS",
                  "ONE_YEAR"
                ]
              },
              "reviewNote": {
                "type": "string"
              },
              "groupLevel": {
                "type": "integer"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "subscriptionLocalizations": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "subscriptionLocalizations"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "appStoreReviewScreenshot": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptionAppStoreReviewScreenshots"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "group": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptionGroups"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "introductoryOffers": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "subscriptionIntroductoryOffers"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "promotionalOffers": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "subscriptionPromotionalOffers"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "offerCodes": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "subscriptionOfferCodes"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "prices": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "subscriptionPrices"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "pricePoints": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  }
                }
              },
              "promotedPurchase": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "promotedPurchases"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "subscriptionAvailability": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptionAvailabilities"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "winBackOffers": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "winBackOffers"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              },
              "images": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "subscriptionImages"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SubscriptionsResponse": {
        "type": "object",
        "title": "SubscriptionsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SubscriptionLocalization"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionAppStoreReviewScreenshot"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionGroup"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionIntroductoryOffer"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionPromotionalOffer"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionOfferCode"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionPrice"
                },
                {
                  "$ref": "#/components/schemas/PromotedPurchase"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionAvailability"
                },
                {
                  "$ref": "#/components/schemas/WinBackOffer"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionImage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionResponse": {
        "type": "object",
        "title": "SubscriptionResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Subscription"
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SubscriptionLocalization"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionAppStoreReviewScreenshot"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionGroup"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionIntroductoryOffer"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionPromotionalOffer"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionOfferCode"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionPrice"
                },
                {
                  "$ref": "#/components/schemas/PromotedPurchase"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionAvailability"
                },
                {
                  "$ref": "#/components/schemas/WinBackOffer"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionImage"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionCreateRequest": {
        "type": "object",
        "title": "SubscriptionCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptions"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "productId": {
                    "type": "string"
                  },
                  "familySharable": {
                    "type": "boolean"
                  },
                  "subscriptionPeriod": {
                    "type": "string",
                    "enum": [
                      "ONE_WEEK",
                      "ONE_MONTH",
                      "TWO_MONTHS",
                      "THREE_MONTHS",
                      "SIX_MONTHS",
                      "ONE_YEAR"
                    ]
                  },
                  "reviewNote": {
                    "type": "string"
                  },
                  "groupLevel": {
                    "type": "integer"
                  }
                },
                "required": [
                  "productId",
                  "name"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "group": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptionGroups"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "group"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionUpdateRequest": {
        "type": "object",
        "title": "SubscriptionUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "subscriptions"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "familySharable": {
                    "type": "boolean"
                  },
                  "subscriptionPeriod": {
                    "type": "string",
                    "enum": [
                      "ONE_WEEK",
                      "ONE_MONTH",
                      "TWO_MONTHS",
                      "THREE_MONTHS",
                      "SIX_MONTHS",
                      "ONE_YEAR"
                    ]
                  },
                  "reviewNote": {
                    "type": "string"
                  },
                  "groupLevel": {
                    "type": "integer"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "introductoryOffers": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "subscriptionIntroductoryOffers"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  },
                  "promotionalOffers": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "subscriptionPromotionalOffers"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  },
                  "prices": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "subscriptionPrices"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SubscriptionPromotionalOfferInlineCreate"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionPriceInlineCreate"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionIntroductoryOfferInlineCreate"
                }
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "Territory": {
        "type": "object",
        "title": "Territory",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "territories"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "TerritoryInlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "territories"
            ]
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "TerritoriesResponse": {
        "type": "object",
        "title": "TerritoriesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Territory"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "TerritoryResponse": {
        "type": "object",
        "title": "TerritoryResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Territory"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "TerritoryAvailability": {
        "type": "object",
        "title": "TerritoryAvailability",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "territoryAvailabilities"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "available": {
                "type": "boolean"
              },
              "releaseDate": {
                "type": "string",
                "format": "date"
              },
              "preOrderEnabled": {
                "type": "boolean"
              },
              "preOrderPublishDate": {
                "type": "string",
                "format": "date"
              },
              "contentStatuses": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "AVAILABLE",
                    "AVAILABLE_FOR_PREORDER_ON_DATE",
                    "PROCESSING_TO_NOT_AVAILABLE",
                    "PROCESSING_TO_AVAILABLE",
                    "PROCESSING_TO_PRE_ORDER",
                    "AVAILABLE_FOR_SALE_UNRELEASED_APP",
                    "PREORDER_ON_UNRELEASED_APP",
                    "AVAILABLE_FOR_PREORDER",
                    "MISSING_RATING",
                    "CANNOT_SELL_RESTRICTED_RATING",
                    "BRAZIL_REQUIRED_TAX_ID",
                    "MISSING_GRN",
                    "UNVERIFIED_GRN",
                    "ICP_NUMBER_INVALID",
                    "ICP_NUMBER_MISSING",
                    "CANNOT_SELL_SEVENTEEN_PLUS_APPS",
                    "CANNOT_SELL_SEXUALLY_EXPLICIT",
                    "CANNOT_SELL_NON_IOS_GAMES",
                    "CANNOT_SELL_SEVENTEEN_PLUS_GAMES",
                    "CANNOT_SELL_FREQUENT_INTENSE_GAMBLING",
                    "CANNOT_SELL_CASINO",
                    "CANNOT_SELL_CASINO_WITHOUT_GRAC",
                    "CANNOT_SELL_CASINO_WITHOUT_AGE_VERIFICATION",
                    "CANNOT_SELL_FREQUENT_INTENSE_ALCOHOL_TOBACCO_DRUGS",
                    "CANNOT_SELL_FREQUENT_INTENSE_VIOLENCE",
                    "CANNOT_SELL_FREQUENT_INTENSE_SEXUAL_CONTENT_NUDITY",
                    "CANNOT_SELL_INFREQUENT_MILD_ALCOHOL_TOBACCO_DRUGS",
                    "CANNOT_SELL_INFREQUENT_MILD_SEXUAL_CONTENT_NUDITY",
                    "CANNOT_SELL_ADULT_ONLY",
                    "CANNOT_SELL_FREQUENT_INTENSE",
                    "CANNOT_SELL_FREQUENT_INTENSE_WITHOUT_GRAC",
                    "CANNOT_SELL_GAMBLING_CONTESTS",
                    "CANNOT_SELL_GAMBLING",
                    "CANNOT_SELL_CONTESTS",
                    "CANNOT_SELL"
                  ]
                }
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "territory": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "TerritoryAvailabilityInlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "territoryAvailabilities"
            ]
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "TerritoryAvailabilitiesResponse": {
        "type": "object",
        "title": "TerritoryAvailabilitiesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TerritoryAvailability"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Territory"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "TerritoryAvailabilityResponse": {
        "type": "object",
        "title": "TerritoryAvailabilityResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TerritoryAvailability"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Territory"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "TerritoryAvailabilityUpdateRequest": {
        "type": "object",
        "title": "TerritoryAvailabilityUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "territoryAvailabilities"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "available": {
                    "type": "boolean"
                  },
                  "releaseDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "preOrderEnabled": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserInvitation": {
        "type": "object",
        "title": "UserInvitation",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "userInvitations"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "expirationDate": {
                "type": "string",
                "format": "date-time"
              },
              "roles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserRole"
                }
              },
              "allAppsVisible": {
                "type": "boolean"
              },
              "provisioningAllowed": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "visibleApps": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "apps"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "UserInvitationsResponse": {
        "type": "object",
        "title": "UserInvitationsResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInvitation"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "UserInvitationResponse": {
        "type": "object",
        "title": "UserInvitationResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UserInvitation"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "UserInvitationCreateRequest": {
        "type": "object",
        "title": "UserInvitationCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "userInvitations"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserRole"
                    }
                  },
                  "allAppsVisible": {
                    "type": "boolean"
                  },
                  "provisioningAllowed": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "roles",
                  "email"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "visibleApps": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "apps"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "attributes",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "User": {
        "type": "object",
        "title": "User",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "users"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "roles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserRole"
                }
              },
              "allAppsVisible": {
                "type": "boolean"
              },
              "provisioningAllowed": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "visibleApps": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "apps"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "UsersResponse": {
        "type": "object",
        "title": "UsersResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "UserResponse": {
        "type": "object",
        "title": "UserResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/User"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "UserUpdateRequest": {
        "type": "object",
        "title": "UserUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "users"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "roles": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UserRole"
                    }
                  },
                  "allAppsVisible": {
                    "type": "boolean"
                  },
                  "provisioningAllowed": {
                    "type": "boolean"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "visibleApps": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "apps"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "WinBackOfferPrice": {
        "type": "object",
        "title": "WinBackOfferPrice",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "winBackOfferPrices"
            ]
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "territory": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "territories"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              },
              "subscriptionPricePoint": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "subscriptionPricePoints"
                        ]
                      },
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "WinBackOfferPriceInlineCreate": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "winBackOfferPrices"
            ]
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "WinBackOfferPricesResponse": {
        "type": "object",
        "title": "WinBackOfferPricesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WinBackOfferPrice"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Territory"
                },
                {
                  "$ref": "#/components/schemas/SubscriptionPricePoint"
                }
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "WinBackOffer": {
        "type": "object",
        "title": "WinBackOffer",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "winBackOffers"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "referenceName": {
                "type": "string"
              },
              "offerId": {
                "type": "string"
              },
              "duration": {
                "$ref": "#/components/schemas/SubscriptionOfferDuration"
              },
              "offerMode": {
                "$ref": "#/components/schemas/SubscriptionOfferMode"
              },
              "periodCount": {
                "type": "integer"
              },
              "customerEligibilityPaidSubscriptionDurationInMonths": {
                "type": "integer"
              },
              "customerEligibilityTimeSinceLastSubscribedInMonths": {
                "$ref": "#/components/schemas/IntegerRange"
              },
              "customerEligibilityWaitBetweenOffersInMonths": {
                "type": "integer"
              },
              "startDate": {
                "type": "string",
                "format": "date"
              },
              "endDate": {
                "type": "string",
                "format": "date"
              },
              "priority": {
                "type": "string",
                "enum": [
                  "HIGH",
                  "NORMAL"
                ]
              },
              "promotionIntent": {
                "type": "string",
                "enum": [
                  "NOT_PROMOTED",
                  "USE_AUTO_GENERATED_ASSETS"
                ]
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "prices": {
                "type": "object",
                "properties": {
                  "links": {
                    "$ref": "#/components/schemas/RelationshipLinks"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/PagingInformation"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "winBackOfferPrices"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/ResourceLinks"
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "WinBackOffersResponse": {
        "type": "object",
        "title": "WinBackOffersResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WinBackOffer"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WinBackOfferPrice"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "WinBackOfferResponse": {
        "type": "object",
        "title": "WinBackOfferResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WinBackOffer"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WinBackOfferPrice"
            }
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "WinBackOfferCreateRequest": {
        "type": "object",
        "title": "WinBackOfferCreateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "winBackOffers"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "referenceName": {
                    "type": "string"
                  },
                  "offerId": {
                    "type": "string"
                  },
                  "duration": {
                    "$ref": "#/components/schemas/SubscriptionOfferDuration"
                  },
                  "offerMode": {
                    "$ref": "#/components/schemas/SubscriptionOfferMode"
                  },
                  "periodCount": {
                    "type": "integer"
                  },
                  "customerEligibilityPaidSubscriptionDurationInMonths": {
                    "type": "integer"
                  },
                  "customerEligibilityTimeSinceLastSubscribedInMonths": {
                    "$ref": "#/components/schemas/IntegerRange"
                  },
                  "customerEligibilityWaitBetweenOffersInMonths": {
                    "type": "integer"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "HIGH",
                      "NORMAL"
                    ]
                  },
                  "promotionIntent": {
                    "type": "string",
                    "enum": [
                      "NOT_PROMOTED",
                      "USE_AUTO_GENERATED_ASSETS"
                    ]
                  }
                },
                "required": [
                  "duration",
                  "customerEligibilityTimeSinceLastSubscribedInMonths",
                  "periodCount",
                  "offerId",
                  "offerMode",
                  "priority",
                  "customerEligibilityPaidSubscriptionDurationInMonths",
                  "startDate",
                  "referenceName"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "subscription": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "subscriptions"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "data"
                    ]
                  },
                  "prices": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "winBackOfferPrices"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "data"
                    ]
                  }
                },
                "required": [
                  "subscription",
                  "prices"
                ]
              }
            },
            "required": [
              "relationships",
              "attributes",
              "type"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WinBackOfferPriceInlineCreate"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "WinBackOfferUpdateRequest": {
        "type": "object",
        "title": "WinBackOfferUpdateRequest",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "winBackOffers"
                ]
              },
              "id": {
                "type": "string"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "customerEligibilityPaidSubscriptionDurationInMonths": {
                    "type": "integer"
                  },
                  "customerEligibilityTimeSinceLastSubscribedInMonths": {
                    "$ref": "#/components/schemas/IntegerRange"
                  },
                  "customerEligibilityWaitBetweenOffersInMonths": {
                    "type": "integer"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "HIGH",
                      "NORMAL"
                    ]
                  },
                  "promotionIntent": {
                    "type": "string",
                    "enum": [
                      "NOT_PROMOTED",
                      "USE_AUTO_GENERATED_ASSETS"
                    ]
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppCategoryWithoutIncludesResponse": {
        "type": "object",
        "title": "AppCategoryWithoutIncludesResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppCategory"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppCategoriesWithoutIncludesResponse": {
        "type": "object",
        "title": "AppCategoriesWithoutIncludesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppCategory"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppClipDefaultExperienceReleaseWithAppStoreVersionLinkageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersions"
                ]
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppClipDefaultExperienceReleaseWithAppStoreVersionLinkageRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appStoreVersions"
                ]
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppWithoutIncludesResponse": {
        "type": "object",
        "title": "AppWithoutIncludesResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/App"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppEncryptionDeclarationBuildsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "builds"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ],
        "deprecated": true
      },
      "AppPreviewSetAppPreviewsLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "appPreviews"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppPreviewSetAppPreviewsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "appPreviews"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AppScreenshotSetAppScreenshotsLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "appScreenshots"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppScreenshotSetAppScreenshotsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "appScreenshots"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AgeRatingDeclarationWithoutIncludesResponse": {
        "type": "object",
        "title": "AgeRatingDeclarationWithoutIncludesResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AgeRatingDeclaration"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionAppClipDefaultExperienceLinkageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appClipDefaultExperiences"
                ]
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionAppClipDefaultExperienceLinkageRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appClipDefaultExperiences"
                ]
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "AppStoreVersionPhasedReleaseWithoutIncludesResponse": {
        "type": "object",
        "title": "AppStoreVersionPhasedReleaseWithoutIncludesResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppStoreVersionPhasedRelease"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BuildWithoutIncludesResponse": {
        "type": "object",
        "title": "BuildWithoutIncludesResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Build"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionBuildLinkageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "builds"
                ]
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppStoreVersionBuildLinkageRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "builds"
                ]
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "RoutingAppCoverageWithoutIncludesResponse": {
        "type": "object",
        "title": "RoutingAppCoverageWithoutIncludesResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RoutingAppCoverage"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaAppLocalizationsWithoutIncludesResponse": {
        "type": "object",
        "title": "BetaAppLocalizationsWithoutIncludesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BetaAppLocalization"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaAppReviewDetailWithoutIncludesResponse": {
        "type": "object",
        "title": "BetaAppReviewDetailWithoutIncludesResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BetaAppReviewDetail"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaGroupsWithoutIncludesResponse": {
        "type": "object",
        "title": "BetaGroupsWithoutIncludesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BetaGroup"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaLicenseAgreementWithoutIncludesResponse": {
        "type": "object",
        "title": "BetaLicenseAgreementWithoutIncludesResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BetaLicenseAgreement"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppBetaTestersLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "betaTesters"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BuildsWithoutIncludesResponse": {
        "type": "object",
        "title": "BuildsWithoutIncludesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Build"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "EndUserLicenseAgreementWithoutIncludesResponse": {
        "type": "object",
        "title": "EndUserLicenseAgreementWithoutIncludesResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EndUserLicenseAgreement"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "PreReleaseVersionsWithoutIncludesResponse": {
        "type": "object",
        "title": "PreReleaseVersionsWithoutIncludesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrereleaseVersion"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppPromotedPurchasesLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "promotedPurchases"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "AppPromotedPurchasesLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "promotedPurchases"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaTestersWithoutIncludesResponse": {
        "type": "object",
        "title": "BetaTestersWithoutIncludesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BetaTester"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaGroupBetaTestersLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "betaTesters"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaGroupBetaTestersLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "betaTesters"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaGroupBuildsLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "builds"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaGroupBuildsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "builds"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AppsWithoutIncludesResponse": {
        "type": "object",
        "title": "AppsWithoutIncludesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaTesterAppsLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "apps"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaTesterAppsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "apps"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaTesterBetaGroupsLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "betaGroups"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaTesterBetaGroupsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "betaGroups"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaTesterBuildsLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "builds"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaTesterBuildsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "builds"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AppEncryptionDeclarationWithoutIncludesResponse": {
        "type": "object",
        "title": "AppEncryptionDeclarationWithoutIncludesResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AppEncryptionDeclaration"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BuildAppEncryptionDeclarationLinkageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appEncryptionDeclarations"
                ]
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BuildAppEncryptionDeclarationLinkageRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "appEncryptionDeclarations"
                ]
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BetaAppReviewSubmissionWithoutIncludesResponse": {
        "type": "object",
        "title": "BetaAppReviewSubmissionWithoutIncludesResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BetaAppReviewSubmission"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaBuildLocalizationsWithoutIncludesResponse": {
        "type": "object",
        "title": "BetaBuildLocalizationsWithoutIncludesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BetaBuildLocalization"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BuildBetaGroupsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "betaGroups"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "BuildIconsWithoutIncludesResponse": {
        "type": "object",
        "title": "BuildIconsWithoutIncludesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildIcon"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BuildIndividualTestersLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "betaTesters"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BuildIndividualTestersLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "betaTesters"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PrereleaseVersionWithoutIncludesResponse": {
        "type": "object",
        "title": "PrereleaseVersionWithoutIncludesResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PrereleaseVersion"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BundleIdCapabilitiesWithoutIncludesResponse": {
        "type": "object",
        "title": "BundleIdCapabilitiesWithoutIncludesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BundleIdCapability"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ProfilesWithoutIncludesResponse": {
        "type": "object",
        "title": "ProfilesWithoutIncludesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Profile"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "TerritoriesWithoutIncludesResponse": {
        "type": "object",
        "title": "TerritoriesWithoutIncludesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Territory"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterAchievementGroupAchievementLinkageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterAchievements"
                ]
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "deprecated": true
      },
      "GameCenterAchievementGroupAchievementLinkageRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterAchievements"
                ]
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ],
        "deprecated": true
      },
      "GameCenterAppVersionCompatibilityVersionsLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterAppVersions"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterAppVersionCompatibilityVersionsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterAppVersions"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterDetailGameCenterAchievementsLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterAchievements"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterDetailGameCenterAchievementsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterAchievements"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterDetailGameCenterLeaderboardSetsLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterLeaderboardSets"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterDetailGameCenterLeaderboardSetsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterLeaderboardSets"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterDetailGameCenterLeaderboardsLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterLeaderboards"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterDetailGameCenterLeaderboardsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterLeaderboards"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterEnabledVersionCompatibleVersionsLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterEnabledVersions"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "deprecated": true
      },
      "GameCenterEnabledVersionCompatibleVersionsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterEnabledVersions"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ],
        "deprecated": true
      },
      "GameCenterGroupGameCenterAchievementsLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterAchievements"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterGroupGameCenterAchievementsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterAchievements"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterGroupGameCenterLeaderboardSetsLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterLeaderboardSets"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterGroupGameCenterLeaderboardSetsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterLeaderboardSets"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterGroupGameCenterLeaderboardsLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterLeaderboards"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterGroupGameCenterLeaderboardsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterLeaderboards"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardSetGameCenterLeaderboardsLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterLeaderboards"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterLeaderboardSetGameCenterLeaderboardsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gameCenterLeaderboards"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "GameCenterLeaderboardSetGroupLeaderboardSetLinkageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardSets"
                ]
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "deprecated": true
      },
      "GameCenterLeaderboardSetGroupLeaderboardSetLinkageRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboardSets"
                ]
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ],
        "deprecated": true
      },
      "GameCenterLeaderboardGroupLeaderboardLinkageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboards"
                ]
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ],
        "deprecated": true
      },
      "GameCenterLeaderboardGroupLeaderboardLinkageRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gameCenterLeaderboards"
                ]
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        },
        "required": [
          "data"
        ],
        "deprecated": true
      },
      "BundleIdWithoutIncludesResponse": {
        "type": "object",
        "title": "BundleIdWithoutIncludesResponse",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BundleId"
          },
          "links": {
            "$ref": "#/components/schemas/DocumentLinks"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "CertificatesWithoutIncludesResponse": {
        "type": "object",
        "title": "CertificatesWithoutIncludesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Certificate"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "DevicesWithoutIncludesResponse": {
        "type": "object",
        "title": "DevicesWithoutIncludesResponse",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Device"
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionIntroductoryOffersLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "subscriptionIntroductoryOffers"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionIntroductoryOffersLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "subscriptionIntroductoryOffers"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "SubscriptionPricesLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "subscriptionPrices"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "SubscriptionPricesLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "subscriptionPrices"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UserVisibleAppsLinkagesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "apps"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "UserVisibleAppsLinkagesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "apps"
                  ]
                },
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AppsBetaTesterUsagesV1MetricResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dataPoints": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "values": {
                      "type": "object",
                      "properties": {
                        "crashCount": {
                          "type": "integer"
                        },
                        "sessionCount": {
                          "type": "integer"
                        },
                        "feedbackCount": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "dimensions": {
                  "type": "object",
                  "properties": {
                    "betaTesters": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "groupBy": {
                              "type": "string",
                              "format": "uri-reference"
                            },
                            "related": {
                              "type": "string",
                              "format": "uri-reference"
                            }
                          }
                        },
                        "data": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BetaTester"
            }
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaTesterUsagesV1MetricResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dataPoints": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "values": {
                      "type": "object",
                      "properties": {
                        "crashCount": {
                          "type": "integer"
                        },
                        "sessionCount": {
                          "type": "integer"
                        },
                        "feedbackCount": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "dimensions": {
                  "type": "object",
                  "properties": {
                    "apps": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "groupBy": {
                              "type": "string",
                              "format": "uri-reference"
                            },
                            "related": {
                              "type": "string",
                              "format": "uri-reference"
                            }
                          }
                        },
                        "data": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "BetaBuildUsagesV1MetricResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dataPoints": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "values": {
                      "type": "object",
                      "properties": {
                        "crashCount": {
                          "type": "integer"
                        },
                        "installCount": {
                          "type": "integer"
                        },
                        "sessionCount": {
                          "type": "integer"
                        },
                        "feedbackCount": {
                          "type": "integer"
                        },
                        "inviteCount": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterMatchmakingAppRequestsV1MetricResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dataPoints": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "values": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "averageSecondsInQueue": {
                          "type": "number"
                        },
                        "p50SecondsInQueue": {
                          "type": "number"
                        },
                        "p95SecondsInQueue": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "dimensions": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "groupBy": {
                              "type": "string",
                              "format": "uri-reference"
                            }
                          }
                        },
                        "data": {
                          "type": "string",
                          "enum": [
                            "MATCHED",
                            "CANCELED",
                            "EXPIRED"
                          ]
                        }
                      }
                    }
                  }
                },
                "granularity": {
                  "type": "string",
                  "enum": [
                    "P1D",
                    "PT1H",
                    "PT15M"
                  ]
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterMatchmakingQueueSizesV1MetricResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dataPoints": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "values": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "averageNumberOfRequests": {
                          "type": "number"
                        },
                        "p50NumberOfRequests": {
                          "type": "number"
                        },
                        "p95NumberOfRequests": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "granularity": {
                  "type": "string",
                  "enum": [
                    "P1D",
                    "PT1H",
                    "PT15M"
                  ]
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterMatchmakingQueueRequestsV1MetricResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dataPoints": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "values": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "averageSecondsInQueue": {
                          "type": "number"
                        },
                        "p50SecondsInQueue": {
                          "type": "number"
                        },
                        "p95SecondsInQueue": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "dimensions": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "groupBy": {
                              "type": "string",
                              "format": "uri-reference"
                            }
                          }
                        },
                        "data": {
                          "type": "string",
                          "enum": [
                            "MATCHED",
                            "CANCELED",
                            "EXPIRED"
                          ]
                        }
                      }
                    },
                    "gameCenterDetail": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "groupBy": {
                              "type": "string",
                              "format": "uri-reference"
                            },
                            "related": {
                              "type": "string",
                              "format": "uri-reference"
                            }
                          }
                        },
                        "data": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "granularity": {
                  "type": "string",
                  "enum": [
                    "P1D",
                    "PT1H",
                    "PT15M"
                  ]
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterMatchmakingSessionsV1MetricResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dataPoints": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "values": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "averagePlayerCount": {
                          "type": "number"
                        },
                        "p50PlayerCount": {
                          "type": "number"
                        },
                        "p95PlayerCount": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "granularity": {
                  "type": "string",
                  "enum": [
                    "P1D",
                    "PT1H",
                    "PT15M"
                  ]
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterMatchmakingBooleanRuleResultsV1MetricResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dataPoints": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "values": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "dimensions": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "groupBy": {
                              "type": "string",
                              "format": "uri-reference"
                            }
                          }
                        },
                        "data": {
                          "type": "string"
                        }
                      }
                    },
                    "gameCenterMatchmakingQueue": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "groupBy": {
                              "type": "string",
                              "format": "uri-reference"
                            },
                            "related": {
                              "type": "string",
                              "format": "uri-reference"
                            }
                          }
                        },
                        "data": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "granularity": {
                  "type": "string",
                  "enum": [
                    "P1D",
                    "PT1H",
                    "PT15M"
                  ]
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterMatchmakingNumberRuleResultsV1MetricResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dataPoints": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "values": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "averageResult": {
                          "type": "number"
                        },
                        "p50Result": {
                          "type": "number"
                        },
                        "p95Result": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "dimensions": {
                  "type": "object",
                  "properties": {
                    "gameCenterMatchmakingQueue": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "groupBy": {
                              "type": "string",
                              "format": "uri-reference"
                            },
                            "related": {
                              "type": "string",
                              "format": "uri-reference"
                            }
                          }
                        },
                        "data": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "granularity": {
                  "type": "string",
                  "enum": [
                    "P1D",
                    "PT1H",
                    "PT15M"
                  ]
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "GameCenterMatchmakingRuleErrorsV1MetricResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dataPoints": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "values": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "dimensions": {
                  "type": "object",
                  "properties": {
                    "gameCenterMatchmakingQueue": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "object",
                          "properties": {
                            "groupBy": {
                              "type": "string",
                              "format": "uri-reference"
                            },
                            "related": {
                              "type": "string",
                              "format": "uri-reference"
                            }
                          }
                        },
                        "data": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "granularity": {
                  "type": "string",
                  "enum": [
                    "P1D",
                    "PT1H",
                    "PT15M"
                  ]
                }
              }
            }
          },
          "links": {
            "$ref": "#/components/schemas/PagedDocumentLinks"
          },
          "meta": {
            "$ref": "#/components/schemas/PagingInformation"
          }
        },
        "required": [
          "data",
          "links"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "string"
                },
                "source": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorSourcePointer"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorSourceParameter"
                    }
                  ]
                },
                "links": {
                  "$ref": "#/components/schemas/ErrorLinks"
                },
                "meta": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "required": [
                "code",
                "detail",
                "status",
                "title"
              ]
            }
          }
        }
      },
      "ErrorSourceParameter": {
        "type": "object",
        "title": "Parameter",
        "properties": {
          "parameter": {
            "type": "string"
          }
        },
        "required": [
          "parameter"
        ]
      },
      "ErrorSourcePointer": {
        "type": "object",
        "title": "JsonPointer",
        "properties": {
          "pointer": {
            "type": "string"
          }
        },
        "required": [
          "pointer"
        ]
      },
      "ErrorLinks": {
        "type": "object",
        "properties": {
          "about": {
            "type": "string",
            "format": "uri-reference"
          },
          "associated": {
            "oneOf": [
              {
                "type": "string",
                "format": "uri-reference"
              },
              {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri-reference"
                  },
                  "meta": {
                    "type": "object",
                    "properties": {
                      "source": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "PagedDocumentLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri-reference"
          },
          "first": {
            "type": "string",
            "format": "uri-reference"
          },
          "next": {
            "type": "string",
            "format": "uri-reference"
          }
        },
        "required": [
          "self"
        ]
      },
      "PagingInformation": {
        "type": "object",
        "properties": {
          "paging": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer"
              },
              "limit": {
                "type": "integer"
              }
            },
            "required": [
              "limit"
            ]
          }
        },
        "required": [
          "paging"
        ]
      },
      "DocumentLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri-reference"
          }
        },
        "required": [
          "self"
        ]
      },
      "ResourceLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri-reference"
          }
        }
      },
      "RelationshipLinks": {
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "format": "uri-reference"
          },
          "related": {
            "type": "string",
            "format": "uri-reference"
          }
        }
      },
      "AppClipAction": {
        "type": "string",
        "enum": [
          "OPEN",
          "VIEW",
          "PLAY"
        ]
      },
      "AppClipAdvancedExperienceLanguage": {
        "type": "string",
        "enum": [
          "AR",
          "CA",
          "CS",
          "DA",
          "DE",
          "EL",
          "EN",
          "ES",
          "FI",
          "FR",
          "HE",
          "HI",
          "HR",
          "HU",
          "ID",
          "IT",
          "JA",
          "KO",
          "MS",
          "NL",
          "NO",
          "PL",
          "PT",
          "RO",
          "RU",
          "SK",
          "SV",
          "TH",
          "TR",
          "UK",
          "VI",
          "ZH"
        ]
      },
      "AppEncryptionDeclarationState": {
        "type": "string",
        "enum": [
          "CREATED",
          "IN_REVIEW",
          "APPROVED",
          "REJECTED",
          "INVALID",
          "EXPIRED"
        ]
      },
      "AppEventAssetType": {
        "type": "string",
        "enum": [
          "EVENT_CARD",
          "EVENT_DETAILS_PAGE"
        ]
      },
      "AppMediaAssetState": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppMediaStateError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppMediaStateError"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "AWAITING_UPLOAD",
              "UPLOAD_COMPLETE",
              "COMPLETE",
              "FAILED"
            ]
          }
        }
      },
      "AppMediaPreviewFrameImageState": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppMediaStateError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppMediaStateError"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "PROCESSING",
              "COMPLETE",
              "FAILED"
            ]
          }
        }
      },
      "AppMediaStateError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "AppMediaVideoState": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppMediaStateError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppMediaStateError"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "AWAITING_UPLOAD",
              "UPLOAD_COMPLETE",
              "PROCESSING",
              "COMPLETE",
              "FAILED"
            ]
          }
        }
      },
      "AppStoreAgeRating": {
        "type": "string",
        "enum": [
          "FOUR_PLUS",
          "NINE_PLUS",
          "TWELVE_PLUS",
          "SEVENTEEN_PLUS",
          "UNRATED"
        ]
      },
      "AppStoreVersionState": {
        "type": "string",
        "enum": [
          "ACCEPTED",
          "DEVELOPER_REMOVED_FROM_SALE",
          "DEVELOPER_REJECTED",
          "IN_REVIEW",
          "INVALID_BINARY",
          "METADATA_REJECTED",
          "PENDING_APPLE_RELEASE",
          "PENDING_CONTRACT",
          "PENDING_DEVELOPER_RELEASE",
          "PREPARE_FOR_SUBMISSION",
          "PREORDER_READY_FOR_SALE",
          "PROCESSING_FOR_APP_STORE",
          "READY_FOR_REVIEW",
          "READY_FOR_SALE",
          "REJECTED",
          "REMOVED_FROM_SALE",
          "WAITING_FOR_EXPORT_COMPLIANCE",
          "WAITING_FOR_REVIEW",
          "REPLACED_WITH_NEW_VERSION",
          "NOT_APPLICABLE"
        ]
      },
      "AppVersionState": {
        "type": "string",
        "enum": [
          "ACCEPTED",
          "DEVELOPER_REJECTED",
          "IN_REVIEW",
          "INVALID_BINARY",
          "METADATA_REJECTED",
          "PENDING_APPLE_RELEASE",
          "PENDING_DEVELOPER_RELEASE",
          "PREPARE_FOR_SUBMISSION",
          "PROCESSING_FOR_DISTRIBUTION",
          "READY_FOR_DISTRIBUTION",
          "READY_FOR_REVIEW",
          "REJECTED",
          "REPLACED_WITH_NEW_VERSION",
          "WAITING_FOR_EXPORT_COMPLIANCE",
          "WAITING_FOR_REVIEW"
        ]
      },
      "BetaInviteType": {
        "type": "string",
        "enum": [
          "EMAIL",
          "PUBLIC_LINK"
        ]
      },
      "BetaReviewState": {
        "type": "string",
        "enum": [
          "WAITING_FOR_REVIEW",
          "IN_REVIEW",
          "REJECTED",
          "APPROVED"
        ]
      },
      "BetaTesterState": {
        "type": "string",
        "enum": [
          "NOT_INVITED",
          "INVITED",
          "ACCEPTED",
          "INSTALLED",
          "REVOKED"
        ]
      },
      "BrazilAgeRating": {
        "type": "string",
        "enum": [
          "L",
          "TEN",
          "TWELVE",
          "FOURTEEN",
          "SIXTEEN",
          "EIGHTEEN"
        ]
      },
      "BuildAudienceType": {
        "type": "string",
        "enum": [
          "INTERNAL_ONLY",
          "APP_STORE_ELIGIBLE"
        ]
      },
      "BundleIdPlatform": {
        "type": "string",
        "enum": [
          "IOS",
          "MAC_OS",
          "UNIVERSAL",
          "SERVICES"
        ]
      },
      "CapabilityOption": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "enum": [
              "XCODE_5",
              "XCODE_6",
              "COMPLETE_PROTECTION",
              "PROTECTED_UNLESS_OPEN",
              "PROTECTED_UNTIL_FIRST_USER_AUTH",
              "PRIMARY_APP_CONSENT"
            ]
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabledByDefault": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "supportsWildcard": {
            "type": "boolean"
          }
        }
      },
      "CapabilitySetting": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "enum": [
              "ICLOUD_VERSION",
              "DATA_PROTECTION_PERMISSION_LEVEL",
              "APPLE_ID_AUTH_APP_CONSENT"
            ]
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabledByDefault": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean"
          },
          "allowedInstances": {
            "type": "string",
            "enum": [
              "ENTRY",
              "SINGLE",
              "MULTIPLE"
            ]
          },
          "minInstances": {
            "type": "integer"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CapabilityOption"
            }
          }
        }
      },
      "CapabilityType": {
        "type": "string",
        "enum": [
          "ICLOUD",
          "IN_APP_PURCHASE",
          "GAME_CENTER",
          "PUSH_NOTIFICATIONS",
          "WALLET",
          "INTER_APP_AUDIO",
          "MAPS",
          "ASSOCIATED_DOMAINS",
          "PERSONAL_VPN",
          "APP_GROUPS",
          "HEALTHKIT",
          "HOMEKIT",
          "WIRELESS_ACCESSORY_CONFIGURATION",
          "APPLE_PAY",
          "DATA_PROTECTION",
          "SIRIKIT",
          "NETWORK_EXTENSIONS",
          "MULTIPATH",
          "HOT_SPOT",
          "NFC_TAG_READING",
          "CLASSKIT",
          "AUTOFILL_CREDENTIAL_PROVIDER",
          "ACCESS_WIFI_INFORMATION",
          "NETWORK_CUSTOM_PROTOCOL",
          "COREMEDIA_HLS_LOW_LATENCY",
          "SYSTEM_EXTENSION_INSTALL",
          "USER_MANAGEMENT",
          "APPLE_ID_AUTH"
        ]
      },
      "CertificateType": {
        "type": "string",
        "enum": [
          "IOS_DEVELOPMENT",
          "IOS_DISTRIBUTION",
          "MAC_APP_DISTRIBUTION",
          "MAC_INSTALLER_DISTRIBUTION",
          "MAC_APP_DEVELOPMENT",
          "DEVELOPER_ID_KEXT",
          "DEVELOPER_ID_KEXT_G2",
          "DEVELOPER_ID_APPLICATION",
          "DEVELOPER_ID_APPLICATION_G2",
          "DEVELOPMENT",
          "DISTRIBUTION",
          "PASS_TYPE_ID",
          "PASS_TYPE_ID_WITH_NFC"
        ]
      },
      "CiAction": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "actionType": {
            "$ref": "#/components/schemas/CiActionType"
          },
          "destination": {
            "type": "string",
            "enum": [
              "ANY_IOS_DEVICE",
              "ANY_IOS_SIMULATOR",
              "ANY_TVOS_DEVICE",
              "ANY_TVOS_SIMULATOR",
              "ANY_WATCHOS_DEVICE",
              "ANY_WATCHOS_SIMULATOR",
              "ANY_MAC",
              "ANY_MAC_CATALYST",
              "ANY_VISIONOS_DEVICE",
              "ANY_VISIONOS_SIMULATOR"
            ]
          },
          "buildDistributionAudience": {
            "$ref": "#/components/schemas/BuildAudienceType"
          },
          "testConfiguration": {
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "USE_SCHEME_SETTINGS",
                  "SPECIFIC_TEST_PLANS"
                ]
              },
              "testPlanName": {
                "type": "string"
              },
              "testDestinations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CiTestDestination"
                }
              }
            }
          },
          "scheme": {
            "type": "string"
          },
          "platform": {
            "type": "string",
            "enum": [
              "MACOS",
              "IOS",
              "TVOS",
              "WATCHOS",
              "VISIONOS"
            ]
          },
          "isRequiredToPass": {
            "type": "boolean"
          }
        }
      },
      "CiActionType": {
        "type": "string",
        "enum": [
          "BUILD",
          "ANALYZE",
          "TEST",
          "ARCHIVE"
        ]
      },
      "CiBranchPatterns": {
        "type": "object",
        "properties": {
          "isAllMatch": {
            "type": "boolean"
          },
          "patterns": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pattern": {
                  "type": "string"
                },
                "isPrefix": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "CiBranchStartCondition": {
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/CiBranchPatterns"
          },
          "filesAndFoldersRule": {
            "$ref": "#/components/schemas/CiFilesAndFoldersRule"
          },
          "autoCancel": {
            "type": "boolean"
          }
        }
      },
      "CiCompletionStatus": {
        "type": "string",
        "enum": [
          "SUCCEEDED",
          "FAILED",
          "ERRORED",
          "CANCELED",
          "SKIPPED"
        ]
      },
      "CiExecutionProgress": {
        "type": "string",
        "enum": [
          "PENDING",
          "RUNNING",
          "COMPLETE"
        ]
      },
      "CiFilesAndFoldersRule": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "enum": [
              "START_IF_ANY_FILE_MATCHES",
              "DO_NOT_START_IF_ALL_FILES_MATCH"
            ]
          },
          "matchers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CiStartConditionFileMatcher"
            }
          }
        }
      },
      "CiGitRefKind": {
        "type": "string",
        "enum": [
          "BRANCH",
          "TAG"
        ]
      },
      "CiGitUser": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "CiIssueCounts": {
        "type": "object",
        "properties": {
          "analyzerWarnings": {
            "type": "integer"
          },
          "errors": {
            "type": "integer"
          },
          "testFailures": {
            "type": "integer"
          },
          "warnings": {
            "type": "integer"
          }
        }
      },
      "CiManualBranchStartCondition": {
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/CiBranchPatterns"
          }
        }
      },
      "CiManualPullRequestStartCondition": {
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/CiBranchPatterns"
          },
          "destination": {
            "$ref": "#/components/schemas/CiBranchPatterns"
          }
        }
      },
      "CiManualTagStartCondition": {
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/CiTagPatterns"
          }
        }
      },
      "CiPullRequestStartCondition": {
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/CiBranchPatterns"
          },
          "destination": {
            "$ref": "#/components/schemas/CiBranchPatterns"
          },
          "filesAndFoldersRule": {
            "$ref": "#/components/schemas/CiFilesAndFoldersRule"
          },
          "autoCancel": {
            "type": "boolean"
          }
        }
      },
      "CiScheduledStartCondition": {
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/CiBranchPatterns"
          },
          "schedule": {
            "type": "object",
            "properties": {
              "frequency": {
                "type": "string",
                "enum": [
                  "WEEKLY",
                  "DAILY",
                  "HOURLY"
                ]
              },
              "days": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "SUNDAY",
                    "MONDAY",
                    "TUESDAY",
                    "WEDNESDAY",
                    "THURSDAY",
                    "FRIDAY",
                    "SATURDAY"
                  ]
                }
              },
              "hour": {
                "type": "integer"
              },
              "minute": {
                "type": "integer"
              },
              "timezone": {
                "type": "string"
              }
            }
          }
        }
      },
      "CiStartConditionFileMatcher": {
        "type": "object",
        "properties": {
          "directory": {
            "type": "string"
          },
          "fileExtension": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          }
        }
      },
      "CiTagPatterns": {
        "type": "object",
        "properties": {
          "isAllMatch": {
            "type": "boolean"
          },
          "patterns": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pattern": {
                  "type": "string"
                },
                "isPrefix": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "CiTagStartCondition": {
        "type": "object",
        "properties": {
          "source": {
            "$ref": "#/components/schemas/CiTagPatterns"
          },
          "filesAndFoldersRule": {
            "$ref": "#/components/schemas/CiFilesAndFoldersRule"
          },
          "autoCancel": {
            "type": "boolean"
          }
        }
      },
      "CiTestDestination": {
        "type": "object",
        "properties": {
          "deviceTypeName": {
            "type": "string"
          },
          "deviceTypeIdentifier": {
            "type": "string"
          },
          "runtimeName": {
            "type": "string"
          },
          "runtimeIdentifier": {
            "type": "string"
          },
          "kind": {
            "$ref": "#/components/schemas/CiTestDestinationKind"
          }
        }
      },
      "CiTestDestinationKind": {
        "type": "string",
        "enum": [
          "SIMULATOR",
          "MAC"
        ]
      },
      "CiTestStatus": {
        "type": "string",
        "enum": [
          "SUCCESS",
          "FAILURE",
          "MIXED",
          "SKIPPED",
          "EXPECTED_FAILURE"
        ]
      },
      "DiagnosticInsight": {
        "type": "object",
        "properties": {
          "insightType": {
            "$ref": "#/components/schemas/DiagnosticInsightType"
          },
          "direction": {
            "$ref": "#/components/schemas/DiagnosticInsightDirection"
          },
          "referenceVersions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string"
                },
                "value": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "DiagnosticInsightDirection": {
        "type": "string",
        "enum": [
          "UP",
          "DOWN",
          "UNDEFINED"
        ]
      },
      "DiagnosticInsightType": {
        "type": "string",
        "enum": [
          "TREND"
        ]
      },
      "DiagnosticLogCallStackNode": {
        "type": "object",
        "properties": {
          "sampleCount": {
            "type": "integer"
          },
          "isBlameFrame": {
            "type": "boolean"
          },
          "symbolName": {
            "type": "string"
          },
          "insightsCategory": {
            "type": "string"
          },
          "offsetIntoSymbol": {
            "type": "string"
          },
          "binaryName": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "binaryUUID": {
            "type": "string"
          },
          "lineNumber": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "offsetIntoBinaryTextSegment": {
            "type": "string"
          },
          "rawFrame": {
            "type": "string"
          },
          "subFrames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiagnosticLogCallStackNode"
            }
          }
        }
      },
      "ExternalBetaState": {
        "type": "string",
        "enum": [
          "PROCESSING",
          "PROCESSING_EXCEPTION",
          "MISSING_EXPORT_COMPLIANCE",
          "READY_FOR_BETA_TESTING",
          "IN_BETA_TESTING",
          "EXPIRED",
          "READY_FOR_BETA_SUBMISSION",
          "IN_EXPORT_COMPLIANCE_REVIEW",
          "WAITING_FOR_BETA_REVIEW",
          "IN_BETA_REVIEW",
          "BETA_REJECTED",
          "BETA_APPROVED"
        ]
      },
      "FileLocation": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "lineNumber": {
            "type": "integer"
          }
        }
      },
      "GameCenterLeaderboardFormatter": {
        "type": "string",
        "enum": [
          "INTEGER",
          "DECIMAL_POINT_1_PLACE",
          "DECIMAL_POINT_2_PLACE",
          "DECIMAL_POINT_3_PLACE",
          "ELAPSED_TIME_MILLISECOND",
          "ELAPSED_TIME_CENTISECOND",
          "ELAPSED_TIME_MINUTE",
          "ELAPSED_TIME_SECOND",
          "MONEY_POUND_DECIMAL",
          "MONEY_POUND",
          "MONEY_DOLLAR_DECIMAL",
          "MONEY_DOLLAR",
          "MONEY_EURO_DECIMAL",
          "MONEY_EURO",
          "MONEY_FRANC_DECIMAL",
          "MONEY_FRANC",
          "MONEY_KRONER_DECIMAL",
          "MONEY_KRONER",
          "MONEY_YEN"
        ]
      },
      "GameCenterMatchmakingTeamAssignment": {
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string"
          },
          "team": {
            "type": "string"
          }
        }
      },
      "HttpHeader": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "IconAssetType": {
        "type": "string",
        "enum": [
          "APP_STORE",
          "MESSAGES_APP_STORE",
          "WATCH_APP_STORE",
          "TV_OS_HOME_SCREEN",
          "TV_OS_TOP_SHELF",
          "ALTERNATE_EXPERIMENT"
        ]
      },
      "ImageAsset": {
        "type": "object",
        "properties": {
          "templateUrl": {
            "type": "string"
          },
          "width": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          }
        }
      },
      "InAppPurchaseState": {
        "type": "string",
        "enum": [
          "MISSING_METADATA",
          "WAITING_FOR_UPLOAD",
          "PROCESSING_CONTENT",
          "READY_TO_SUBMIT",
          "WAITING_FOR_REVIEW",
          "IN_REVIEW",
          "DEVELOPER_ACTION_NEEDED",
          "PENDING_BINARY_APPROVAL",
          "APPROVED",
          "DEVELOPER_REMOVED_FROM_SALE",
          "REMOVED_FROM_SALE",
          "REJECTED"
        ]
      },
      "InAppPurchaseType": {
        "type": "string",
        "enum": [
          "CONSUMABLE",
          "NON_CONSUMABLE",
          "NON_RENEWING_SUBSCRIPTION"
        ]
      },
      "IntegerRange": {
        "type": "object",
        "properties": {
          "minimum": {
            "type": "integer"
          },
          "maximum": {
            "type": "integer"
          }
        }
      },
      "InternalBetaState": {
        "type": "string",
        "enum": [
          "PROCESSING",
          "PROCESSING_EXCEPTION",
          "MISSING_EXPORT_COMPLIANCE",
          "READY_FOR_BETA_TESTING",
          "IN_BETA_TESTING",
          "EXPIRED",
          "IN_EXPORT_COMPLIANCE_REVIEW"
        ]
      },
      "KidsAgeBand": {
        "type": "string",
        "enum": [
          "FIVE_AND_UNDER",
          "SIX_TO_EIGHT",
          "NINE_TO_ELEVEN"
        ]
      },
      "Location": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          }
        }
      },
      "MetricCategory": {
        "type": "string",
        "enum": [
          "HANG",
          "LAUNCH",
          "MEMORY",
          "DISK",
          "BATTERY",
          "TERMINATION",
          "ANIMATION"
        ]
      },
      "MetricsInsight": {
        "type": "object",
        "properties": {
          "metricCategory": {
            "$ref": "#/components/schemas/MetricCategory"
          },
          "latestVersion": {
            "type": "string"
          },
          "metric": {
            "type": "string"
          },
          "summaryString": {
            "type": "string"
          },
          "referenceVersions": {
            "type": "string"
          },
          "maxLatestVersionValue": {
            "type": "number"
          },
          "subSystemLabel": {
            "type": "string"
          },
          "highImpact": {
            "type": "boolean"
          },
          "populations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "deltaPercentage": {
                  "type": "number"
                },
                "percentile": {
                  "type": "string"
                },
                "summaryString": {
                  "type": "string"
                },
                "referenceAverageValue": {
                  "type": "number"
                },
                "latestVersionValue": {
                  "type": "number"
                },
                "device": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "PhasedReleaseState": {
        "type": "string",
        "enum": [
          "INACTIVE",
          "ACTIVE",
          "PAUSED",
          "COMPLETE"
        ]
      },
      "Platform": {
        "type": "string",
        "enum": [
          "IOS",
          "MAC_OS",
          "TV_OS",
          "VISION_OS"
        ]
      },
      "PreviewFrameImage": {
        "type": "object",
        "properties": {
          "image": {
            "$ref": "#/components/schemas/ImageAsset"
          },
          "state": {
            "$ref": "#/components/schemas/AppMediaPreviewFrameImageState"
          }
        }
      },
      "PreviewType": {
        "type": "string",
        "enum": [
          "IPHONE_67",
          "IPHONE_61",
          "IPHONE_65",
          "IPHONE_58",
          "IPHONE_55",
          "IPHONE_47",
          "IPHONE_40",
          "IPHONE_35",
          "IPAD_PRO_3GEN_129",
          "IPAD_PRO_3GEN_11",
          "IPAD_PRO_129",
          "IPAD_105",
          "IPAD_97",
          "DESKTOP",
          "APPLE_TV",
          "APPLE_VISION_PRO"
        ]
      },
      "Property": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "ScmProviderType": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "BITBUCKET_CLOUD",
              "BITBUCKET_SERVER",
              "GITHUB_CLOUD",
              "GITHUB_ENTERPRISE",
              "GITLAB_CLOUD",
              "GITLAB_SELF_MANAGED"
            ]
          },
          "displayName": {
            "type": "string"
          },
          "isOnPremise": {
            "type": "boolean"
          }
        }
      },
      "ScreenshotDisplayType": {
        "type": "string",
        "enum": [
          "APP_IPHONE_67",
          "APP_IPHONE_61",
          "APP_IPHONE_65",
          "APP_IPHONE_58",
          "APP_IPHONE_55",
          "APP_IPHONE_47",
          "APP_IPHONE_40",
          "APP_IPHONE_35",
          "APP_IPAD_PRO_3GEN_129",
          "APP_IPAD_PRO_3GEN_11",
          "APP_IPAD_PRO_129",
          "APP_IPAD_105",
          "APP_IPAD_97",
          "APP_DESKTOP",
          "APP_WATCH_ULTRA",
          "APP_WATCH_SERIES_10",
          "APP_WATCH_SERIES_7",
          "APP_WATCH_SERIES_4",
          "APP_WATCH_SERIES_3",
          "APP_APPLE_TV",
          "APP_APPLE_VISION_PRO",
          "IMESSAGE_APP_IPHONE_67",
          "IMESSAGE_APP_IPHONE_61",
          "IMESSAGE_APP_IPHONE_65",
          "IMESSAGE_APP_IPHONE_58",
          "IMESSAGE_APP_IPHONE_55",
          "IMESSAGE_APP_IPHONE_47",
          "IMESSAGE_APP_IPHONE_40",
          "IMESSAGE_APP_IPAD_PRO_3GEN_129",
          "IMESSAGE_APP_IPAD_PRO_3GEN_11",
          "IMESSAGE_APP_IPAD_PRO_129",
          "IMESSAGE_APP_IPAD_105",
          "IMESSAGE_APP_IPAD_97"
        ]
      },
      "SubscriptionCustomerEligibility": {
        "type": "string",
        "enum": [
          "NEW",
          "EXISTING",
          "EXPIRED"
        ]
      },
      "SubscriptionGracePeriodDuration": {
        "type": "string",
        "enum": [
          "THREE_DAYS",
          "SIXTEEN_DAYS",
          "TWENTY_EIGHT_DAYS"
        ]
      },
      "SubscriptionOfferDuration": {
        "type": "string",
        "enum": [
          "THREE_DAYS",
          "ONE_WEEK",
          "TWO_WEEKS",
          "ONE_MONTH",
          "TWO_MONTHS",
          "THREE_MONTHS",
          "SIX_MONTHS",
          "ONE_YEAR"
        ]
      },
      "SubscriptionOfferEligibility": {
        "type": "string",
        "enum": [
          "STACK_WITH_INTRO_OFFERS",
          "REPLACE_INTRO_OFFERS"
        ]
      },
      "SubscriptionOfferMode": {
        "type": "string",
        "enum": [
          "PAY_AS_YOU_GO",
          "PAY_UP_FRONT",
          "FREE_TRIAL"
        ]
      },
      "SubscriptionStatusUrlVersion": {
        "type": "string",
        "enum": [
          "V1",
          "V2"
        ]
      },
      "TerritoryCode": {
        "type": "string",
        "enum": [
          "ABW",
          "AFG",
          "AGO",
          "AIA",
          "ALB",
          "AND",
          "ANT",
          "ARE",
          "ARG",
          "ARM",
          "ASM",
          "ATG",
          "AUS",
          "AUT",
          "AZE",
          "BDI",
          "BEL",
          "BEN",
          "BES",
          "BFA",
          "BGD",
          "BGR",
          "BHR",
          "BHS",
          "BIH",
          "BLR",
          "BLZ",
          "BMU",
          "BOL",
          "BRA",
          "BRB",
          "BRN",
          "BTN",
          "BWA",
          "CAF",
          "CAN",
          "CHE",
          "CHL",
          "CHN",
          "CIV",
          "CMR",
          "COD",
          "COG",
          "COK",
          "COL",
          "COM",
          "CPV",
          "CRI",
          "CUB",
          "CUW",
          "CXR",
          "CYM",
          "CYP",
          "CZE",
          "DEU",
          "DJI",
          "DMA",
          "DNK",
          "DOM",
          "DZA",
          "ECU",
          "EGY",
          "ERI",
          "ESP",
          "EST",
          "ETH",
          "FIN",
          "FJI",
          "FLK",
          "FRA",
          "FRO",
          "FSM",
          "GAB",
          "GBR",
          "GEO",
          "GGY",
          "GHA",
          "GIB",
          "GIN",
          "GLP",
          "GMB",
          "GNB",
          "GNQ",
          "GRC",
          "GRD",
          "GRL",
          "GTM",
          "GUF",
          "GUM",
          "GUY",
          "HKG",
          "HND",
          "HRV",
          "HTI",
          "HUN",
          "IDN",
          "IMN",
          "IND",
          "IRL",
          "IRQ",
          "ISL",
          "ISR",
          "ITA",
          "JAM",
          "JEY",
          "JOR",
          "JPN",
          "KAZ",
          "KEN",
          "KGZ",
          "KHM",
          "KIR",
          "KNA",
          "KOR",
          "KWT",
          "LAO",
          "LBN",
          "LBR",
          "LBY",
          "LCA",
          "LIE",
          "LKA",
          "LSO",
          "LTU",
          "LUX",
          "LVA",
          "MAC",
          "MAR",
          "MCO",
          "MDA",
          "MDG",
          "MDV",
          "MEX",
          "MHL",
          "MKD",
          "MLI",
          "MLT",
          "MMR",
          "MNE",
          "MNG",
          "MNP",
          "MOZ",
          "MRT",
          "MSR",
          "MTQ",
          "MUS",
          "MWI",
          "MYS",
          "MYT",
          "NAM",
          "NCL",
          "NER",
          "NFK",
          "NGA",
          "NIC",
          "NIU",
          "NLD",
          "NOR",
          "NPL",
          "NRU",
          "NZL",
          "OMN",
          "PAK",
          "PAN",
          "PER",
          "PHL",
          "PLW",
          "PNG",
          "POL",
          "PRI",
          "PRT",
          "PRY",
          "PSE",
          "PYF",
          "QAT",
          "REU",
          "ROU",
          "RUS",
          "RWA",
          "SAU",
          "SEN",
          "SGP",
          "SHN",
          "SLB",
          "SLE",
          "SLV",
          "SMR",
          "SOM",
          "SPM",
          "SRB",
          "SSD",
          "STP",
          "SUR",
          "SVK",
          "SVN",
          "SWE",
          "SWZ",
          "SXM",
          "SYC",
          "TCA",
          "TCD",
          "TGO",
          "THA",
          "TJK",
          "TKM",
          "TLS",
          "TON",
          "TTO",
          "TUN",
          "TUR",
          "TUV",
          "TWN",
          "TZA",
          "UGA",
          "UKR",
          "UMI",
          "URY",
          "USA",
          "UZB",
          "VAT",
          "VCT",
          "VEN",
          "VGB",
          "VIR",
          "VNM",
          "VUT",
          "WLF",
          "WSM",
          "YEM",
          "ZAF",
          "ZMB",
          "ZWE"
        ]
      },
      "UploadOperation": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "length": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          },
          "requestHeaders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HttpHeader"
            }
          }
        }
      },
      "UserRole": {
        "type": "string",
        "enum": [
          "ADMIN",
          "FINANCE",
          "ACCOUNT_HOLDER",
          "SALES",
          "MARKETING",
          "APP_MANAGER",
          "DEVELOPER",
          "ACCESS_TO_REPORTS",
          "CUSTOMER_SUPPORT",
          "CREATE_APPS",
          "CLOUD_MANAGED_DEVELOPER_ID",
          "CLOUD_MANAGED_APP_DISTRIBUTION",
          "GENERATE_INDIVIDUAL_KEYS"
        ]
      },
      "csv": {
        "type": "string"
      },
      "diagnosticLogs": {
        "type": "object",
        "properties": {
          "productData": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "signatureId": {
                  "type": "string"
                },
                "diagnosticInsights": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "insightsURL": {
                        "type": "string"
                      },
                      "insightsCategory": {
                        "type": "string"
                      },
                      "insightsString": {
                        "type": "string"
                      }
                    }
                  }
                },
                "diagnosticLogs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "callStackTree": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "callStackPerThread": {
                              "type": "boolean"
                            },
                            "callStacks": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "callStackRootFrames": {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/components/schemas/DiagnosticLogCallStackNode"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "diagnosticMetaData": {
                        "type": "object",
                        "properties": {
                          "bundleId": {
                            "type": "string"
                          },
                          "event": {
                            "type": "string"
                          },
                          "osVersion": {
                            "type": "string"
                          },
                          "appVersion": {
                            "type": "string"
                          },
                          "writesCaused": {
                            "type": "string"
                          },
                          "deviceType": {
                            "type": "string"
                          },
                          "platformArchitecture": {
                            "type": "string"
                          },
                          "eventDetail": {
                            "type": "string"
                          },
                          "buildVersion": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "version": {
            "type": "string"
          }
        }
      },
      "gzip": {
        "type": "string",
        "format": "binary"
      },
      "xcodeMetrics": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          },
          "insights": {
            "type": "object",
            "properties": {
              "trendingUp": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MetricsInsight"
                }
              },
              "regressions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MetricsInsight"
                }
              }
            }
          },
          "productData": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "platform": {
                  "type": "string"
                },
                "metricCategories": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "identifier": {
                        "$ref": "#/components/schemas/MetricCategory"
                      },
                      "metrics": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "identifier": {
                              "type": "string"
                            },
                            "goalKeys": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "goalKey": {
                                    "type": "string"
                                  },
                                  "lowerBound": {
                                    "type": "integer"
                                  },
                                  "upperBound": {
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "unit": {
                              "type": "object",
                              "properties": {
                                "identifier": {
                                  "type": "string"
                                },
                                "displayName": {
                                  "type": "string"
                                }
                              }
                            },
                            "datasets": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "filterCriteria": {
                                    "type": "object",
                                    "properties": {
                                      "percentile": {
                                        "type": "string"
                                      },
                                      "device": {
                                        "type": "string"
                                      },
                                      "deviceMarketingName": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "points": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "version": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "number"
                                        },
                                        "errorMargin": {
                                          "type": "number"
                                        },
                                        "percentageBreakdown": {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "number"
                                            },
                                            "subSystemLabel": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "goal": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "itc-bearer-token": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "itc-bearer-token": []
    }
  ]
}
