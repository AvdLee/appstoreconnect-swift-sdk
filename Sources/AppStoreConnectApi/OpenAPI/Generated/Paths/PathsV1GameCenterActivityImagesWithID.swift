// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import AppStoreConnectApiCore
import URLQueryEncoder

extension APIEndpoint.V1.GameCenterActivityImages {
	public func id(_ id: String) -> WithID {
		WithID(path: "\(path)/\(id)")
	}

	public struct WithID {
		/// Path: `/v1/gameCenterActivityImages/{id}`
		public let path: String

		public func get(fieldsGameCenterActivityImages: [FieldsGameCenterActivityImages]? = nil) -> Request<AppStoreConnectApi.GameCenterActivityImageResponse> {
			Request(path: path, method: "GET", query: makeGetQuery(fieldsGameCenterActivityImages), id: "gameCenterActivityImages_getInstance")
		}

		private func makeGetQuery(_ fieldsGameCenterActivityImages: [FieldsGameCenterActivityImages]?) -> [(String, String?)] {
			let encoder = URLQueryEncoder()
			encoder.encode(fieldsGameCenterActivityImages, forKey: "fields[gameCenterActivityImages]", explode: false)
			return encoder.items
		}

		public enum FieldsGameCenterActivityImages: String, Codable, CaseIterable {
			case fileSize
			case fileName
			case imageAsset
			case uploadOperations
			case assetDeliveryState
		}

		public func patch(_ body: AppStoreConnectApi.GameCenterActivityImageUpdateRequest) -> Request<AppStoreConnectApi.GameCenterActivityImageResponse> {
			Request(path: path, method: "PATCH", body: body, id: "gameCenterActivityImages_updateInstance")
		}

		public var delete: Request<Void> {
			Request(path: path, method: "DELETE", id: "gameCenterActivityImages_deleteInstance")
		}
	}
}
