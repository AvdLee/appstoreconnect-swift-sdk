// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import AppStoreConnectApiCore
import URLQueryEncoder

extension APIEndpoint.V1.GameCenterLeaderboardSets.WithID.Relationships {
	public var gameCenterLeaderboards: GameCenterLeaderboards {
		GameCenterLeaderboards(path: path + "/gameCenterLeaderboards")
	}

	public struct GameCenterLeaderboards {
		/// Path: `/v1/gameCenterLeaderboardSets/{id}/relationships/gameCenterLeaderboards`
		public let path: String

		public func get(limit: Int? = nil) -> Request<AppStoreConnectApi.GameCenterLeaderboardSetGameCenterLeaderboardsLinkagesResponse> {
			Request(path: path, method: "GET", query: makeGetQuery(limit), id: "gameCenterLeaderboardSets_gameCenterLeaderboards_getToManyRelationship")
		}

		private func makeGetQuery(_ limit: Int?) -> [(String, String?)] {
			let encoder = URLQueryEncoder()
			encoder.encode(limit, forKey: "limit")
			return encoder.items
		}

		public func post(_ body: AppStoreConnectApi.GameCenterLeaderboardSetGameCenterLeaderboardsLinkagesRequest) -> Request<Void> {
			Request(path: path, method: "POST", body: body, id: "gameCenterLeaderboardSets_gameCenterLeaderboards_createToManyRelationship")
		}

		public func patch(_ body: AppStoreConnectApi.GameCenterLeaderboardSetGameCenterLeaderboardsLinkagesRequest) -> Request<Void> {
			Request(path: path, method: "PATCH", body: body, id: "gameCenterLeaderboardSets_gameCenterLeaderboards_replaceToManyRelationship")
		}

		public func delete(_ body: AppStoreConnectApi.GameCenterLeaderboardSetGameCenterLeaderboardsLinkagesRequest) -> Request<Void> {
			Request(path: path, method: "DELETE", body: body, id: "gameCenterLeaderboardSets_gameCenterLeaderboards_deleteToManyRelationship")
		}
	}
}
